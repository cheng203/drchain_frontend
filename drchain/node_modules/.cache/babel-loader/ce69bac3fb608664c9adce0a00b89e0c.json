{"ast":null,"code":"import _extends from 'babel-runtime/helpers/extends';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'mini-store';\nimport ColGroup from './ColGroup';\nimport TableHeader from './TableHeader';\nimport TableRow from './TableRow';\nimport ExpandableRow from './ExpandableRow';\n\nvar BaseTable = function (_React$Component) {\n  _inherits(BaseTable, _React$Component);\n\n  function BaseTable() {\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, BaseTable);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.handleRowHover = function (isHover, key) {\n      _this.props.store.setState({\n        currentHoverKey: isHover ? key : null\n      });\n    }, _this.renderRows = function (renderData, indent) {\n      var ancestorKeys = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n      var table = _this.context.table;\n      var columnManager = table.columnManager,\n          components = table.components;\n      var _table$props = table.props,\n          prefixCls = _table$props.prefixCls,\n          childrenColumnName = _table$props.childrenColumnName,\n          rowClassName = _table$props.rowClassName,\n          rowRef = _table$props.rowRef,\n          onRowClick = _table$props.onRowClick,\n          onRowDoubleClick = _table$props.onRowDoubleClick,\n          onRowContextMenu = _table$props.onRowContextMenu,\n          onRowMouseEnter = _table$props.onRowMouseEnter,\n          onRowMouseLeave = _table$props.onRowMouseLeave,\n          onRow = _table$props.onRow;\n      var _this$props = _this.props,\n          getRowKey = _this$props.getRowKey,\n          fixed = _this$props.fixed,\n          expander = _this$props.expander,\n          isAnyColumnsFixed = _this$props.isAnyColumnsFixed;\n      var rows = [];\n\n      var _loop = function _loop(i) {\n        var record = renderData[i];\n        var key = getRowKey(record, i);\n        var className = typeof rowClassName === 'string' ? rowClassName : rowClassName(record, i, indent);\n        var onHoverProps = {};\n\n        if (columnManager.isAnyColumnsFixed()) {\n          onHoverProps.onHover = _this.handleRowHover;\n        }\n\n        var leafColumns = void 0;\n\n        if (fixed === 'left') {\n          leafColumns = columnManager.leftLeafColumns();\n        } else if (fixed === 'right') {\n          leafColumns = columnManager.rightLeafColumns();\n        } else {\n          leafColumns = columnManager.leafColumns();\n        }\n\n        var rowPrefixCls = prefixCls + '-row';\n        var row = React.createElement(ExpandableRow, _extends({}, expander.props, {\n          fixed: fixed,\n          index: i,\n          prefixCls: rowPrefixCls,\n          record: record,\n          key: key,\n          rowKey: key,\n          onRowClick: onRowClick,\n          needIndentSpaced: expander.needIndentSpaced,\n          onExpandedChange: expander.handleExpandChange\n        }), function (expandableRow) {\n          return (// eslint-disable-line\n            React.createElement(TableRow, _extends({\n              fixed: fixed,\n              indent: indent,\n              className: className,\n              record: record,\n              index: i,\n              prefixCls: rowPrefixCls,\n              childrenColumnName: childrenColumnName,\n              columns: leafColumns,\n              onRow: onRow,\n              onRowDoubleClick: onRowDoubleClick,\n              onRowContextMenu: onRowContextMenu,\n              onRowMouseEnter: onRowMouseEnter,\n              onRowMouseLeave: onRowMouseLeave\n            }, onHoverProps, {\n              rowKey: key,\n              ancestorKeys: ancestorKeys,\n              ref: rowRef(record, i, indent),\n              components: components,\n              isAnyColumnsFixed: isAnyColumnsFixed\n            }, expandableRow))\n          );\n        });\n        rows.push(row);\n        expander.renderRows(_this.renderRows, rows, record, i, indent, fixed, key, ancestorKeys);\n      };\n\n      for (var i = 0; i < renderData.length; i++) {\n        _loop(i);\n      }\n\n      return rows;\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  BaseTable.prototype.render = function render() {\n    var table = this.context.table;\n    var components = table.components;\n    var _table$props2 = table.props,\n        prefixCls = _table$props2.prefixCls,\n        scroll = _table$props2.scroll,\n        data = _table$props2.data,\n        getBodyWrapper = _table$props2.getBodyWrapper;\n    var _props = this.props,\n        expander = _props.expander,\n        tableClassName = _props.tableClassName,\n        hasHead = _props.hasHead,\n        hasBody = _props.hasBody,\n        fixed = _props.fixed,\n        columns = _props.columns;\n    var tableStyle = {};\n\n    if (!fixed && scroll.x) {\n      // not set width, then use content fixed width\n      if (scroll.x === true) {\n        tableStyle.tableLayout = 'fixed';\n      } else {\n        tableStyle.width = scroll.x;\n      }\n    }\n\n    var Table = hasBody ? components.table : 'table';\n    var BodyWrapper = components.body.wrapper;\n    var body = void 0;\n\n    if (hasBody) {\n      body = React.createElement(BodyWrapper, {\n        className: prefixCls + '-tbody'\n      }, this.renderRows(data, 0));\n\n      if (getBodyWrapper) {\n        body = getBodyWrapper(body);\n      }\n    }\n\n    return React.createElement(Table, {\n      className: tableClassName,\n      style: tableStyle,\n      key: 'table'\n    }, React.createElement(ColGroup, {\n      columns: columns,\n      fixed: fixed\n    }), hasHead && React.createElement(TableHeader, {\n      expander: expander,\n      columns: columns,\n      fixed: fixed\n    }), body);\n  };\n\n  return BaseTable;\n}(React.Component);\n\nBaseTable.propTypes = {\n  fixed: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\n  columns: PropTypes.array.isRequired,\n  tableClassName: PropTypes.string.isRequired,\n  hasHead: PropTypes.bool.isRequired,\n  hasBody: PropTypes.bool.isRequired,\n  store: PropTypes.object.isRequired,\n  expander: PropTypes.object.isRequired,\n  getRowKey: PropTypes.func,\n  isAnyColumnsFixed: PropTypes.bool\n};\nBaseTable.contextTypes = {\n  table: PropTypes.any\n};\nexport default connect()(BaseTable);","map":{"version":3,"sources":["/Users/administrator/Desktop/DrChain/drchain_frontend/drchain/node_modules/rc-table/es/BaseTable.js"],"names":["_extends","_classCallCheck","_possibleConstructorReturn","_inherits","React","PropTypes","connect","ColGroup","TableHeader","TableRow","ExpandableRow","BaseTable","_React$Component","_temp","_this","_ret","_len","arguments","length","args","Array","_key","call","apply","concat","handleRowHover","isHover","key","props","store","setState","currentHoverKey","renderRows","renderData","indent","ancestorKeys","undefined","table","context","columnManager","components","_table$props","prefixCls","childrenColumnName","rowClassName","rowRef","onRowClick","onRowDoubleClick","onRowContextMenu","onRowMouseEnter","onRowMouseLeave","onRow","_this$props","getRowKey","fixed","expander","isAnyColumnsFixed","rows","_loop","i","record","className","onHoverProps","onHover","leafColumns","leftLeafColumns","rightLeafColumns","rowPrefixCls","row","createElement","index","rowKey","needIndentSpaced","onExpandedChange","handleExpandChange","expandableRow","columns","ref","push","prototype","render","_table$props2","scroll","data","getBodyWrapper","_props","tableClassName","hasHead","hasBody","tableStyle","x","tableLayout","width","Table","BodyWrapper","body","wrapper","style","Component","propTypes","oneOfType","string","bool","array","isRequired","object","func","contextTypes","any"],"mappings":"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","sourcesContent":["import _extends from 'babel-runtime/helpers/extends';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'mini-store';\nimport ColGroup from './ColGroup';\nimport TableHeader from './TableHeader';\nimport TableRow from './TableRow';\nimport ExpandableRow from './ExpandableRow';\n\nvar BaseTable = function (_React$Component) {\n  _inherits(BaseTable, _React$Component);\n\n  function BaseTable() {\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, BaseTable);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.handleRowHover = function (isHover, key) {\n      _this.props.store.setState({\n        currentHoverKey: isHover ? key : null\n      });\n    }, _this.renderRows = function (renderData, indent) {\n      var ancestorKeys = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n      var table = _this.context.table;\n      var columnManager = table.columnManager,\n          components = table.components;\n      var _table$props = table.props,\n          prefixCls = _table$props.prefixCls,\n          childrenColumnName = _table$props.childrenColumnName,\n          rowClassName = _table$props.rowClassName,\n          rowRef = _table$props.rowRef,\n          onRowClick = _table$props.onRowClick,\n          onRowDoubleClick = _table$props.onRowDoubleClick,\n          onRowContextMenu = _table$props.onRowContextMenu,\n          onRowMouseEnter = _table$props.onRowMouseEnter,\n          onRowMouseLeave = _table$props.onRowMouseLeave,\n          onRow = _table$props.onRow;\n      var _this$props = _this.props,\n          getRowKey = _this$props.getRowKey,\n          fixed = _this$props.fixed,\n          expander = _this$props.expander,\n          isAnyColumnsFixed = _this$props.isAnyColumnsFixed;\n\n\n      var rows = [];\n\n      var _loop = function _loop(i) {\n        var record = renderData[i];\n        var key = getRowKey(record, i);\n        var className = typeof rowClassName === 'string' ? rowClassName : rowClassName(record, i, indent);\n\n        var onHoverProps = {};\n        if (columnManager.isAnyColumnsFixed()) {\n          onHoverProps.onHover = _this.handleRowHover;\n        }\n\n        var leafColumns = void 0;\n        if (fixed === 'left') {\n          leafColumns = columnManager.leftLeafColumns();\n        } else if (fixed === 'right') {\n          leafColumns = columnManager.rightLeafColumns();\n        } else {\n          leafColumns = columnManager.leafColumns();\n        }\n\n        var rowPrefixCls = prefixCls + '-row';\n\n        var row = React.createElement(\n          ExpandableRow,\n          _extends({}, expander.props, {\n            fixed: fixed,\n            index: i,\n            prefixCls: rowPrefixCls,\n            record: record,\n            key: key,\n            rowKey: key,\n            onRowClick: onRowClick,\n            needIndentSpaced: expander.needIndentSpaced,\n            onExpandedChange: expander.handleExpandChange\n          }),\n          function (expandableRow) {\n            return (// eslint-disable-line\n              React.createElement(TableRow, _extends({\n                fixed: fixed,\n                indent: indent,\n                className: className,\n                record: record,\n                index: i,\n                prefixCls: rowPrefixCls,\n                childrenColumnName: childrenColumnName,\n                columns: leafColumns,\n                onRow: onRow,\n                onRowDoubleClick: onRowDoubleClick,\n                onRowContextMenu: onRowContextMenu,\n                onRowMouseEnter: onRowMouseEnter,\n                onRowMouseLeave: onRowMouseLeave\n              }, onHoverProps, {\n                rowKey: key,\n                ancestorKeys: ancestorKeys,\n                ref: rowRef(record, i, indent),\n                components: components,\n                isAnyColumnsFixed: isAnyColumnsFixed\n              }, expandableRow))\n            );\n          }\n        );\n\n        rows.push(row);\n\n        expander.renderRows(_this.renderRows, rows, record, i, indent, fixed, key, ancestorKeys);\n      };\n\n      for (var i = 0; i < renderData.length; i++) {\n        _loop(i);\n      }\n      return rows;\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  BaseTable.prototype.render = function render() {\n    var table = this.context.table;\n    var components = table.components;\n    var _table$props2 = table.props,\n        prefixCls = _table$props2.prefixCls,\n        scroll = _table$props2.scroll,\n        data = _table$props2.data,\n        getBodyWrapper = _table$props2.getBodyWrapper;\n    var _props = this.props,\n        expander = _props.expander,\n        tableClassName = _props.tableClassName,\n        hasHead = _props.hasHead,\n        hasBody = _props.hasBody,\n        fixed = _props.fixed,\n        columns = _props.columns;\n\n    var tableStyle = {};\n\n    if (!fixed && scroll.x) {\n      // not set width, then use content fixed width\n      if (scroll.x === true) {\n        tableStyle.tableLayout = 'fixed';\n      } else {\n        tableStyle.width = scroll.x;\n      }\n    }\n\n    var Table = hasBody ? components.table : 'table';\n    var BodyWrapper = components.body.wrapper;\n\n    var body = void 0;\n    if (hasBody) {\n      body = React.createElement(\n        BodyWrapper,\n        { className: prefixCls + '-tbody' },\n        this.renderRows(data, 0)\n      );\n      if (getBodyWrapper) {\n        body = getBodyWrapper(body);\n      }\n    }\n\n    return React.createElement(\n      Table,\n      { className: tableClassName, style: tableStyle, key: 'table' },\n      React.createElement(ColGroup, { columns: columns, fixed: fixed }),\n      hasHead && React.createElement(TableHeader, { expander: expander, columns: columns, fixed: fixed }),\n      body\n    );\n  };\n\n  return BaseTable;\n}(React.Component);\n\nBaseTable.propTypes = {\n  fixed: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\n  columns: PropTypes.array.isRequired,\n  tableClassName: PropTypes.string.isRequired,\n  hasHead: PropTypes.bool.isRequired,\n  hasBody: PropTypes.bool.isRequired,\n  store: PropTypes.object.isRequired,\n  expander: PropTypes.object.isRequired,\n  getRowKey: PropTypes.func,\n  isAnyColumnsFixed: PropTypes.bool\n};\nBaseTable.contextTypes = {\n  table: PropTypes.any\n};\n\n\nexport default connect()(BaseTable);"]},"metadata":{},"sourceType":"module"}