{"ast":null,"code":"import _extends from 'babel-runtime/helpers/extends';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport warning from 'warning';\nimport { traverseTreeNodes, updateCheckState, getOffset, getCheck, getStrictlyValue, isPositionPrefix } from './util';\n\nfunction noop() {}\n\nexport var contextTypes = {\n  rcTree: PropTypes.shape({\n    selectable: PropTypes.bool\n  })\n};\n\nvar Tree = function (_React$Component) {\n  _inherits(Tree, _React$Component);\n\n  function Tree(props) {\n    _classCallCheck(this, Tree);\n\n    var _this = _possibleConstructorReturn(this, _React$Component.call(this, props));\n\n    _initialiseProps.call(_this);\n\n    var checkedKeys = _this.calcCheckedKeys(props);\n\n    _this.state = {\n      expandedKeys: _this.calcExpandedKeys(props),\n      checkedKeys: checkedKeys.checkedKeys,\n      halfCheckedKeys: checkedKeys.halfCheckedKeys,\n      selectedKeys: _this.calcSelectedKeys(props),\n      dragNodesKeys: '',\n      dragOverNodeKey: '',\n      dropNodeKey: ''\n    };\n    return _this;\n  }\n\n  Tree.prototype.getChildContext = function getChildContext() {\n    var selectable = this.props.selectable;\n    return {\n      rcTree: {\n        selectable: selectable\n      }\n    };\n  };\n\n  Tree.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {\n    var props = this.props;\n    var newState = {};\n    var expandedKeys = nextProps.expandedKeys !== props.expandedKeys ? this.calcExpandedKeys(nextProps, true) : undefined;\n\n    if (expandedKeys) {\n      newState.expandedKeys = expandedKeys;\n    }\n\n    var checkedKeys = nextProps.checkedKeys !== props.checkedKeys || props.loadData ? this.calcCheckedKeys(nextProps, true) : undefined;\n\n    if (checkedKeys) {\n      newState.checkedKeys = checkedKeys.checkedKeys;\n      newState.halfCheckedKeys = checkedKeys.halfCheckedKeys;\n    }\n\n    var selectedKeys = nextProps.selectedKeys !== props.selectedKeys ? this.calcSelectedKeys(nextProps, true) : undefined;\n\n    if (selectedKeys) {\n      newState.selectedKeys = selectedKeys;\n    }\n\n    this.setState(newState);\n  };\n\n  Tree.prototype.onDragStart = function onDragStart(e, treeNode) {\n    this.dragNode = treeNode;\n    var newState = {\n      dragNodesKeys: this.getDragNodesKeys(treeNode)\n    };\n    var expandedKeys = this.getExpandedKeys(treeNode, false);\n\n    if (expandedKeys) {\n      newState.expandedKeys = expandedKeys;\n    }\n\n    this.setState(newState);\n    this.props.onDragStart({\n      event: e,\n      node: treeNode\n    });\n  };\n\n  Tree.prototype.onDragEnter = function onDragEnter(e, treeNode) {\n    var _this2 = this;\n\n    var dropPosition = this.calcDropPosition(e, treeNode);\n    if (!this.dragNode) return;\n\n    if (this.dragNode.props.eventKey === treeNode.props.eventKey && dropPosition === 0) {\n      this.setState({\n        dragOverNodeKey: '',\n        dropPosition: null\n      });\n      return;\n    }\n\n    this.setState({\n      dragOverNodeKey: treeNode.props.eventKey,\n      dropPosition: dropPosition\n    });\n\n    if (!this.delayedDragEnterLogic) {\n      this.delayedDragEnterLogic = {};\n    }\n\n    Object.keys(this.delayedDragEnterLogic).forEach(function (key) {\n      clearTimeout(_this2.delayedDragEnterLogic[key]);\n    });\n    this.delayedDragEnterLogic[treeNode.props.pos] = setTimeout(function () {\n      var expandedKeys = _this2.getExpandedKeys(treeNode, true);\n\n      if (expandedKeys) {\n        _this2.setState({\n          expandedKeys: expandedKeys\n        });\n      }\n\n      _this2.props.onDragEnter({\n        event: e,\n        node: treeNode,\n        expandedKeys: expandedKeys && [].concat(expandedKeys) || [].concat(_this2.state.expandedKeys)\n      });\n    }, 400);\n  };\n\n  Tree.prototype.onDragOver = function onDragOver(e, treeNode) {\n    this.props.onDragOver({\n      event: e,\n      node: treeNode\n    });\n  };\n\n  Tree.prototype.onDragLeave = function onDragLeave(e, treeNode) {\n    this.props.onDragLeave({\n      event: e,\n      node: treeNode\n    });\n  };\n\n  Tree.prototype.onDrop = function onDrop(e, treeNode) {\n    var state = this.state;\n    var eventKey = treeNode.props.eventKey;\n    this.setState({\n      dragOverNodeKey: '',\n      dropNodeKey: eventKey\n    });\n\n    if (state.dragNodesKeys.indexOf(eventKey) > -1) {\n      warning(false, 'Can not drop to dragNode(include it\\'s children node)');\n      return;\n    }\n\n    var posArr = treeNode.props.pos.split('-');\n    var res = {\n      event: e,\n      node: treeNode,\n      dragNode: this.dragNode,\n      dragNodesKeys: [].concat(state.dragNodesKeys),\n      dropPosition: state.dropPosition + Number(posArr[posArr.length - 1])\n    };\n\n    if (state.dropPosition !== 0) {\n      res.dropToGap = true;\n    }\n\n    this.props.onDrop(res);\n  };\n\n  Tree.prototype.onDragEnd = function onDragEnd(e, treeNode) {\n    this.setState({\n      dragOverNodeKey: ''\n    });\n    this.props.onDragEnd({\n      event: e,\n      node: treeNode\n    });\n  };\n\n  Tree.prototype.onExpand = function onExpand(treeNode) {\n    var _this3 = this;\n\n    var props = this.props,\n        state = this.state;\n    var expanded = !treeNode.props.expanded;\n    var expandedKeys = [].concat(state.expandedKeys);\n    var eventKey = treeNode.props.eventKey;\n    var index = expandedKeys.indexOf(eventKey);\n\n    if (expanded && index === -1) {\n      expandedKeys.push(eventKey);\n    } else if (!expanded && index > -1) {\n      expandedKeys.splice(index, 1);\n    }\n\n    var controlled = ('expandedKeys' in props);\n\n    if (!controlled) {\n      this.setState({\n        expandedKeys: expandedKeys\n      });\n    }\n\n    props.onExpand(expandedKeys, {\n      node: treeNode,\n      expanded: expanded\n    }); // After data loaded, need set new expandedKeys\n\n    if (expanded && props.loadData) {\n      return props.loadData(treeNode).then(function () {\n        if (!controlled) {\n          _this3.setState({\n            expandedKeys: expandedKeys\n          });\n        }\n      });\n    }\n  };\n\n  Tree.prototype.onSelect = function onSelect(treeNode) {\n    var props = this.props,\n        state = this.state;\n    var eventKey = treeNode.props.eventKey;\n    var selected = !treeNode.props.selected;\n    var selectedKeys = [].concat(state.selectedKeys);\n\n    if (!selected) {\n      var index = selectedKeys.indexOf(eventKey);\n      selectedKeys.splice(index, 1);\n    } else if (!props.multiple) {\n      selectedKeys = [eventKey];\n    } else {\n      selectedKeys.push(eventKey);\n    } // TODO: can be optimized if we remove selectedNodes in API\n\n\n    var selectedNodes = [];\n\n    if (selectedKeys.length) {\n      traverseTreeNodes(props.children, function (item) {\n        if (selectedKeys.indexOf(item.key) !== -1) {\n          selectedNodes.push(item);\n        }\n      });\n    }\n\n    if (!('selectedKeys' in props)) {\n      this.setState({\n        selectedKeys: selectedKeys\n      });\n    }\n\n    var eventObj = {\n      event: 'select',\n      selected: selected,\n      node: treeNode,\n      selectedNodes: selectedNodes\n    };\n    props.onSelect(selectedKeys, eventObj);\n  };\n\n  Tree.prototype.onMouseEnter = function onMouseEnter(e, treeNode) {\n    this.props.onMouseEnter({\n      event: e,\n      node: treeNode\n    });\n  };\n\n  Tree.prototype.onMouseLeave = function onMouseLeave(e, treeNode) {\n    this.props.onMouseLeave({\n      event: e,\n      node: treeNode\n    });\n  };\n\n  Tree.prototype.onContextMenu = function onContextMenu(e, treeNode) {\n    if (this.props.onRightClick) {\n      e.preventDefault();\n      this.props.onRightClick({\n        event: e,\n        node: treeNode\n      });\n    }\n  }; // all keyboard events callbacks run from here at first\n\n\n  Tree.prototype.getOpenTransitionName = function getOpenTransitionName() {\n    var props = this.props;\n    var transitionName = props.openTransitionName;\n    var animationName = props.openAnimation;\n\n    if (!transitionName && typeof animationName === 'string') {\n      return props.prefixCls + '-open-' + animationName;\n    }\n\n    return transitionName;\n  };\n\n  Tree.prototype.getDragNodesKeys = function getDragNodesKeys(treeNode) {\n    var dragNodesKeys = [];\n    traverseTreeNodes(treeNode.props.children, function (item, index, pos, key) {\n      if (isPositionPrefix(treeNode.props.pos, pos)) {\n        dragNodesKeys.push(key);\n      }\n    });\n    dragNodesKeys.push(treeNode.props.eventKey || treeNode.props.pos);\n    return dragNodesKeys;\n  };\n\n  Tree.prototype.getExpandedKeys = function getExpandedKeys(treeNode, expand) {\n    var eventKey = treeNode.props.eventKey;\n    var expandedKeys = this.state.expandedKeys;\n    var expandedIndex = expandedKeys.indexOf(eventKey);\n\n    if (!expand && expandedIndex > -1) {\n      var exKeys = [].concat(expandedKeys);\n      exKeys.splice(expandedIndex, 1);\n      return exKeys;\n    }\n\n    if (expand && expandedKeys.indexOf(eventKey) === -1) {\n      return expandedKeys.concat([eventKey]);\n    }\n  };\n\n  Tree.prototype.generateTreeNodesStates = function generateTreeNodesStates(children, checkedKeys) {\n    var checkedPositions = [];\n    var treeNodesStates = {};\n    traverseTreeNodes(children, function (item, _, pos, key, childrenPos, parentPos) {\n      treeNodesStates[pos] = {\n        node: item,\n        key: key,\n        checked: false,\n        halfChecked: false,\n        disabled: item.props.disabled,\n        disableCheckbox: item.props.disableCheckbox,\n        childrenPos: childrenPos,\n        parentPos: parentPos\n      };\n\n      if (checkedKeys.indexOf(key) !== -1) {\n        treeNodesStates[pos].checked = true;\n        checkedPositions.push(pos);\n      }\n    });\n    checkedPositions.forEach(function (checkedPosition) {\n      updateCheckState(treeNodesStates, checkedPosition, true);\n    });\n    return treeNodesStates;\n  };\n\n  Tree.prototype.calcExpandedKeys = function calcExpandedKeys(props, isNotInit) {\n    var expandedKeys = props.expandedKeys || (isNotInit ? undefined : props.defaultExpandedKeys);\n\n    if (!expandedKeys) {\n      return undefined;\n    }\n\n    var expandAll = isNotInit ? false : props.defaultExpandAll;\n\n    if (!expandAll && !props.autoExpandParent) {\n      return expandedKeys;\n    }\n\n    var expandedPositionArr = [];\n\n    if (props.autoExpandParent) {\n      traverseTreeNodes(props.children, function (item, index, pos, key) {\n        if (expandedKeys.indexOf(key) > -1) {\n          expandedPositionArr.push(pos);\n        }\n      });\n    }\n\n    var filterExpandedKeysSet = {};\n    traverseTreeNodes(props.children, function (item, index, pos, key) {\n      if (expandAll) {\n        filterExpandedKeysSet[key] = true;\n      } else if (props.autoExpandParent) {\n        var isCurrentParentOfExpanded = expandedPositionArr.some(function (p) {\n          return isPositionPrefix(pos, p);\n        });\n\n        if (isCurrentParentOfExpanded) {\n          filterExpandedKeysSet[key] = true;\n        }\n      }\n    });\n    var filterExpandedKeys = Object.keys(filterExpandedKeysSet);\n    return filterExpandedKeys.length ? filterExpandedKeys : expandedKeys;\n  };\n\n  Tree.prototype.calcCheckedKeys = function calcCheckedKeys(props, isNotInit) {\n    if (!props.checkable) {\n      return {\n        checkedKeys: [],\n        halfCheckedKeys: []\n      };\n    }\n\n    var checkedKeys = props.checkedKeys || (isNotInit && !props.loadData ? undefined : props.defaultCheckedKeys);\n\n    if (!checkedKeys) {\n      return undefined;\n    }\n\n    if (Array.isArray(checkedKeys)) {\n      checkedKeys = {\n        checkedKeys: checkedKeys,\n        halfCheckedKeys: []\n      };\n    } else if (typeof checkedKeys === 'object') {\n      checkedKeys = {\n        checkedKeys: checkedKeys.checked,\n        halfCheckedKeys: checkedKeys.halfChecked\n      };\n    }\n\n    if (!props.checkStrictly) {\n      var checked = checkedKeys.checkedKeys || [];\n      var treeNodesStates = this.generateTreeNodesStates(props.children, checked);\n      return getCheck(treeNodesStates);\n    }\n\n    return checkedKeys;\n  };\n\n  Tree.prototype.calcSelectedKeys = function calcSelectedKeys(props, isNotInit) {\n    var selectedKeys = props.selectedKeys || (isNotInit ? undefined : props.defaultSelectedKeys);\n\n    if (!selectedKeys) {\n      return undefined;\n    }\n\n    if (props.multiple) {\n      return [].concat(selectedKeys);\n    }\n\n    if (selectedKeys.length) {\n      return [selectedKeys[0]];\n    }\n\n    return selectedKeys;\n  };\n\n  Tree.prototype.calcDropPosition = function calcDropPosition(e, treeNode) {\n    var offsetTop = getOffset(treeNode.selectHandle).top;\n    var offsetHeight = treeNode.selectHandle.offsetHeight;\n    var pageY = e.pageY;\n    var gapHeight = 2; // TODO: remove hard code\n\n    if (pageY > offsetTop + offsetHeight - gapHeight) {\n      return 1;\n    }\n\n    if (pageY < offsetTop + gapHeight) {\n      return -1;\n    }\n\n    return 0;\n  };\n\n  Tree.prototype.renderTreeNode = function renderTreeNode(child, index) {\n    var level = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n    var state = this.state,\n        props = this.props;\n    var pos = level + '-' + index;\n    var key = child.key || pos;\n    var childProps = {\n      root: this,\n      eventKey: key,\n      pos: pos,\n      loadData: props.loadData,\n      prefixCls: props.prefixCls,\n      showIcon: props.showIcon,\n      draggable: props.draggable,\n      dragOver: state.dragOverNodeKey === key && state.dropPosition === 0,\n      dragOverGapTop: state.dragOverNodeKey === key && state.dropPosition === -1,\n      dragOverGapBottom: state.dragOverNodeKey === key && state.dropPosition === 1,\n      expanded: state.expandedKeys.indexOf(key) !== -1,\n      selected: state.selectedKeys.indexOf(key) !== -1,\n      openTransitionName: this.getOpenTransitionName(),\n      openAnimation: props.openAnimation,\n      filterTreeNode: this.filterTreeNode\n    };\n\n    if (props.checkable) {\n      childProps.checkable = props.checkable;\n      childProps.checked = state.checkedKeys.indexOf(key) !== -1;\n      childProps.halfChecked = state.halfCheckedKeys.indexOf(key) !== -1;\n    }\n\n    return React.cloneElement(child, childProps);\n  };\n\n  Tree.prototype.render = function render() {\n    var _classNames;\n\n    var props = this.props;\n    var className = classNames(props.prefixCls, props.className, (_classNames = {}, _classNames[props.prefixCls + '-show-line'] = props.showLine, _classNames));\n    var domProps = {};\n\n    if (props.focusable) {\n      domProps.tabIndex = '0';\n      domProps.onKeyDown = this.onKeyDown;\n    }\n\n    return React.createElement('ul', _extends({}, domProps, {\n      className: className,\n      role: 'tree-node',\n      unselectable: 'on'\n    }), React.Children.map(props.children, this.renderTreeNode, this));\n  };\n\n  return Tree;\n}(React.Component);\n\nTree.propTypes = {\n  prefixCls: PropTypes.string,\n  children: PropTypes.any,\n  showLine: PropTypes.bool,\n  showIcon: PropTypes.bool,\n  selectable: PropTypes.bool,\n  multiple: PropTypes.bool,\n  checkable: PropTypes.oneOfType([PropTypes.bool, PropTypes.node]),\n  checkStrictly: PropTypes.bool,\n  draggable: PropTypes.bool,\n  autoExpandParent: PropTypes.bool,\n  defaultExpandAll: PropTypes.bool,\n  defaultExpandedKeys: PropTypes.arrayOf(PropTypes.string),\n  expandedKeys: PropTypes.arrayOf(PropTypes.string),\n  defaultCheckedKeys: PropTypes.arrayOf(PropTypes.string),\n  checkedKeys: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.string), PropTypes.object]),\n  defaultSelectedKeys: PropTypes.arrayOf(PropTypes.string),\n  selectedKeys: PropTypes.arrayOf(PropTypes.string),\n  onExpand: PropTypes.func,\n  onCheck: PropTypes.func,\n  onSelect: PropTypes.func,\n  loadData: PropTypes.func,\n  onMouseEnter: PropTypes.func,\n  onMouseLeave: PropTypes.func,\n  onRightClick: PropTypes.func,\n  onDragStart: PropTypes.func,\n  onDragEnter: PropTypes.func,\n  onDragOver: PropTypes.func,\n  onDragLeave: PropTypes.func,\n  onDrop: PropTypes.func,\n  onDragEnd: PropTypes.func,\n  filterTreeNode: PropTypes.func,\n  openTransitionName: PropTypes.string,\n  openAnimation: PropTypes.oneOfType([PropTypes.string, PropTypes.object])\n};\nTree.childContextTypes = contextTypes;\nTree.defaultProps = {\n  prefixCls: 'rc-tree',\n  showLine: false,\n  showIcon: true,\n  selectable: true,\n  multiple: false,\n  checkable: false,\n  checkStrictly: false,\n  draggable: false,\n  autoExpandParent: true,\n  defaultExpandAll: false,\n  defaultExpandedKeys: [],\n  defaultCheckedKeys: [],\n  defaultSelectedKeys: [],\n  onExpand: noop,\n  onCheck: noop,\n  onSelect: noop,\n  onDragStart: noop,\n  onDragEnter: noop,\n  onDragOver: noop,\n  onDragLeave: noop,\n  onDrop: noop,\n  onDragEnd: noop,\n  onMouseEnter: noop,\n  onMouseLeave: noop\n};\n\nvar _initialiseProps = function _initialiseProps() {\n  var _this4 = this;\n\n  this.onCheck = function (treeNode) {\n    var props = _this4.props,\n        state = _this4.state;\n    var checked = !treeNode.props.checked || treeNode.props.halfChecked;\n    var eventObj = {\n      event: 'check',\n      node: treeNode,\n      checked: checked\n    };\n\n    if (props.checkStrictly) {\n      var eventKey = treeNode.props.eventKey;\n      var checkedKeys = [].concat(state.checkedKeys);\n      var index = checkedKeys.indexOf(eventKey);\n\n      if (checked && index === -1) {\n        checkedKeys.push(eventKey);\n      }\n\n      if (!checked && index > -1) {\n        checkedKeys.splice(index, 1);\n      }\n\n      eventObj.checkedNodes = [];\n      traverseTreeNodes(props.children, function (item) {\n        if (checkedKeys.indexOf(item.key) !== -1) {\n          eventObj.checkedNodes.push(item);\n        }\n      });\n\n      if (!('checkedKeys' in props)) {\n        _this4.setState({\n          checkedKeys: checkedKeys\n        });\n      }\n\n      props.onCheck(getStrictlyValue(checkedKeys, state.halfCheckedKeys), eventObj);\n    } else {\n      var treeNodesStates = _this4.generateTreeNodesStates(props.children, state.checkedKeys);\n\n      treeNodesStates[treeNode.props.pos].checked = checked;\n      treeNodesStates[treeNode.props.pos].halfChecked = false;\n      updateCheckState(treeNodesStates, treeNode.props.pos, checked);\n      var checkKeys = getCheck(treeNodesStates);\n      eventObj.checkedNodes = checkKeys.checkedNodes;\n      eventObj.checkedNodesPositions = checkKeys.checkedNodesPositions; // TODO: not in API\n\n      eventObj.halfCheckedKeys = checkKeys.halfCheckedKeys; // TODO: not in API\n\n      if (!('checkedKeys' in props)) {\n        _this4.setState({\n          checkedKeys: checkKeys.checkedKeys,\n          halfCheckedKeys: checkKeys.halfCheckedKeys\n        });\n      }\n\n      props.onCheck(checkKeys.checkedKeys, eventObj);\n    }\n  };\n\n  this.onKeyDown = function (e) {\n    e.preventDefault();\n  };\n\n  this.filterTreeNode = function (treeNode) {\n    var filterTreeNode = _this4.props.filterTreeNode;\n\n    if (typeof filterTreeNode !== 'function' || treeNode.props.disabled) {\n      return false;\n    }\n\n    return filterTreeNode.call(_this4, treeNode);\n  };\n};\n\nexport default Tree;","map":{"version":3,"sources":["/Users/administrator/Desktop/DrChain/drchain_frontend/drchain/node_modules/rc-tree-select/node_modules/rc-tree/es/Tree.js"],"names":["_extends","_classCallCheck","_possibleConstructorReturn","_inherits","React","PropTypes","classNames","warning","traverseTreeNodes","updateCheckState","getOffset","getCheck","getStrictlyValue","isPositionPrefix","noop","contextTypes","rcTree","shape","selectable","bool","Tree","_React$Component","props","_this","call","_initialiseProps","checkedKeys","calcCheckedKeys","state","expandedKeys","calcExpandedKeys","halfCheckedKeys","selectedKeys","calcSelectedKeys","dragNodesKeys","dragOverNodeKey","dropNodeKey","prototype","getChildContext","componentWillReceiveProps","nextProps","newState","undefined","loadData","setState","onDragStart","e","treeNode","dragNode","getDragNodesKeys","getExpandedKeys","event","node","onDragEnter","_this2","dropPosition","calcDropPosition","eventKey","delayedDragEnterLogic","Object","keys","forEach","key","clearTimeout","pos","setTimeout","concat","onDragOver","onDragLeave","onDrop","indexOf","posArr","split","res","Number","length","dropToGap","onDragEnd","onExpand","_this3","expanded","index","push","splice","controlled","then","onSelect","selected","multiple","selectedNodes","children","item","eventObj","onMouseEnter","onMouseLeave","onContextMenu","onRightClick","preventDefault","getOpenTransitionName","transitionName","openTransitionName","animationName","openAnimation","prefixCls","expand","expandedIndex","exKeys","generateTreeNodesStates","checkedPositions","treeNodesStates","_","childrenPos","parentPos","checked","halfChecked","disabled","disableCheckbox","checkedPosition","isNotInit","defaultExpandedKeys","expandAll","defaultExpandAll","autoExpandParent","expandedPositionArr","filterExpandedKeysSet","isCurrentParentOfExpanded","some","p","filterExpandedKeys","checkable","defaultCheckedKeys","Array","isArray","checkStrictly","defaultSelectedKeys","offsetTop","selectHandle","top","offsetHeight","pageY","gapHeight","renderTreeNode","child","level","arguments","childProps","root","showIcon","draggable","dragOver","dragOverGapTop","dragOverGapBottom","filterTreeNode","cloneElement","render","_classNames","className","showLine","domProps","focusable","tabIndex","onKeyDown","createElement","role","unselectable","Children","map","Component","propTypes","string","any","oneOfType","arrayOf","object","func","onCheck","childContextTypes","defaultProps","_this4","checkedNodes","checkKeys","checkedNodesPositions"],"mappings":"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","sourcesContent":["import _extends from 'babel-runtime/helpers/extends';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport warning from 'warning';\nimport { traverseTreeNodes, updateCheckState, getOffset, getCheck, getStrictlyValue, isPositionPrefix } from './util';\n\nfunction noop() {}\n\nexport var contextTypes = {\n  rcTree: PropTypes.shape({\n    selectable: PropTypes.bool\n  })\n};\n\nvar Tree = function (_React$Component) {\n  _inherits(Tree, _React$Component);\n\n  function Tree(props) {\n    _classCallCheck(this, Tree);\n\n    var _this = _possibleConstructorReturn(this, _React$Component.call(this, props));\n\n    _initialiseProps.call(_this);\n\n    var checkedKeys = _this.calcCheckedKeys(props);\n    _this.state = {\n      expandedKeys: _this.calcExpandedKeys(props),\n      checkedKeys: checkedKeys.checkedKeys,\n      halfCheckedKeys: checkedKeys.halfCheckedKeys,\n      selectedKeys: _this.calcSelectedKeys(props),\n      dragNodesKeys: '',\n      dragOverNodeKey: '',\n      dropNodeKey: ''\n    };\n    return _this;\n  }\n\n  Tree.prototype.getChildContext = function getChildContext() {\n    var selectable = this.props.selectable;\n\n    return {\n      rcTree: {\n        selectable: selectable\n      }\n    };\n  };\n\n  Tree.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {\n    var props = this.props;\n\n    var newState = {};\n    var expandedKeys = nextProps.expandedKeys !== props.expandedKeys ? this.calcExpandedKeys(nextProps, true) : undefined;\n    if (expandedKeys) {\n      newState.expandedKeys = expandedKeys;\n    }\n\n    var checkedKeys = nextProps.checkedKeys !== props.checkedKeys || props.loadData ? this.calcCheckedKeys(nextProps, true) : undefined;\n    if (checkedKeys) {\n      newState.checkedKeys = checkedKeys.checkedKeys;\n      newState.halfCheckedKeys = checkedKeys.halfCheckedKeys;\n    }\n\n    var selectedKeys = nextProps.selectedKeys !== props.selectedKeys ? this.calcSelectedKeys(nextProps, true) : undefined;\n    if (selectedKeys) {\n      newState.selectedKeys = selectedKeys;\n    }\n    this.setState(newState);\n  };\n\n  Tree.prototype.onDragStart = function onDragStart(e, treeNode) {\n    this.dragNode = treeNode;\n    var newState = {\n      dragNodesKeys: this.getDragNodesKeys(treeNode)\n    };\n    var expandedKeys = this.getExpandedKeys(treeNode, false);\n    if (expandedKeys) {\n      newState.expandedKeys = expandedKeys;\n    }\n    this.setState(newState);\n    this.props.onDragStart({\n      event: e,\n      node: treeNode\n    });\n  };\n\n  Tree.prototype.onDragEnter = function onDragEnter(e, treeNode) {\n    var _this2 = this;\n\n    var dropPosition = this.calcDropPosition(e, treeNode);\n    if (!this.dragNode) return;\n    if (this.dragNode.props.eventKey === treeNode.props.eventKey && dropPosition === 0) {\n      this.setState({\n        dragOverNodeKey: '',\n        dropPosition: null\n      });\n      return;\n    }\n    this.setState({\n      dragOverNodeKey: treeNode.props.eventKey,\n      dropPosition: dropPosition\n    });\n\n    if (!this.delayedDragEnterLogic) {\n      this.delayedDragEnterLogic = {};\n    }\n    Object.keys(this.delayedDragEnterLogic).forEach(function (key) {\n      clearTimeout(_this2.delayedDragEnterLogic[key]);\n    });\n    this.delayedDragEnterLogic[treeNode.props.pos] = setTimeout(function () {\n      var expandedKeys = _this2.getExpandedKeys(treeNode, true);\n      if (expandedKeys) {\n        _this2.setState({ expandedKeys: expandedKeys });\n      }\n      _this2.props.onDragEnter({\n        event: e,\n        node: treeNode,\n        expandedKeys: expandedKeys && [].concat(expandedKeys) || [].concat(_this2.state.expandedKeys)\n      });\n    }, 400);\n  };\n\n  Tree.prototype.onDragOver = function onDragOver(e, treeNode) {\n    this.props.onDragOver({ event: e, node: treeNode });\n  };\n\n  Tree.prototype.onDragLeave = function onDragLeave(e, treeNode) {\n    this.props.onDragLeave({ event: e, node: treeNode });\n  };\n\n  Tree.prototype.onDrop = function onDrop(e, treeNode) {\n    var state = this.state;\n\n    var eventKey = treeNode.props.eventKey;\n    this.setState({\n      dragOverNodeKey: '',\n      dropNodeKey: eventKey\n    });\n    if (state.dragNodesKeys.indexOf(eventKey) > -1) {\n      warning(false, 'Can not drop to dragNode(include it\\'s children node)');\n      return;\n    }\n\n    var posArr = treeNode.props.pos.split('-');\n    var res = {\n      event: e,\n      node: treeNode,\n      dragNode: this.dragNode,\n      dragNodesKeys: [].concat(state.dragNodesKeys),\n      dropPosition: state.dropPosition + Number(posArr[posArr.length - 1])\n    };\n    if (state.dropPosition !== 0) {\n      res.dropToGap = true;\n    }\n    this.props.onDrop(res);\n  };\n\n  Tree.prototype.onDragEnd = function onDragEnd(e, treeNode) {\n    this.setState({\n      dragOverNodeKey: ''\n    });\n    this.props.onDragEnd({ event: e, node: treeNode });\n  };\n\n  Tree.prototype.onExpand = function onExpand(treeNode) {\n    var _this3 = this;\n\n    var props = this.props,\n        state = this.state;\n\n    var expanded = !treeNode.props.expanded;\n    var expandedKeys = [].concat(state.expandedKeys);\n    var eventKey = treeNode.props.eventKey;\n\n    var index = expandedKeys.indexOf(eventKey);\n    if (expanded && index === -1) {\n      expandedKeys.push(eventKey);\n    } else if (!expanded && index > -1) {\n      expandedKeys.splice(index, 1);\n    }\n\n    var controlled = 'expandedKeys' in props;\n    if (!controlled) {\n      this.setState({ expandedKeys: expandedKeys });\n    }\n    props.onExpand(expandedKeys, { node: treeNode, expanded: expanded });\n\n    // After data loaded, need set new expandedKeys\n    if (expanded && props.loadData) {\n      return props.loadData(treeNode).then(function () {\n        if (!controlled) {\n          _this3.setState({ expandedKeys: expandedKeys });\n        }\n      });\n    }\n  };\n\n  Tree.prototype.onSelect = function onSelect(treeNode) {\n    var props = this.props,\n        state = this.state;\n\n    var eventKey = treeNode.props.eventKey;\n    var selected = !treeNode.props.selected;\n\n    var selectedKeys = [].concat(state.selectedKeys);\n    if (!selected) {\n      var index = selectedKeys.indexOf(eventKey);\n      selectedKeys.splice(index, 1);\n    } else if (!props.multiple) {\n      selectedKeys = [eventKey];\n    } else {\n      selectedKeys.push(eventKey);\n    }\n\n    // TODO: can be optimized if we remove selectedNodes in API\n    var selectedNodes = [];\n    if (selectedKeys.length) {\n      traverseTreeNodes(props.children, function (item) {\n        if (selectedKeys.indexOf(item.key) !== -1) {\n          selectedNodes.push(item);\n        }\n      });\n    }\n\n    if (!('selectedKeys' in props)) {\n      this.setState({\n        selectedKeys: selectedKeys\n      });\n    }\n\n    var eventObj = {\n      event: 'select',\n      selected: selected,\n      node: treeNode,\n      selectedNodes: selectedNodes\n    };\n    props.onSelect(selectedKeys, eventObj);\n  };\n\n  Tree.prototype.onMouseEnter = function onMouseEnter(e, treeNode) {\n    this.props.onMouseEnter({ event: e, node: treeNode });\n  };\n\n  Tree.prototype.onMouseLeave = function onMouseLeave(e, treeNode) {\n    this.props.onMouseLeave({ event: e, node: treeNode });\n  };\n\n  Tree.prototype.onContextMenu = function onContextMenu(e, treeNode) {\n    if (this.props.onRightClick) {\n      e.preventDefault();\n      this.props.onRightClick({ event: e, node: treeNode });\n    }\n  };\n\n  // all keyboard events callbacks run from here at first\n\n\n  Tree.prototype.getOpenTransitionName = function getOpenTransitionName() {\n    var props = this.props;\n    var transitionName = props.openTransitionName;\n    var animationName = props.openAnimation;\n    if (!transitionName && typeof animationName === 'string') {\n      return props.prefixCls + '-open-' + animationName;\n    }\n    return transitionName;\n  };\n\n  Tree.prototype.getDragNodesKeys = function getDragNodesKeys(treeNode) {\n    var dragNodesKeys = [];\n    traverseTreeNodes(treeNode.props.children, function (item, index, pos, key) {\n      if (isPositionPrefix(treeNode.props.pos, pos)) {\n        dragNodesKeys.push(key);\n      }\n    });\n    dragNodesKeys.push(treeNode.props.eventKey || treeNode.props.pos);\n    return dragNodesKeys;\n  };\n\n  Tree.prototype.getExpandedKeys = function getExpandedKeys(treeNode, expand) {\n    var eventKey = treeNode.props.eventKey;\n    var expandedKeys = this.state.expandedKeys;\n    var expandedIndex = expandedKeys.indexOf(eventKey);\n    if (!expand && expandedIndex > -1) {\n      var exKeys = [].concat(expandedKeys);\n      exKeys.splice(expandedIndex, 1);\n      return exKeys;\n    }\n    if (expand && expandedKeys.indexOf(eventKey) === -1) {\n      return expandedKeys.concat([eventKey]);\n    }\n  };\n\n  Tree.prototype.generateTreeNodesStates = function generateTreeNodesStates(children, checkedKeys) {\n    var checkedPositions = [];\n    var treeNodesStates = {};\n    traverseTreeNodes(children, function (item, _, pos, key, childrenPos, parentPos) {\n      treeNodesStates[pos] = {\n        node: item,\n        key: key,\n        checked: false,\n        halfChecked: false,\n        disabled: item.props.disabled,\n        disableCheckbox: item.props.disableCheckbox,\n        childrenPos: childrenPos,\n        parentPos: parentPos\n      };\n      if (checkedKeys.indexOf(key) !== -1) {\n        treeNodesStates[pos].checked = true;\n        checkedPositions.push(pos);\n      }\n    });\n    checkedPositions.forEach(function (checkedPosition) {\n      updateCheckState(treeNodesStates, checkedPosition, true);\n    });\n    return treeNodesStates;\n  };\n\n  Tree.prototype.calcExpandedKeys = function calcExpandedKeys(props, isNotInit) {\n    var expandedKeys = props.expandedKeys || (isNotInit ? undefined : props.defaultExpandedKeys);\n    if (!expandedKeys) {\n      return undefined;\n    }\n    var expandAll = isNotInit ? false : props.defaultExpandAll;\n    if (!expandAll && !props.autoExpandParent) {\n      return expandedKeys;\n    }\n\n    var expandedPositionArr = [];\n    if (props.autoExpandParent) {\n      traverseTreeNodes(props.children, function (item, index, pos, key) {\n        if (expandedKeys.indexOf(key) > -1) {\n          expandedPositionArr.push(pos);\n        }\n      });\n    }\n    var filterExpandedKeysSet = {};\n    traverseTreeNodes(props.children, function (item, index, pos, key) {\n      if (expandAll) {\n        filterExpandedKeysSet[key] = true;\n      } else if (props.autoExpandParent) {\n        var isCurrentParentOfExpanded = expandedPositionArr.some(function (p) {\n          return isPositionPrefix(pos, p);\n        });\n        if (isCurrentParentOfExpanded) {\n          filterExpandedKeysSet[key] = true;\n        }\n      }\n    });\n    var filterExpandedKeys = Object.keys(filterExpandedKeysSet);\n    return filterExpandedKeys.length ? filterExpandedKeys : expandedKeys;\n  };\n\n  Tree.prototype.calcCheckedKeys = function calcCheckedKeys(props, isNotInit) {\n    if (!props.checkable) {\n      return { checkedKeys: [], halfCheckedKeys: [] };\n    }\n\n    var checkedKeys = props.checkedKeys || (isNotInit && !props.loadData ? undefined : props.defaultCheckedKeys);\n    if (!checkedKeys) {\n      return undefined;\n    }\n    if (Array.isArray(checkedKeys)) {\n      checkedKeys = { checkedKeys: checkedKeys, halfCheckedKeys: [] };\n    } else if (typeof checkedKeys === 'object') {\n      checkedKeys = { checkedKeys: checkedKeys.checked, halfCheckedKeys: checkedKeys.halfChecked };\n    }\n\n    if (!props.checkStrictly) {\n      var checked = checkedKeys.checkedKeys || [];\n      var treeNodesStates = this.generateTreeNodesStates(props.children, checked);\n      return getCheck(treeNodesStates);\n    }\n\n    return checkedKeys;\n  };\n\n  Tree.prototype.calcSelectedKeys = function calcSelectedKeys(props, isNotInit) {\n    var selectedKeys = props.selectedKeys || (isNotInit ? undefined : props.defaultSelectedKeys);\n    if (!selectedKeys) {\n      return undefined;\n    }\n    if (props.multiple) {\n      return [].concat(selectedKeys);\n    }\n    if (selectedKeys.length) {\n      return [selectedKeys[0]];\n    }\n    return selectedKeys;\n  };\n\n  Tree.prototype.calcDropPosition = function calcDropPosition(e, treeNode) {\n    var offsetTop = getOffset(treeNode.selectHandle).top;\n    var offsetHeight = treeNode.selectHandle.offsetHeight;\n    var pageY = e.pageY;\n    var gapHeight = 2; // TODO: remove hard code\n    if (pageY > offsetTop + offsetHeight - gapHeight) {\n      return 1;\n    }\n    if (pageY < offsetTop + gapHeight) {\n      return -1;\n    }\n    return 0;\n  };\n\n  Tree.prototype.renderTreeNode = function renderTreeNode(child, index) {\n    var level = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n    var state = this.state,\n        props = this.props;\n\n    var pos = level + '-' + index;\n    var key = child.key || pos;\n\n    var childProps = {\n      root: this,\n      eventKey: key,\n      pos: pos,\n      loadData: props.loadData,\n      prefixCls: props.prefixCls,\n      showIcon: props.showIcon,\n      draggable: props.draggable,\n      dragOver: state.dragOverNodeKey === key && state.dropPosition === 0,\n      dragOverGapTop: state.dragOverNodeKey === key && state.dropPosition === -1,\n      dragOverGapBottom: state.dragOverNodeKey === key && state.dropPosition === 1,\n      expanded: state.expandedKeys.indexOf(key) !== -1,\n      selected: state.selectedKeys.indexOf(key) !== -1,\n      openTransitionName: this.getOpenTransitionName(),\n      openAnimation: props.openAnimation,\n      filterTreeNode: this.filterTreeNode\n    };\n    if (props.checkable) {\n      childProps.checkable = props.checkable;\n      childProps.checked = state.checkedKeys.indexOf(key) !== -1;\n      childProps.halfChecked = state.halfCheckedKeys.indexOf(key) !== -1;\n    }\n    return React.cloneElement(child, childProps);\n  };\n\n  Tree.prototype.render = function render() {\n    var _classNames;\n\n    var props = this.props;\n    var className = classNames(props.prefixCls, props.className, (_classNames = {}, _classNames[props.prefixCls + '-show-line'] = props.showLine, _classNames));\n    var domProps = {};\n    if (props.focusable) {\n      domProps.tabIndex = '0';\n      domProps.onKeyDown = this.onKeyDown;\n    }\n\n    return React.createElement(\n      'ul',\n      _extends({}, domProps, {\n        className: className,\n        role: 'tree-node',\n        unselectable: 'on'\n      }),\n      React.Children.map(props.children, this.renderTreeNode, this)\n    );\n  };\n\n  return Tree;\n}(React.Component);\n\nTree.propTypes = {\n  prefixCls: PropTypes.string,\n  children: PropTypes.any,\n  showLine: PropTypes.bool,\n  showIcon: PropTypes.bool,\n  selectable: PropTypes.bool,\n  multiple: PropTypes.bool,\n  checkable: PropTypes.oneOfType([PropTypes.bool, PropTypes.node]),\n  checkStrictly: PropTypes.bool,\n  draggable: PropTypes.bool,\n  autoExpandParent: PropTypes.bool,\n  defaultExpandAll: PropTypes.bool,\n  defaultExpandedKeys: PropTypes.arrayOf(PropTypes.string),\n  expandedKeys: PropTypes.arrayOf(PropTypes.string),\n  defaultCheckedKeys: PropTypes.arrayOf(PropTypes.string),\n  checkedKeys: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.string), PropTypes.object]),\n  defaultSelectedKeys: PropTypes.arrayOf(PropTypes.string),\n  selectedKeys: PropTypes.arrayOf(PropTypes.string),\n  onExpand: PropTypes.func,\n  onCheck: PropTypes.func,\n  onSelect: PropTypes.func,\n  loadData: PropTypes.func,\n  onMouseEnter: PropTypes.func,\n  onMouseLeave: PropTypes.func,\n  onRightClick: PropTypes.func,\n  onDragStart: PropTypes.func,\n  onDragEnter: PropTypes.func,\n  onDragOver: PropTypes.func,\n  onDragLeave: PropTypes.func,\n  onDrop: PropTypes.func,\n  onDragEnd: PropTypes.func,\n  filterTreeNode: PropTypes.func,\n  openTransitionName: PropTypes.string,\n  openAnimation: PropTypes.oneOfType([PropTypes.string, PropTypes.object])\n};\nTree.childContextTypes = contextTypes;\nTree.defaultProps = {\n  prefixCls: 'rc-tree',\n  showLine: false,\n  showIcon: true,\n  selectable: true,\n  multiple: false,\n  checkable: false,\n  checkStrictly: false,\n  draggable: false,\n  autoExpandParent: true,\n  defaultExpandAll: false,\n  defaultExpandedKeys: [],\n  defaultCheckedKeys: [],\n  defaultSelectedKeys: [],\n  onExpand: noop,\n  onCheck: noop,\n  onSelect: noop,\n  onDragStart: noop,\n  onDragEnter: noop,\n  onDragOver: noop,\n  onDragLeave: noop,\n  onDrop: noop,\n  onDragEnd: noop,\n  onMouseEnter: noop,\n  onMouseLeave: noop\n};\n\nvar _initialiseProps = function _initialiseProps() {\n  var _this4 = this;\n\n  this.onCheck = function (treeNode) {\n    var props = _this4.props,\n        state = _this4.state;\n\n    var checked = !treeNode.props.checked || treeNode.props.halfChecked;\n    var eventObj = {\n      event: 'check',\n      node: treeNode,\n      checked: checked\n    };\n\n    if (props.checkStrictly) {\n      var eventKey = treeNode.props.eventKey;\n      var checkedKeys = [].concat(state.checkedKeys);\n      var index = checkedKeys.indexOf(eventKey);\n      if (checked && index === -1) {\n        checkedKeys.push(eventKey);\n      }\n      if (!checked && index > -1) {\n        checkedKeys.splice(index, 1);\n      }\n\n      eventObj.checkedNodes = [];\n      traverseTreeNodes(props.children, function (item) {\n        if (checkedKeys.indexOf(item.key) !== -1) {\n          eventObj.checkedNodes.push(item);\n        }\n      });\n\n      if (!('checkedKeys' in props)) {\n        _this4.setState({\n          checkedKeys: checkedKeys\n        });\n      }\n      props.onCheck(getStrictlyValue(checkedKeys, state.halfCheckedKeys), eventObj);\n    } else {\n      var treeNodesStates = _this4.generateTreeNodesStates(props.children, state.checkedKeys);\n      treeNodesStates[treeNode.props.pos].checked = checked;\n      treeNodesStates[treeNode.props.pos].halfChecked = false;\n      updateCheckState(treeNodesStates, treeNode.props.pos, checked);\n\n      var checkKeys = getCheck(treeNodesStates);\n      eventObj.checkedNodes = checkKeys.checkedNodes;\n      eventObj.checkedNodesPositions = checkKeys.checkedNodesPositions; // TODO: not in API\n      eventObj.halfCheckedKeys = checkKeys.halfCheckedKeys; // TODO: not in API\n\n      if (!('checkedKeys' in props)) {\n        _this4.setState({\n          checkedKeys: checkKeys.checkedKeys,\n          halfCheckedKeys: checkKeys.halfCheckedKeys\n        });\n      }\n      props.onCheck(checkKeys.checkedKeys, eventObj);\n    }\n  };\n\n  this.onKeyDown = function (e) {\n    e.preventDefault();\n  };\n\n  this.filterTreeNode = function (treeNode) {\n    var filterTreeNode = _this4.props.filterTreeNode;\n    if (typeof filterTreeNode !== 'function' || treeNode.props.disabled) {\n      return false;\n    }\n    return filterTreeNode.call(_this4, treeNode);\n  };\n};\n\nexport default Tree;"]},"metadata":{},"sourceType":"module"}