{"ast":null,"code":"import _objectWithoutProperties from 'babel-runtime/helpers/objectWithoutProperties';\nimport _extends from 'babel-runtime/helpers/extends';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport Trigger from 'rc-trigger';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport DropdownMenu from './DropdownMenu';\nimport ReactDOM from 'react-dom';\nimport { isSingleMode, saveRef } from './util';\nTrigger.displayName = 'Trigger';\nvar BUILT_IN_PLACEMENTS = {\n  bottomLeft: {\n    points: ['tl', 'bl'],\n    offset: [0, 4],\n    overflow: {\n      adjustX: 0,\n      adjustY: 1\n    }\n  },\n  topLeft: {\n    points: ['bl', 'tl'],\n    offset: [0, -4],\n    overflow: {\n      adjustX: 0,\n      adjustY: 1\n    }\n  }\n};\n\nvar SelectTrigger = function (_React$Component) {\n  _inherits(SelectTrigger, _React$Component);\n\n  function SelectTrigger() {\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, SelectTrigger);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.state = {\n      dropdownWidth: null\n    }, _this.setDropdownWidth = function () {\n      var width = ReactDOM.findDOMNode(_this).offsetWidth;\n\n      if (width !== _this.state.dropdownWidth) {\n        _this.setState({\n          dropdownWidth: width\n        });\n      }\n    }, _this.getInnerMenu = function () {\n      return _this.dropdownMenuRef && _this.dropdownMenuRef.menuRef;\n    }, _this.getPopupDOMNode = function () {\n      return _this.triggerRef.getPopupDomNode();\n    }, _this.getDropdownElement = function (newProps) {\n      var props = _this.props;\n      return React.createElement(DropdownMenu, _extends({\n        ref: saveRef(_this, 'dropdownMenuRef')\n      }, newProps, {\n        prefixCls: _this.getDropdownPrefixCls(),\n        onMenuSelect: props.onMenuSelect,\n        onMenuDeselect: props.onMenuDeselect,\n        onPopupScroll: props.onPopupScroll,\n        value: props.value,\n        backfillValue: props.backfillValue,\n        firstActiveValue: props.firstActiveValue,\n        defaultActiveFirstOption: props.defaultActiveFirstOption,\n        dropdownMenuStyle: props.dropdownMenuStyle\n      }));\n    }, _this.getDropdownTransitionName = function () {\n      var props = _this.props;\n      var transitionName = props.transitionName;\n\n      if (!transitionName && props.animation) {\n        transitionName = _this.getDropdownPrefixCls() + '-' + props.animation;\n      }\n\n      return transitionName;\n    }, _this.getDropdownPrefixCls = function () {\n      return _this.props.prefixCls + '-dropdown';\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  SelectTrigger.prototype.componentDidMount = function componentDidMount() {\n    this.setDropdownWidth();\n  };\n\n  SelectTrigger.prototype.componentDidUpdate = function componentDidUpdate() {\n    this.setDropdownWidth();\n  };\n\n  SelectTrigger.prototype.render = function render() {\n    var _popupClassName;\n\n    var _props = this.props,\n        onPopupFocus = _props.onPopupFocus,\n        props = _objectWithoutProperties(_props, ['onPopupFocus']);\n\n    var multiple = props.multiple,\n        visible = props.visible,\n        inputValue = props.inputValue,\n        dropdownAlign = props.dropdownAlign,\n        disabled = props.disabled,\n        showSearch = props.showSearch,\n        dropdownClassName = props.dropdownClassName,\n        dropdownStyle = props.dropdownStyle,\n        dropdownMatchSelectWidth = props.dropdownMatchSelectWidth;\n    var dropdownPrefixCls = this.getDropdownPrefixCls();\n    var popupClassName = (_popupClassName = {}, _popupClassName[dropdownClassName] = !!dropdownClassName, _popupClassName[dropdownPrefixCls + '--' + (multiple ? 'multiple' : 'single')] = 1, _popupClassName);\n    var popupElement = this.getDropdownElement({\n      menuItems: props.options,\n      onPopupFocus: onPopupFocus,\n      multiple: multiple,\n      inputValue: inputValue,\n      visible: visible\n    });\n    var hideAction = void 0;\n\n    if (disabled) {\n      hideAction = [];\n    } else if (isSingleMode(props) && !showSearch) {\n      hideAction = ['click'];\n    } else {\n      hideAction = ['blur'];\n    }\n\n    var popupStyle = _extends({}, dropdownStyle);\n\n    var widthProp = dropdownMatchSelectWidth ? 'width' : 'minWidth';\n\n    if (this.state.dropdownWidth) {\n      popupStyle[widthProp] = this.state.dropdownWidth + 'px';\n    }\n\n    return React.createElement(Trigger, _extends({}, props, {\n      showAction: disabled ? [] : this.props.showAction,\n      hideAction: hideAction,\n      ref: saveRef(this, 'triggerRef'),\n      popupPlacement: 'bottomLeft',\n      builtinPlacements: BUILT_IN_PLACEMENTS,\n      prefixCls: dropdownPrefixCls,\n      popupTransitionName: this.getDropdownTransitionName(),\n      onPopupVisibleChange: props.onDropdownVisibleChange,\n      popup: popupElement,\n      popupAlign: dropdownAlign,\n      popupVisible: visible,\n      getPopupContainer: props.getPopupContainer,\n      popupClassName: classnames(popupClassName),\n      popupStyle: popupStyle\n    }), props.children);\n  };\n\n  return SelectTrigger;\n}(React.Component);\n\nSelectTrigger.propTypes = {\n  onPopupFocus: PropTypes.func,\n  onPopupScroll: PropTypes.func,\n  dropdownMatchSelectWidth: PropTypes.bool,\n  dropdownAlign: PropTypes.object,\n  visible: PropTypes.bool,\n  disabled: PropTypes.bool,\n  showSearch: PropTypes.bool,\n  dropdownClassName: PropTypes.string,\n  multiple: PropTypes.bool,\n  inputValue: PropTypes.string,\n  filterOption: PropTypes.any,\n  options: PropTypes.any,\n  prefixCls: PropTypes.string,\n  popupClassName: PropTypes.string,\n  children: PropTypes.any,\n  showAction: PropTypes.arrayOf(PropTypes.string)\n};\nexport default SelectTrigger;\nSelectTrigger.displayName = 'SelectTrigger';","map":{"version":3,"sources":["/Users/administrator/Desktop/DrChain/drchain_frontend/drchain/node_modules/rc-select/es/SelectTrigger.js"],"names":["_objectWithoutProperties","_extends","_classCallCheck","_possibleConstructorReturn","_inherits","Trigger","React","PropTypes","classnames","DropdownMenu","ReactDOM","isSingleMode","saveRef","displayName","BUILT_IN_PLACEMENTS","bottomLeft","points","offset","overflow","adjustX","adjustY","topLeft","SelectTrigger","_React$Component","_temp","_this","_ret","_len","arguments","length","args","Array","_key","call","apply","concat","state","dropdownWidth","setDropdownWidth","width","findDOMNode","offsetWidth","setState","getInnerMenu","dropdownMenuRef","menuRef","getPopupDOMNode","triggerRef","getPopupDomNode","getDropdownElement","newProps","props","createElement","ref","prefixCls","getDropdownPrefixCls","onMenuSelect","onMenuDeselect","onPopupScroll","value","backfillValue","firstActiveValue","defaultActiveFirstOption","dropdownMenuStyle","getDropdownTransitionName","transitionName","animation","prototype","componentDidMount","componentDidUpdate","render","_popupClassName","_props","onPopupFocus","multiple","visible","inputValue","dropdownAlign","disabled","showSearch","dropdownClassName","dropdownStyle","dropdownMatchSelectWidth","dropdownPrefixCls","popupClassName","popupElement","menuItems","options","hideAction","popupStyle","widthProp","showAction","popupPlacement","builtinPlacements","popupTransitionName","onPopupVisibleChange","onDropdownVisibleChange","popup","popupAlign","popupVisible","getPopupContainer","children","Component","propTypes","func","bool","object","string","filterOption","any","arrayOf"],"mappings":"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","sourcesContent":["import _objectWithoutProperties from 'babel-runtime/helpers/objectWithoutProperties';\nimport _extends from 'babel-runtime/helpers/extends';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport Trigger from 'rc-trigger';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport DropdownMenu from './DropdownMenu';\nimport ReactDOM from 'react-dom';\nimport { isSingleMode, saveRef } from './util';\n\nTrigger.displayName = 'Trigger';\n\nvar BUILT_IN_PLACEMENTS = {\n  bottomLeft: {\n    points: ['tl', 'bl'],\n    offset: [0, 4],\n    overflow: {\n      adjustX: 0,\n      adjustY: 1\n    }\n  },\n  topLeft: {\n    points: ['bl', 'tl'],\n    offset: [0, -4],\n    overflow: {\n      adjustX: 0,\n      adjustY: 1\n    }\n  }\n};\n\nvar SelectTrigger = function (_React$Component) {\n  _inherits(SelectTrigger, _React$Component);\n\n  function SelectTrigger() {\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, SelectTrigger);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.state = {\n      dropdownWidth: null\n    }, _this.setDropdownWidth = function () {\n      var width = ReactDOM.findDOMNode(_this).offsetWidth;\n      if (width !== _this.state.dropdownWidth) {\n        _this.setState({ dropdownWidth: width });\n      }\n    }, _this.getInnerMenu = function () {\n      return _this.dropdownMenuRef && _this.dropdownMenuRef.menuRef;\n    }, _this.getPopupDOMNode = function () {\n      return _this.triggerRef.getPopupDomNode();\n    }, _this.getDropdownElement = function (newProps) {\n      var props = _this.props;\n      return React.createElement(DropdownMenu, _extends({\n        ref: saveRef(_this, 'dropdownMenuRef')\n      }, newProps, {\n        prefixCls: _this.getDropdownPrefixCls(),\n        onMenuSelect: props.onMenuSelect,\n        onMenuDeselect: props.onMenuDeselect,\n        onPopupScroll: props.onPopupScroll,\n        value: props.value,\n        backfillValue: props.backfillValue,\n        firstActiveValue: props.firstActiveValue,\n        defaultActiveFirstOption: props.defaultActiveFirstOption,\n        dropdownMenuStyle: props.dropdownMenuStyle\n      }));\n    }, _this.getDropdownTransitionName = function () {\n      var props = _this.props;\n      var transitionName = props.transitionName;\n      if (!transitionName && props.animation) {\n        transitionName = _this.getDropdownPrefixCls() + '-' + props.animation;\n      }\n      return transitionName;\n    }, _this.getDropdownPrefixCls = function () {\n      return _this.props.prefixCls + '-dropdown';\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  SelectTrigger.prototype.componentDidMount = function componentDidMount() {\n    this.setDropdownWidth();\n  };\n\n  SelectTrigger.prototype.componentDidUpdate = function componentDidUpdate() {\n    this.setDropdownWidth();\n  };\n\n  SelectTrigger.prototype.render = function render() {\n    var _popupClassName;\n\n    var _props = this.props,\n        onPopupFocus = _props.onPopupFocus,\n        props = _objectWithoutProperties(_props, ['onPopupFocus']);\n\n    var multiple = props.multiple,\n        visible = props.visible,\n        inputValue = props.inputValue,\n        dropdownAlign = props.dropdownAlign,\n        disabled = props.disabled,\n        showSearch = props.showSearch,\n        dropdownClassName = props.dropdownClassName,\n        dropdownStyle = props.dropdownStyle,\n        dropdownMatchSelectWidth = props.dropdownMatchSelectWidth;\n\n    var dropdownPrefixCls = this.getDropdownPrefixCls();\n    var popupClassName = (_popupClassName = {}, _popupClassName[dropdownClassName] = !!dropdownClassName, _popupClassName[dropdownPrefixCls + '--' + (multiple ? 'multiple' : 'single')] = 1, _popupClassName);\n    var popupElement = this.getDropdownElement({\n      menuItems: props.options,\n      onPopupFocus: onPopupFocus,\n      multiple: multiple,\n      inputValue: inputValue,\n      visible: visible\n    });\n    var hideAction = void 0;\n    if (disabled) {\n      hideAction = [];\n    } else if (isSingleMode(props) && !showSearch) {\n      hideAction = ['click'];\n    } else {\n      hideAction = ['blur'];\n    }\n    var popupStyle = _extends({}, dropdownStyle);\n    var widthProp = dropdownMatchSelectWidth ? 'width' : 'minWidth';\n    if (this.state.dropdownWidth) {\n      popupStyle[widthProp] = this.state.dropdownWidth + 'px';\n    }\n\n    return React.createElement(\n      Trigger,\n      _extends({}, props, {\n        showAction: disabled ? [] : this.props.showAction,\n        hideAction: hideAction,\n        ref: saveRef(this, 'triggerRef'),\n        popupPlacement: 'bottomLeft',\n        builtinPlacements: BUILT_IN_PLACEMENTS,\n        prefixCls: dropdownPrefixCls,\n        popupTransitionName: this.getDropdownTransitionName(),\n        onPopupVisibleChange: props.onDropdownVisibleChange,\n        popup: popupElement,\n        popupAlign: dropdownAlign,\n        popupVisible: visible,\n        getPopupContainer: props.getPopupContainer,\n        popupClassName: classnames(popupClassName),\n        popupStyle: popupStyle\n      }),\n      props.children\n    );\n  };\n\n  return SelectTrigger;\n}(React.Component);\n\nSelectTrigger.propTypes = {\n  onPopupFocus: PropTypes.func,\n  onPopupScroll: PropTypes.func,\n  dropdownMatchSelectWidth: PropTypes.bool,\n  dropdownAlign: PropTypes.object,\n  visible: PropTypes.bool,\n  disabled: PropTypes.bool,\n  showSearch: PropTypes.bool,\n  dropdownClassName: PropTypes.string,\n  multiple: PropTypes.bool,\n  inputValue: PropTypes.string,\n  filterOption: PropTypes.any,\n  options: PropTypes.any,\n  prefixCls: PropTypes.string,\n  popupClassName: PropTypes.string,\n  children: PropTypes.any,\n  showAction: PropTypes.arrayOf(PropTypes.string)\n};\nexport default SelectTrigger;\n\n\nSelectTrigger.displayName = 'SelectTrigger';"]},"metadata":{},"sourceType":"module"}