{"ast":null,"code":"import _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport Button from '../button';\n\nvar ActionButton = function (_React$Component) {\n  _inherits(ActionButton, _React$Component);\n\n  function ActionButton(props) {\n    _classCallCheck(this, ActionButton);\n\n    var _this = _possibleConstructorReturn(this, (ActionButton.__proto__ || Object.getPrototypeOf(ActionButton)).call(this, props));\n\n    _this.onClick = function () {\n      var _this$props = _this.props,\n          actionFn = _this$props.actionFn,\n          closeModal = _this$props.closeModal;\n\n      if (actionFn) {\n        var ret = void 0;\n\n        if (actionFn.length) {\n          ret = actionFn(closeModal);\n        } else {\n          ret = actionFn();\n\n          if (!ret) {\n            closeModal();\n          }\n        }\n\n        if (ret && ret.then) {\n          _this.setState({\n            loading: true\n          });\n\n          ret.then(function () {\n            // It's unnecessary to set loading=false, for the Modal will be unmounted after close.\n            // this.setState({ loading: false });\n            closeModal.apply(undefined, arguments);\n          }, function () {\n            // See: https://github.com/ant-design/ant-design/issues/6183\n            _this.setState({\n              loading: false\n            });\n          });\n        }\n      } else {\n        closeModal();\n      }\n    };\n\n    _this.state = {\n      loading: false\n    };\n    return _this;\n  }\n\n  _createClass(ActionButton, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      if (this.props.autoFocus) {\n        var $this = ReactDOM.findDOMNode(this);\n        this.timeoutId = setTimeout(function () {\n          return $this.focus();\n        });\n      }\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      clearTimeout(this.timeoutId);\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _props = this.props,\n          type = _props.type,\n          children = _props.children;\n      var loading = this.state.loading;\n      return React.createElement(Button, {\n        type: type,\n        onClick: this.onClick,\n        loading: loading\n      }, children);\n    }\n  }]);\n\n  return ActionButton;\n}(React.Component);\n\nexport default ActionButton;","map":{"version":3,"sources":["/Users/administrator/Desktop/DrChain/drchain_frontend/drchain/node_modules/antd/es/modal/ActionButton.js"],"names":["_classCallCheck","_createClass","_possibleConstructorReturn","_inherits","React","ReactDOM","Button","ActionButton","_React$Component","props","_this","__proto__","Object","getPrototypeOf","call","onClick","_this$props","actionFn","closeModal","ret","length","then","setState","loading","apply","undefined","arguments","state","key","value","componentDidMount","autoFocus","$this","findDOMNode","timeoutId","setTimeout","focus","componentWillUnmount","clearTimeout","render","_props","type","children","createElement","Component"],"mappings":"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","sourcesContent":["import _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport Button from '../button';\n\nvar ActionButton = function (_React$Component) {\n    _inherits(ActionButton, _React$Component);\n\n    function ActionButton(props) {\n        _classCallCheck(this, ActionButton);\n\n        var _this = _possibleConstructorReturn(this, (ActionButton.__proto__ || Object.getPrototypeOf(ActionButton)).call(this, props));\n\n        _this.onClick = function () {\n            var _this$props = _this.props,\n                actionFn = _this$props.actionFn,\n                closeModal = _this$props.closeModal;\n\n            if (actionFn) {\n                var ret = void 0;\n                if (actionFn.length) {\n                    ret = actionFn(closeModal);\n                } else {\n                    ret = actionFn();\n                    if (!ret) {\n                        closeModal();\n                    }\n                }\n                if (ret && ret.then) {\n                    _this.setState({ loading: true });\n                    ret.then(function () {\n                        // It's unnecessary to set loading=false, for the Modal will be unmounted after close.\n                        // this.setState({ loading: false });\n                        closeModal.apply(undefined, arguments);\n                    }, function () {\n                        // See: https://github.com/ant-design/ant-design/issues/6183\n                        _this.setState({ loading: false });\n                    });\n                }\n            } else {\n                closeModal();\n            }\n        };\n        _this.state = {\n            loading: false\n        };\n        return _this;\n    }\n\n    _createClass(ActionButton, [{\n        key: 'componentDidMount',\n        value: function componentDidMount() {\n            if (this.props.autoFocus) {\n                var $this = ReactDOM.findDOMNode(this);\n                this.timeoutId = setTimeout(function () {\n                    return $this.focus();\n                });\n            }\n        }\n    }, {\n        key: 'componentWillUnmount',\n        value: function componentWillUnmount() {\n            clearTimeout(this.timeoutId);\n        }\n    }, {\n        key: 'render',\n        value: function render() {\n            var _props = this.props,\n                type = _props.type,\n                children = _props.children;\n\n            var loading = this.state.loading;\n            return React.createElement(\n                Button,\n                { type: type, onClick: this.onClick, loading: loading },\n                children\n            );\n        }\n    }]);\n\n    return ActionButton;\n}(React.Component);\n\nexport default ActionButton;"]},"metadata":{},"sourceType":"module"}