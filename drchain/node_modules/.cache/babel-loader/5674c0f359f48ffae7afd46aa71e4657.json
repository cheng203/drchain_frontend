{"ast":null,"code":"import _extends from 'babel-runtime/helpers/extends';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport ReactDOM from 'react-dom';\nimport classnames from 'classnames';\nimport Trigger from 'rc-trigger';\nimport Tree, { TreeNode } from 'rc-tree';\nimport { loopAllChildren, flatToHierarchy, getValuePropValue, labelCompatible, saveRef } from './util';\nimport toArray from 'rc-util/es/Children/toArray';\nvar BUILT_IN_PLACEMENTS = {\n  bottomLeft: {\n    points: ['tl', 'bl'],\n    offset: [0, 4],\n    overflow: {\n      adjustX: 0,\n      adjustY: 1\n    }\n  },\n  topLeft: {\n    points: ['bl', 'tl'],\n    offset: [0, -4],\n    overflow: {\n      adjustX: 0,\n      adjustY: 1\n    }\n  }\n};\n\nvar SelectTrigger = function (_Component) {\n  _inherits(SelectTrigger, _Component);\n\n  function SelectTrigger() {\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, SelectTrigger);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _Component.call.apply(_Component, [this].concat(args))), _this), _this.state = {\n      _expandedKeys: [],\n      fireOnExpand: false,\n      dropdownWidth: null\n    }, _this.onExpand = function (expandedKeys) {\n      // rerender\n      _this.setState({\n        _expandedKeys: expandedKeys,\n        fireOnExpand: true\n      }, function () {\n        // Fix https://github.com/ant-design/ant-design/issues/5689\n        if (_this.trigger && _this.trigger.forcePopupAlign) {\n          _this.trigger.forcePopupAlign();\n        }\n      });\n    }, _this.highlightTreeNode = function (treeNode) {\n      var props = _this.props;\n      var filterVal = treeNode.props[labelCompatible(props.treeNodeFilterProp)];\n\n      if (typeof filterVal === 'string') {\n        return props.inputValue && filterVal.indexOf(props.inputValue) > -1;\n      }\n\n      return false;\n    }, _this.filterTreeNode = function (input, child) {\n      if (!input) {\n        return true;\n      }\n\n      var filterTreeNode = _this.props.filterTreeNode;\n\n      if (!filterTreeNode) {\n        return true;\n      }\n\n      if (child.props.disabled) {\n        return false;\n      }\n\n      return filterTreeNode.call(_this, input, child);\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  SelectTrigger.prototype.componentDidMount = function componentDidMount() {\n    this.setDropdownWidth();\n  };\n\n  SelectTrigger.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {\n    if (nextProps.inputValue && nextProps.inputValue !== this.props.inputValue) {\n      // set autoExpandParent to true\n      this.setState({\n        _expandedKeys: [],\n        fireOnExpand: false\n      });\n    }\n  };\n\n  SelectTrigger.prototype.componentDidUpdate = function componentDidUpdate() {\n    this.setDropdownWidth();\n  };\n\n  SelectTrigger.prototype.setDropdownWidth = function setDropdownWidth() {\n    var width = ReactDOM.findDOMNode(this).offsetWidth;\n\n    if (width !== this.state.dropdownWidth) {\n      this.setState({\n        dropdownWidth: width\n      });\n    }\n  };\n\n  SelectTrigger.prototype.getPopupEleRefs = function getPopupEleRefs() {\n    return this.popupEle;\n  };\n\n  SelectTrigger.prototype.getPopupDOMNode = function getPopupDOMNode() {\n    return this.trigger.getPopupDomNode();\n  };\n\n  SelectTrigger.prototype.getDropdownTransitionName = function getDropdownTransitionName() {\n    var props = this.props;\n    var transitionName = props.transitionName;\n\n    if (!transitionName && props.animation) {\n      transitionName = this.getDropdownPrefixCls() + '-' + props.animation;\n    }\n\n    return transitionName;\n  };\n\n  SelectTrigger.prototype.getDropdownPrefixCls = function getDropdownPrefixCls() {\n    return this.props.prefixCls + '-dropdown';\n  };\n\n  SelectTrigger.prototype.processTreeNode = function processTreeNode(treeNodes) {\n    var _this2 = this;\n\n    var filterPoss = [];\n    this._expandedKeys = [];\n    loopAllChildren(treeNodes, function (child, index, pos) {\n      if (_this2.filterTreeNode(_this2.props.inputValue, child)) {\n        filterPoss.push(pos);\n\n        _this2._expandedKeys.push(child.key);\n      }\n    }); // Include the filtered nodes's ancestral nodes.\n\n    var processedPoss = [];\n    filterPoss.forEach(function (pos) {\n      var arr = pos.split('-');\n      arr.reduce(function (pre, cur) {\n        var res = pre + '-' + cur;\n\n        if (processedPoss.indexOf(res) < 0) {\n          processedPoss.push(res);\n        }\n\n        return res;\n      });\n    });\n    var filterNodesPositions = [];\n    loopAllChildren(treeNodes, function (child, index, pos) {\n      if (processedPoss.indexOf(pos) > -1) {\n        filterNodesPositions.push({\n          node: child,\n          pos: pos\n        });\n      }\n    });\n    var hierarchyNodes = flatToHierarchy(filterNodesPositions);\n\n    var recursive = function recursive(children) {\n      return children.map(function (child) {\n        if (child.children) {\n          return React.cloneElement(child.node, {}, recursive(child.children));\n        }\n\n        return child.node;\n      });\n    };\n\n    return recursive(hierarchyNodes);\n  };\n\n  SelectTrigger.prototype.renderTree = function renderTree(keys, halfCheckedKeys, newTreeNodes, multiple) {\n    var props = this.props;\n    var trProps = {\n      multiple: multiple,\n      prefixCls: props.prefixCls + '-tree',\n      showIcon: props.treeIcon,\n      showLine: props.treeLine,\n      defaultExpandAll: props.treeDefaultExpandAll,\n      defaultExpandedKeys: props.treeDefaultExpandedKeys,\n      filterTreeNode: this.highlightTreeNode\n    };\n\n    if (props.treeCheckable) {\n      trProps.selectable = false;\n      trProps.checkable = props.treeCheckable;\n      trProps.onCheck = props.onSelect;\n      trProps.checkStrictly = props.treeCheckStrictly;\n\n      if (props.inputValue) {\n        // enable checkStrictly when search tree.\n        trProps.checkStrictly = true;\n      } else {\n        trProps._treeNodesStates = props._treeNodesStates;\n      }\n\n      if (trProps.treeCheckStrictly && halfCheckedKeys.length) {\n        trProps.checkedKeys = {\n          checked: keys,\n          halfChecked: halfCheckedKeys\n        };\n      } else {\n        trProps.checkedKeys = keys;\n      }\n    } else {\n      trProps.selectedKeys = keys;\n      trProps.onSelect = props.onSelect;\n    } // expand keys\n\n\n    if (!trProps.defaultExpandAll && !trProps.defaultExpandedKeys && !props.loadData) {\n      trProps.expandedKeys = keys;\n    }\n\n    trProps.autoExpandParent = true;\n    trProps.onExpand = this.onExpand;\n\n    if (this._expandedKeys && this._expandedKeys.length) {\n      trProps.expandedKeys = this._expandedKeys;\n    }\n\n    if (this.state.fireOnExpand) {\n      trProps.expandedKeys = this.state._expandedKeys;\n      trProps.autoExpandParent = false;\n    } // async loadData\n\n\n    if (props.loadData) {\n      trProps.loadData = props.loadData;\n    }\n\n    return React.createElement(Tree, _extends({\n      ref: saveRef(this, 'popupEle')\n    }, trProps), newTreeNodes);\n  };\n\n  SelectTrigger.prototype.render = function render() {\n    var _popupClassName;\n\n    var props = this.props;\n    var multiple = props.multiple;\n    var dropdownPrefixCls = this.getDropdownPrefixCls();\n    var popupClassName = (_popupClassName = {}, _popupClassName[props.dropdownClassName] = !!props.dropdownClassName, _popupClassName[dropdownPrefixCls + '--' + (multiple ? 'multiple' : 'single')] = 1, _popupClassName);\n    var visible = props.visible;\n    var search = multiple || !props.showSearch ? null : React.createElement('span', {\n      className: dropdownPrefixCls + '-search'\n    }, props.inputElement);\n\n    var recursive = function recursive(children) {\n      // Note: if use `React.Children.map`, the node's key will be modified.\n      return toArray(children).map(function handler(child) {\n        // eslint-disable-line\n        if (!child) {\n          return null;\n        }\n\n        if (child && child.props.children) {\n          // null or String has no Prop\n          return React.createElement(TreeNode, _extends({}, child.props, {\n            key: child.key\n          }), recursive(child.props.children));\n        }\n\n        return React.createElement(TreeNode, _extends({}, child.props, {\n          key: child.key\n        }));\n      });\n    }; // const s = Date.now();\n\n\n    var treeNodes = void 0;\n\n    if (props._cachetreeData && this.treeNodes) {\n      treeNodes = this.treeNodes;\n    } else {\n      treeNodes = recursive(props.treeData || props.treeNodes);\n      this.treeNodes = treeNodes;\n    } // console.log(Date.now()-s);\n\n\n    if (props.inputValue) {\n      treeNodes = this.processTreeNode(treeNodes);\n    }\n\n    var keys = [];\n    var halfCheckedKeys = [];\n    loopAllChildren(treeNodes, function (child) {\n      if (props.value.some(function (item) {\n        return item.value === getValuePropValue(child);\n      })) {\n        keys.push(child.key);\n      }\n\n      if (props.halfCheckedValues && props.halfCheckedValues.some(function (item) {\n        return item.value === getValuePropValue(child);\n      })) {\n        halfCheckedKeys.push(child.key);\n      }\n    });\n    var notFoundContent = void 0;\n\n    if (!treeNodes.length) {\n      if (props.notFoundContent) {\n        notFoundContent = React.createElement('span', {\n          className: props.prefixCls + '-not-found'\n        }, props.notFoundContent);\n      } else if (!search) {\n        visible = false;\n      }\n    }\n\n    var popupElement = React.createElement('div', null, search, notFoundContent || this.renderTree(keys, halfCheckedKeys, treeNodes, multiple));\n\n    var popupStyle = _extends({}, props.dropdownStyle);\n\n    var widthProp = props.dropdownMatchSelectWidth ? 'width' : 'minWidth';\n\n    if (this.state.dropdownWidth) {\n      popupStyle[widthProp] = this.state.dropdownWidth + 'px';\n    }\n\n    return React.createElement(Trigger, {\n      action: props.disabled ? [] : ['click'],\n      ref: saveRef(this, 'trigger'),\n      popupPlacement: 'bottomLeft',\n      builtinPlacements: BUILT_IN_PLACEMENTS,\n      popupAlign: props.dropdownPopupAlign,\n      prefixCls: dropdownPrefixCls,\n      popupTransitionName: this.getDropdownTransitionName(),\n      onPopupVisibleChange: props.onDropdownVisibleChange,\n      popup: popupElement,\n      popupVisible: visible,\n      getPopupContainer: props.getPopupContainer,\n      popupClassName: classnames(popupClassName),\n      popupStyle: popupStyle\n    }, this.props.children);\n  };\n\n  return SelectTrigger;\n}(Component);\n\nSelectTrigger.propTypes = {\n  dropdownMatchSelectWidth: PropTypes.bool,\n  dropdownPopupAlign: PropTypes.object,\n  visible: PropTypes.bool,\n  filterTreeNode: PropTypes.any,\n  treeNodes: PropTypes.any,\n  inputValue: PropTypes.string,\n  prefixCls: PropTypes.string,\n  popupClassName: PropTypes.string,\n  children: PropTypes.any\n};\nexport default SelectTrigger;","map":{"version":3,"sources":["/Users/administrator/Desktop/DrChain/drchain_frontend/drchain/node_modules/rc-tree-select/es/SelectTrigger.js"],"names":["_extends","_classCallCheck","_possibleConstructorReturn","_inherits","React","Component","PropTypes","ReactDOM","classnames","Trigger","Tree","TreeNode","loopAllChildren","flatToHierarchy","getValuePropValue","labelCompatible","saveRef","toArray","BUILT_IN_PLACEMENTS","bottomLeft","points","offset","overflow","adjustX","adjustY","topLeft","SelectTrigger","_Component","_temp","_this","_ret","_len","arguments","length","args","Array","_key","call","apply","concat","state","_expandedKeys","fireOnExpand","dropdownWidth","onExpand","expandedKeys","setState","trigger","forcePopupAlign","highlightTreeNode","treeNode","props","filterVal","treeNodeFilterProp","inputValue","indexOf","filterTreeNode","input","child","disabled","prototype","componentDidMount","setDropdownWidth","componentWillReceiveProps","nextProps","componentDidUpdate","width","findDOMNode","offsetWidth","getPopupEleRefs","popupEle","getPopupDOMNode","getPopupDomNode","getDropdownTransitionName","transitionName","animation","getDropdownPrefixCls","prefixCls","processTreeNode","treeNodes","_this2","filterPoss","index","pos","push","key","processedPoss","forEach","arr","split","reduce","pre","cur","res","filterNodesPositions","node","hierarchyNodes","recursive","children","map","cloneElement","renderTree","keys","halfCheckedKeys","newTreeNodes","multiple","trProps","showIcon","treeIcon","showLine","treeLine","defaultExpandAll","treeDefaultExpandAll","defaultExpandedKeys","treeDefaultExpandedKeys","treeCheckable","selectable","checkable","onCheck","onSelect","checkStrictly","treeCheckStrictly","_treeNodesStates","checkedKeys","checked","halfChecked","selectedKeys","loadData","autoExpandParent","createElement","ref","render","_popupClassName","dropdownPrefixCls","popupClassName","dropdownClassName","visible","search","showSearch","className","inputElement","handler","_cachetreeData","treeData","value","some","item","halfCheckedValues","notFoundContent","popupElement","popupStyle","dropdownStyle","widthProp","dropdownMatchSelectWidth","action","popupPlacement","builtinPlacements","popupAlign","dropdownPopupAlign","popupTransitionName","onPopupVisibleChange","onDropdownVisibleChange","popup","popupVisible","getPopupContainer","propTypes","bool","object","any","string"],"mappings":"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","sourcesContent":["import _extends from 'babel-runtime/helpers/extends';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport ReactDOM from 'react-dom';\nimport classnames from 'classnames';\nimport Trigger from 'rc-trigger';\nimport Tree, { TreeNode } from 'rc-tree';\nimport { loopAllChildren, flatToHierarchy, getValuePropValue, labelCompatible, saveRef } from './util';\nimport toArray from 'rc-util/es/Children/toArray';\n\nvar BUILT_IN_PLACEMENTS = {\n  bottomLeft: {\n    points: ['tl', 'bl'],\n    offset: [0, 4],\n    overflow: {\n      adjustX: 0,\n      adjustY: 1\n    }\n  },\n  topLeft: {\n    points: ['bl', 'tl'],\n    offset: [0, -4],\n    overflow: {\n      adjustX: 0,\n      adjustY: 1\n    }\n  }\n};\n\nvar SelectTrigger = function (_Component) {\n  _inherits(SelectTrigger, _Component);\n\n  function SelectTrigger() {\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, SelectTrigger);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _Component.call.apply(_Component, [this].concat(args))), _this), _this.state = {\n      _expandedKeys: [],\n      fireOnExpand: false,\n      dropdownWidth: null\n    }, _this.onExpand = function (expandedKeys) {\n      // rerender\n      _this.setState({\n        _expandedKeys: expandedKeys,\n        fireOnExpand: true\n      }, function () {\n        // Fix https://github.com/ant-design/ant-design/issues/5689\n        if (_this.trigger && _this.trigger.forcePopupAlign) {\n          _this.trigger.forcePopupAlign();\n        }\n      });\n    }, _this.highlightTreeNode = function (treeNode) {\n      var props = _this.props;\n      var filterVal = treeNode.props[labelCompatible(props.treeNodeFilterProp)];\n      if (typeof filterVal === 'string') {\n        return props.inputValue && filterVal.indexOf(props.inputValue) > -1;\n      }\n      return false;\n    }, _this.filterTreeNode = function (input, child) {\n      if (!input) {\n        return true;\n      }\n      var filterTreeNode = _this.props.filterTreeNode;\n      if (!filterTreeNode) {\n        return true;\n      }\n      if (child.props.disabled) {\n        return false;\n      }\n      return filterTreeNode.call(_this, input, child);\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  SelectTrigger.prototype.componentDidMount = function componentDidMount() {\n    this.setDropdownWidth();\n  };\n\n  SelectTrigger.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {\n    if (nextProps.inputValue && nextProps.inputValue !== this.props.inputValue) {\n      // set autoExpandParent to true\n      this.setState({\n        _expandedKeys: [],\n        fireOnExpand: false\n      });\n    }\n  };\n\n  SelectTrigger.prototype.componentDidUpdate = function componentDidUpdate() {\n    this.setDropdownWidth();\n  };\n\n  SelectTrigger.prototype.setDropdownWidth = function setDropdownWidth() {\n    var width = ReactDOM.findDOMNode(this).offsetWidth;\n    if (width !== this.state.dropdownWidth) {\n      this.setState({ dropdownWidth: width });\n    }\n  };\n\n  SelectTrigger.prototype.getPopupEleRefs = function getPopupEleRefs() {\n    return this.popupEle;\n  };\n\n  SelectTrigger.prototype.getPopupDOMNode = function getPopupDOMNode() {\n    return this.trigger.getPopupDomNode();\n  };\n\n  SelectTrigger.prototype.getDropdownTransitionName = function getDropdownTransitionName() {\n    var props = this.props;\n    var transitionName = props.transitionName;\n    if (!transitionName && props.animation) {\n      transitionName = this.getDropdownPrefixCls() + '-' + props.animation;\n    }\n    return transitionName;\n  };\n\n  SelectTrigger.prototype.getDropdownPrefixCls = function getDropdownPrefixCls() {\n    return this.props.prefixCls + '-dropdown';\n  };\n\n  SelectTrigger.prototype.processTreeNode = function processTreeNode(treeNodes) {\n    var _this2 = this;\n\n    var filterPoss = [];\n    this._expandedKeys = [];\n    loopAllChildren(treeNodes, function (child, index, pos) {\n      if (_this2.filterTreeNode(_this2.props.inputValue, child)) {\n        filterPoss.push(pos);\n        _this2._expandedKeys.push(child.key);\n      }\n    });\n\n    // Include the filtered nodes's ancestral nodes.\n    var processedPoss = [];\n    filterPoss.forEach(function (pos) {\n      var arr = pos.split('-');\n      arr.reduce(function (pre, cur) {\n        var res = pre + '-' + cur;\n        if (processedPoss.indexOf(res) < 0) {\n          processedPoss.push(res);\n        }\n        return res;\n      });\n    });\n    var filterNodesPositions = [];\n    loopAllChildren(treeNodes, function (child, index, pos) {\n      if (processedPoss.indexOf(pos) > -1) {\n        filterNodesPositions.push({ node: child, pos: pos });\n      }\n    });\n\n    var hierarchyNodes = flatToHierarchy(filterNodesPositions);\n\n    var recursive = function recursive(children) {\n      return children.map(function (child) {\n        if (child.children) {\n          return React.cloneElement(child.node, {}, recursive(child.children));\n        }\n        return child.node;\n      });\n    };\n    return recursive(hierarchyNodes);\n  };\n\n  SelectTrigger.prototype.renderTree = function renderTree(keys, halfCheckedKeys, newTreeNodes, multiple) {\n    var props = this.props;\n\n    var trProps = {\n      multiple: multiple,\n      prefixCls: props.prefixCls + '-tree',\n      showIcon: props.treeIcon,\n      showLine: props.treeLine,\n      defaultExpandAll: props.treeDefaultExpandAll,\n      defaultExpandedKeys: props.treeDefaultExpandedKeys,\n      filterTreeNode: this.highlightTreeNode\n    };\n\n    if (props.treeCheckable) {\n      trProps.selectable = false;\n      trProps.checkable = props.treeCheckable;\n      trProps.onCheck = props.onSelect;\n      trProps.checkStrictly = props.treeCheckStrictly;\n      if (props.inputValue) {\n        // enable checkStrictly when search tree.\n        trProps.checkStrictly = true;\n      } else {\n        trProps._treeNodesStates = props._treeNodesStates;\n      }\n      if (trProps.treeCheckStrictly && halfCheckedKeys.length) {\n        trProps.checkedKeys = { checked: keys, halfChecked: halfCheckedKeys };\n      } else {\n        trProps.checkedKeys = keys;\n      }\n    } else {\n      trProps.selectedKeys = keys;\n      trProps.onSelect = props.onSelect;\n    }\n\n    // expand keys\n    if (!trProps.defaultExpandAll && !trProps.defaultExpandedKeys && !props.loadData) {\n      trProps.expandedKeys = keys;\n    }\n    trProps.autoExpandParent = true;\n    trProps.onExpand = this.onExpand;\n    if (this._expandedKeys && this._expandedKeys.length) {\n      trProps.expandedKeys = this._expandedKeys;\n    }\n    if (this.state.fireOnExpand) {\n      trProps.expandedKeys = this.state._expandedKeys;\n      trProps.autoExpandParent = false;\n    }\n\n    // async loadData\n    if (props.loadData) {\n      trProps.loadData = props.loadData;\n    }\n\n    return React.createElement(\n      Tree,\n      _extends({ ref: saveRef(this, 'popupEle') }, trProps),\n      newTreeNodes\n    );\n  };\n\n  SelectTrigger.prototype.render = function render() {\n    var _popupClassName;\n\n    var props = this.props;\n    var multiple = props.multiple;\n    var dropdownPrefixCls = this.getDropdownPrefixCls();\n    var popupClassName = (_popupClassName = {}, _popupClassName[props.dropdownClassName] = !!props.dropdownClassName, _popupClassName[dropdownPrefixCls + '--' + (multiple ? 'multiple' : 'single')] = 1, _popupClassName);\n    var visible = props.visible;\n    var search = multiple || !props.showSearch ? null : React.createElement(\n      'span',\n      { className: dropdownPrefixCls + '-search' },\n      props.inputElement\n    );\n\n    var recursive = function recursive(children) {\n      // Note: if use `React.Children.map`, the node's key will be modified.\n      return toArray(children).map(function handler(child) {\n        // eslint-disable-line\n        if (!child) {\n          return null;\n        }\n        if (child && child.props.children) {\n          // null or String has no Prop\n          return React.createElement(\n            TreeNode,\n            _extends({}, child.props, { key: child.key }),\n            recursive(child.props.children)\n          );\n        }\n        return React.createElement(TreeNode, _extends({}, child.props, { key: child.key }));\n      });\n    };\n    // const s = Date.now();\n    var treeNodes = void 0;\n    if (props._cachetreeData && this.treeNodes) {\n      treeNodes = this.treeNodes;\n    } else {\n      treeNodes = recursive(props.treeData || props.treeNodes);\n      this.treeNodes = treeNodes;\n    }\n    // console.log(Date.now()-s);\n\n    if (props.inputValue) {\n      treeNodes = this.processTreeNode(treeNodes);\n    }\n\n    var keys = [];\n    var halfCheckedKeys = [];\n    loopAllChildren(treeNodes, function (child) {\n      if (props.value.some(function (item) {\n        return item.value === getValuePropValue(child);\n      })) {\n        keys.push(child.key);\n      }\n      if (props.halfCheckedValues && props.halfCheckedValues.some(function (item) {\n        return item.value === getValuePropValue(child);\n      })) {\n        halfCheckedKeys.push(child.key);\n      }\n    });\n\n    var notFoundContent = void 0;\n    if (!treeNodes.length) {\n      if (props.notFoundContent) {\n        notFoundContent = React.createElement(\n          'span',\n          { className: props.prefixCls + '-not-found' },\n          props.notFoundContent\n        );\n      } else if (!search) {\n        visible = false;\n      }\n    }\n    var popupElement = React.createElement(\n      'div',\n      null,\n      search,\n      notFoundContent || this.renderTree(keys, halfCheckedKeys, treeNodes, multiple)\n    );\n\n    var popupStyle = _extends({}, props.dropdownStyle);\n    var widthProp = props.dropdownMatchSelectWidth ? 'width' : 'minWidth';\n    if (this.state.dropdownWidth) {\n      popupStyle[widthProp] = this.state.dropdownWidth + 'px';\n    }\n\n    return React.createElement(\n      Trigger,\n      {\n        action: props.disabled ? [] : ['click'],\n        ref: saveRef(this, 'trigger'),\n        popupPlacement: 'bottomLeft',\n        builtinPlacements: BUILT_IN_PLACEMENTS,\n        popupAlign: props.dropdownPopupAlign,\n        prefixCls: dropdownPrefixCls,\n        popupTransitionName: this.getDropdownTransitionName(),\n        onPopupVisibleChange: props.onDropdownVisibleChange,\n        popup: popupElement,\n        popupVisible: visible,\n        getPopupContainer: props.getPopupContainer,\n        popupClassName: classnames(popupClassName),\n        popupStyle: popupStyle\n      },\n      this.props.children\n    );\n  };\n\n  return SelectTrigger;\n}(Component);\n\nSelectTrigger.propTypes = {\n  dropdownMatchSelectWidth: PropTypes.bool,\n  dropdownPopupAlign: PropTypes.object,\n  visible: PropTypes.bool,\n  filterTreeNode: PropTypes.any,\n  treeNodes: PropTypes.any,\n  inputValue: PropTypes.string,\n  prefixCls: PropTypes.string,\n  popupClassName: PropTypes.string,\n  children: PropTypes.any\n};\n\n\nexport default SelectTrigger;"]},"metadata":{},"sourceType":"module"}