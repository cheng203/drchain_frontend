{"ast":null,"code":"import _slicedToArray from 'babel-runtime/helpers/slicedToArray';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport * as React from 'react';\nimport { PREFIX_CLS } from './Constants';\nimport Select from '../select';\nimport { Group, Button } from '../radio';\nvar Option = Select.Option;\n\nvar Header = function (_React$Component) {\n  _inherits(Header, _React$Component);\n\n  function Header() {\n    _classCallCheck(this, Header);\n\n    var _this = _possibleConstructorReturn(this, (Header.__proto__ || Object.getPrototypeOf(Header)).apply(this, arguments));\n\n    _this.onYearChange = function (year) {\n      var _this$props = _this.props,\n          value = _this$props.value,\n          validRange = _this$props.validRange;\n      var newValue = value.clone();\n      newValue.year(parseInt(year, 10)); // switch the month so that it remains within range when year changes\n\n      if (validRange) {\n        var _validRange = _slicedToArray(validRange, 2),\n            start = _validRange[0],\n            end = _validRange[1];\n\n        var newYear = newValue.get('year');\n        var newMonth = newValue.get('month');\n\n        if (newYear === end.get('year') && newMonth > end.get('month')) {\n          newValue.month(end.get('month'));\n        }\n\n        if (newYear === start.get('year') && newMonth < start.get('month')) {\n          newValue.month(start.get('month'));\n        }\n      }\n\n      var onValueChange = _this.props.onValueChange;\n\n      if (onValueChange) {\n        onValueChange(newValue);\n      }\n    };\n\n    _this.onMonthChange = function (month) {\n      var newValue = _this.props.value.clone();\n\n      newValue.month(parseInt(month, 10));\n      var onValueChange = _this.props.onValueChange;\n\n      if (onValueChange) {\n        onValueChange(newValue);\n      }\n    };\n\n    _this.onTypeChange = function (e) {\n      var onTypeChange = _this.props.onTypeChange;\n\n      if (onTypeChange) {\n        onTypeChange(e.target.value);\n      }\n    };\n\n    _this.getCalenderHeaderNode = function (node) {\n      _this.calenderHeaderNode = node;\n    };\n\n    return _this;\n  }\n\n  _createClass(Header, [{\n    key: 'getYearSelectElement',\n    value: function getYearSelectElement(year) {\n      var _this2 = this;\n\n      var _props = this.props,\n          yearSelectOffset = _props.yearSelectOffset,\n          yearSelectTotal = _props.yearSelectTotal,\n          locale = _props.locale,\n          prefixCls = _props.prefixCls,\n          fullscreen = _props.fullscreen,\n          validRange = _props.validRange;\n      var start = year - yearSelectOffset;\n      var end = start + yearSelectTotal;\n\n      if (validRange) {\n        start = validRange[0].get('year');\n        end = validRange[1].get('year') + 1;\n      }\n\n      var suffix = locale.year === '年' ? '年' : '';\n      var options = [];\n\n      for (var index = start; index < end; index++) {\n        options.push(React.createElement(Option, {\n          key: '' + index\n        }, index + suffix));\n      }\n\n      return React.createElement(Select, {\n        size: fullscreen ? 'default' : 'small',\n        dropdownMatchSelectWidth: false,\n        className: prefixCls + '-year-select',\n        onChange: this.onYearChange,\n        value: String(year),\n        getPopupContainer: function getPopupContainer() {\n          return _this2.calenderHeaderNode;\n        }\n      }, options);\n    }\n  }, {\n    key: 'getMonthsLocale',\n    value: function getMonthsLocale(value) {\n      var current = value.clone();\n      var localeData = value.localeData();\n      var months = [];\n\n      for (var i = 0; i < 12; i++) {\n        current.month(i);\n        months.push(localeData.monthsShort(current));\n      }\n\n      return months;\n    }\n  }, {\n    key: 'getMonthSelectElement',\n    value: function getMonthSelectElement(month, months) {\n      var _this3 = this;\n\n      var props = this.props;\n      var prefixCls = props.prefixCls,\n          fullscreen = props.fullscreen,\n          validRange = props.validRange,\n          value = props.value;\n      var options = [];\n      var start = 0;\n      var end = 12;\n\n      if (validRange) {\n        var _validRange2 = _slicedToArray(validRange, 2),\n            rangeStart = _validRange2[0],\n            rangeEnd = _validRange2[1];\n\n        var currentYear = value.get('year');\n\n        if (rangeEnd.get('year') === currentYear) {\n          end = rangeEnd.get('month') + 1;\n        } else {\n          start = rangeStart.get('month');\n        }\n      }\n\n      for (var index = start; index < end; index++) {\n        options.push(React.createElement(Option, {\n          key: '' + index\n        }, months[index]));\n      }\n\n      return React.createElement(Select, {\n        size: fullscreen ? 'default' : 'small',\n        dropdownMatchSelectWidth: false,\n        className: prefixCls + '-month-select',\n        value: String(month),\n        onChange: this.onMonthChange,\n        getPopupContainer: function getPopupContainer() {\n          return _this3.calenderHeaderNode;\n        }\n      }, options);\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _props2 = this.props,\n          type = _props2.type,\n          value = _props2.value,\n          prefixCls = _props2.prefixCls,\n          locale = _props2.locale,\n          fullscreen = _props2.fullscreen;\n      var yearSelect = this.getYearSelectElement(value.year());\n      var monthSelect = type === 'date' ? this.getMonthSelectElement(value.month(), this.getMonthsLocale(value)) : null;\n      var size = fullscreen ? 'default' : 'small';\n      var typeSwitch = React.createElement(Group, {\n        onChange: this.onTypeChange,\n        value: type,\n        size: size\n      }, React.createElement(Button, {\n        value: 'date'\n      }, locale.month), React.createElement(Button, {\n        value: 'month'\n      }, locale.year));\n      return React.createElement('div', {\n        className: prefixCls + '-header',\n        ref: this.getCalenderHeaderNode\n      }, yearSelect, monthSelect, typeSwitch);\n    }\n  }]);\n\n  return Header;\n}(React.Component);\n\nexport default Header;\nHeader.defaultProps = {\n  prefixCls: PREFIX_CLS + '-header',\n  yearSelectOffset: 10,\n  yearSelectTotal: 20\n};","map":{"version":3,"sources":["/Users/administrator/Desktop/DrChain/drchain_frontend/drchain/node_modules/antd/es/calendar/Header.js"],"names":["_slicedToArray","_classCallCheck","_createClass","_possibleConstructorReturn","_inherits","React","PREFIX_CLS","Select","Group","Button","Option","Header","_React$Component","_this","__proto__","Object","getPrototypeOf","apply","arguments","onYearChange","year","_this$props","props","value","validRange","newValue","clone","parseInt","_validRange","start","end","newYear","get","newMonth","month","onValueChange","onMonthChange","onTypeChange","e","target","getCalenderHeaderNode","node","calenderHeaderNode","key","getYearSelectElement","_this2","_props","yearSelectOffset","yearSelectTotal","locale","prefixCls","fullscreen","suffix","options","index","push","createElement","size","dropdownMatchSelectWidth","className","onChange","String","getPopupContainer","getMonthsLocale","current","localeData","months","i","monthsShort","getMonthSelectElement","_this3","_validRange2","rangeStart","rangeEnd","currentYear","render","_props2","type","yearSelect","monthSelect","typeSwitch","ref","Component","defaultProps"],"mappings":"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","sourcesContent":["import _slicedToArray from 'babel-runtime/helpers/slicedToArray';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport * as React from 'react';\nimport { PREFIX_CLS } from './Constants';\nimport Select from '../select';\nimport { Group, Button } from '../radio';\nvar Option = Select.Option;\n\nvar Header = function (_React$Component) {\n    _inherits(Header, _React$Component);\n\n    function Header() {\n        _classCallCheck(this, Header);\n\n        var _this = _possibleConstructorReturn(this, (Header.__proto__ || Object.getPrototypeOf(Header)).apply(this, arguments));\n\n        _this.onYearChange = function (year) {\n            var _this$props = _this.props,\n                value = _this$props.value,\n                validRange = _this$props.validRange;\n\n            var newValue = value.clone();\n            newValue.year(parseInt(year, 10));\n            // switch the month so that it remains within range when year changes\n            if (validRange) {\n                var _validRange = _slicedToArray(validRange, 2),\n                    start = _validRange[0],\n                    end = _validRange[1];\n\n                var newYear = newValue.get('year');\n                var newMonth = newValue.get('month');\n                if (newYear === end.get('year') && newMonth > end.get('month')) {\n                    newValue.month(end.get('month'));\n                }\n                if (newYear === start.get('year') && newMonth < start.get('month')) {\n                    newValue.month(start.get('month'));\n                }\n            }\n            var onValueChange = _this.props.onValueChange;\n            if (onValueChange) {\n                onValueChange(newValue);\n            }\n        };\n        _this.onMonthChange = function (month) {\n            var newValue = _this.props.value.clone();\n            newValue.month(parseInt(month, 10));\n            var onValueChange = _this.props.onValueChange;\n            if (onValueChange) {\n                onValueChange(newValue);\n            }\n        };\n        _this.onTypeChange = function (e) {\n            var onTypeChange = _this.props.onTypeChange;\n            if (onTypeChange) {\n                onTypeChange(e.target.value);\n            }\n        };\n        _this.getCalenderHeaderNode = function (node) {\n            _this.calenderHeaderNode = node;\n        };\n        return _this;\n    }\n\n    _createClass(Header, [{\n        key: 'getYearSelectElement',\n        value: function getYearSelectElement(year) {\n            var _this2 = this;\n\n            var _props = this.props,\n                yearSelectOffset = _props.yearSelectOffset,\n                yearSelectTotal = _props.yearSelectTotal,\n                locale = _props.locale,\n                prefixCls = _props.prefixCls,\n                fullscreen = _props.fullscreen,\n                validRange = _props.validRange;\n\n            var start = year - yearSelectOffset;\n            var end = start + yearSelectTotal;\n            if (validRange) {\n                start = validRange[0].get('year');\n                end = validRange[1].get('year') + 1;\n            }\n            var suffix = locale.year === '年' ? '年' : '';\n            var options = [];\n            for (var index = start; index < end; index++) {\n                options.push(React.createElement(\n                    Option,\n                    { key: '' + index },\n                    index + suffix\n                ));\n            }\n            return React.createElement(\n                Select,\n                { size: fullscreen ? 'default' : 'small', dropdownMatchSelectWidth: false, className: prefixCls + '-year-select', onChange: this.onYearChange, value: String(year), getPopupContainer: function getPopupContainer() {\n                        return _this2.calenderHeaderNode;\n                    } },\n                options\n            );\n        }\n    }, {\n        key: 'getMonthsLocale',\n        value: function getMonthsLocale(value) {\n            var current = value.clone();\n            var localeData = value.localeData();\n            var months = [];\n            for (var i = 0; i < 12; i++) {\n                current.month(i);\n                months.push(localeData.monthsShort(current));\n            }\n            return months;\n        }\n    }, {\n        key: 'getMonthSelectElement',\n        value: function getMonthSelectElement(month, months) {\n            var _this3 = this;\n\n            var props = this.props;\n            var prefixCls = props.prefixCls,\n                fullscreen = props.fullscreen,\n                validRange = props.validRange,\n                value = props.value;\n\n            var options = [];\n            var start = 0;\n            var end = 12;\n            if (validRange) {\n                var _validRange2 = _slicedToArray(validRange, 2),\n                    rangeStart = _validRange2[0],\n                    rangeEnd = _validRange2[1];\n\n                var currentYear = value.get('year');\n                if (rangeEnd.get('year') === currentYear) {\n                    end = rangeEnd.get('month') + 1;\n                } else {\n                    start = rangeStart.get('month');\n                }\n            }\n            for (var index = start; index < end; index++) {\n                options.push(React.createElement(\n                    Option,\n                    { key: '' + index },\n                    months[index]\n                ));\n            }\n            return React.createElement(\n                Select,\n                { size: fullscreen ? 'default' : 'small', dropdownMatchSelectWidth: false, className: prefixCls + '-month-select', value: String(month), onChange: this.onMonthChange, getPopupContainer: function getPopupContainer() {\n                        return _this3.calenderHeaderNode;\n                    } },\n                options\n            );\n        }\n    }, {\n        key: 'render',\n        value: function render() {\n            var _props2 = this.props,\n                type = _props2.type,\n                value = _props2.value,\n                prefixCls = _props2.prefixCls,\n                locale = _props2.locale,\n                fullscreen = _props2.fullscreen;\n\n            var yearSelect = this.getYearSelectElement(value.year());\n            var monthSelect = type === 'date' ? this.getMonthSelectElement(value.month(), this.getMonthsLocale(value)) : null;\n            var size = fullscreen ? 'default' : 'small';\n            var typeSwitch = React.createElement(\n                Group,\n                { onChange: this.onTypeChange, value: type, size: size },\n                React.createElement(\n                    Button,\n                    { value: 'date' },\n                    locale.month\n                ),\n                React.createElement(\n                    Button,\n                    { value: 'month' },\n                    locale.year\n                )\n            );\n            return React.createElement(\n                'div',\n                { className: prefixCls + '-header', ref: this.getCalenderHeaderNode },\n                yearSelect,\n                monthSelect,\n                typeSwitch\n            );\n        }\n    }]);\n\n    return Header;\n}(React.Component);\n\nexport default Header;\n\nHeader.defaultProps = {\n    prefixCls: PREFIX_CLS + '-header',\n    yearSelectOffset: 10,\n    yearSelectTotal: 20\n};"]},"metadata":{},"sourceType":"module"}