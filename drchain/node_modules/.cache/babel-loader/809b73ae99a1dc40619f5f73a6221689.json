{"ast":null,"code":"import _defineProperty from 'babel-runtime/helpers/defineProperty';\nimport _extends from 'babel-runtime/helpers/extends';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport * as React from 'react';\nimport RcUpload from 'rc-upload';\nimport classNames from 'classnames';\nimport uniqBy from 'lodash/uniqBy';\nimport LocaleReceiver from '../locale-provider/LocaleReceiver';\nimport defaultLocale from '../locale-provider/default';\nimport UploadList from './UploadList';\nimport { T, fileToObject, genPercentAdd, getFileItem, removeFileItem } from './utils';\n\nvar Upload = function (_React$Component) {\n  _inherits(Upload, _React$Component);\n\n  function Upload(props) {\n    _classCallCheck(this, Upload);\n\n    var _this = _possibleConstructorReturn(this, (Upload.__proto__ || Object.getPrototypeOf(Upload)).call(this, props));\n\n    _this.onStart = function (file) {\n      var targetItem = void 0;\n\n      var nextFileList = _this.state.fileList.concat();\n\n      targetItem = fileToObject(file);\n      targetItem.status = 'uploading';\n      nextFileList.push(targetItem);\n\n      _this.onChange({\n        file: targetItem,\n        fileList: nextFileList\n      }); // fix ie progress\n\n\n      if (!window.FormData) {\n        _this.autoUpdateProgress(0, targetItem);\n      }\n    };\n\n    _this.onSuccess = function (response, file) {\n      _this.clearProgressTimer();\n\n      try {\n        if (typeof response === 'string') {\n          response = JSON.parse(response);\n        }\n      } catch (e) {\n        /* do nothing */\n      }\n\n      var fileList = _this.state.fileList;\n      var targetItem = getFileItem(file, fileList); // removed\n\n      if (!targetItem) {\n        return;\n      }\n\n      targetItem.status = 'done';\n      targetItem.response = response;\n\n      _this.onChange({\n        file: _extends({}, targetItem),\n        fileList: fileList\n      });\n    };\n\n    _this.onProgress = function (e, file) {\n      var fileList = _this.state.fileList;\n      var targetItem = getFileItem(file, fileList); // removed\n\n      if (!targetItem) {\n        return;\n      }\n\n      targetItem.percent = e.percent;\n\n      _this.onChange({\n        event: e,\n        file: _extends({}, targetItem),\n        fileList: _this.state.fileList\n      });\n    };\n\n    _this.onError = function (error, response, file) {\n      _this.clearProgressTimer();\n\n      var fileList = _this.state.fileList;\n      var targetItem = getFileItem(file, fileList); // removed\n\n      if (!targetItem) {\n        return;\n      }\n\n      targetItem.error = error;\n      targetItem.response = response;\n      targetItem.status = 'error';\n\n      _this.onChange({\n        file: _extends({}, targetItem),\n        fileList: fileList\n      });\n    };\n\n    _this.handleManualRemove = function (file) {\n      _this.upload.abort(file);\n\n      file.status = 'removed'; // eslint-disable-line\n\n      _this.handleRemove(file);\n    };\n\n    _this.onChange = function (info) {\n      if (!('fileList' in _this.props)) {\n        _this.setState({\n          fileList: info.fileList\n        });\n      }\n\n      var onChange = _this.props.onChange;\n\n      if (onChange) {\n        onChange(info);\n      }\n    };\n\n    _this.onFileDrop = function (e) {\n      _this.setState({\n        dragState: e.type\n      });\n    };\n\n    _this.beforeUpload = function (file, fileList) {\n      if (!_this.props.beforeUpload) {\n        return true;\n      }\n\n      var result = _this.props.beforeUpload(file, fileList);\n\n      if (result === false) {\n        _this.onChange({\n          file: fileToObject(file),\n          fileList: uniqBy(fileList.map(fileToObject).concat(_this.state.fileList), function (item) {\n            return item.uid;\n          })\n        });\n\n        return false;\n      } else if (result && result.then) {\n        return result;\n      }\n\n      return true;\n    };\n\n    _this.saveUpload = function (node) {\n      _this.upload = node;\n    };\n\n    _this.renderUploadList = function (locale) {\n      var _this$props = _this.props,\n          showUploadList = _this$props.showUploadList,\n          listType = _this$props.listType,\n          onPreview = _this$props.onPreview;\n      var showRemoveIcon = showUploadList.showRemoveIcon,\n          showPreviewIcon = showUploadList.showPreviewIcon;\n      return React.createElement(UploadList, {\n        listType: listType,\n        items: _this.state.fileList,\n        onPreview: onPreview,\n        onRemove: _this.handleManualRemove,\n        showRemoveIcon: showRemoveIcon,\n        showPreviewIcon: showPreviewIcon,\n        locale: _extends({}, locale, _this.props.locale)\n      });\n    };\n\n    _this.state = {\n      fileList: props.fileList || props.defaultFileList || [],\n      dragState: 'drop'\n    };\n    return _this;\n  }\n\n  _createClass(Upload, [{\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      this.clearProgressTimer();\n    }\n  }, {\n    key: 'autoUpdateProgress',\n    value: function autoUpdateProgress(_, file) {\n      var _this2 = this;\n\n      var getPercent = genPercentAdd();\n      var curPercent = 0;\n      this.clearProgressTimer();\n      this.progressTimer = setInterval(function () {\n        curPercent = getPercent(curPercent);\n\n        _this2.onProgress({\n          percent: curPercent\n        }, file);\n      }, 200);\n    }\n  }, {\n    key: 'handleRemove',\n    value: function handleRemove(file) {\n      var _this3 = this;\n\n      var onRemove = this.props.onRemove;\n      Promise.resolve(typeof onRemove === 'function' ? onRemove(file) : onRemove).then(function (ret) {\n        // Prevent removing file\n        if (ret === false) {\n          return;\n        }\n\n        var removedFileList = removeFileItem(file, _this3.state.fileList);\n\n        if (removedFileList) {\n          _this3.onChange({\n            file: file,\n            fileList: removedFileList\n          });\n        }\n      });\n    }\n  }, {\n    key: 'componentWillReceiveProps',\n    value: function componentWillReceiveProps(nextProps) {\n      if ('fileList' in nextProps) {\n        this.setState({\n          fileList: nextProps.fileList || []\n        });\n      }\n    }\n  }, {\n    key: 'clearProgressTimer',\n    value: function clearProgressTimer() {\n      clearInterval(this.progressTimer);\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _classNames2;\n\n      var _props = this.props,\n          _props$prefixCls = _props.prefixCls,\n          prefixCls = _props$prefixCls === undefined ? '' : _props$prefixCls,\n          className = _props.className,\n          showUploadList = _props.showUploadList,\n          listType = _props.listType,\n          type = _props.type,\n          disabled = _props.disabled,\n          children = _props.children;\n\n      var rcUploadProps = _extends({\n        onStart: this.onStart,\n        onError: this.onError,\n        onProgress: this.onProgress,\n        onSuccess: this.onSuccess\n      }, this.props, {\n        beforeUpload: this.beforeUpload\n      });\n\n      delete rcUploadProps.className;\n      var uploadList = showUploadList ? React.createElement(LocaleReceiver, {\n        componentName: 'Upload',\n        defaultLocale: defaultLocale.Upload\n      }, this.renderUploadList) : null;\n\n      if (type === 'drag') {\n        var _classNames;\n\n        var dragCls = classNames(prefixCls, (_classNames = {}, _defineProperty(_classNames, prefixCls + '-drag', true), _defineProperty(_classNames, prefixCls + '-drag-uploading', this.state.fileList.some(function (file) {\n          return file.status === 'uploading';\n        })), _defineProperty(_classNames, prefixCls + '-drag-hover', this.state.dragState === 'dragover'), _defineProperty(_classNames, prefixCls + '-disabled', disabled), _classNames));\n        return React.createElement('span', {\n          className: className\n        }, React.createElement('div', {\n          className: dragCls,\n          onDrop: this.onFileDrop,\n          onDragOver: this.onFileDrop,\n          onDragLeave: this.onFileDrop\n        }, React.createElement(RcUpload, _extends({}, rcUploadProps, {\n          ref: this.saveUpload,\n          className: prefixCls + '-btn'\n        }), React.createElement('div', {\n          className: prefixCls + '-drag-container'\n        }, children))), uploadList);\n      }\n\n      var uploadButtonCls = classNames(prefixCls, (_classNames2 = {}, _defineProperty(_classNames2, prefixCls + '-select', true), _defineProperty(_classNames2, prefixCls + '-select-' + listType, true), _defineProperty(_classNames2, prefixCls + '-disabled', disabled), _classNames2));\n      var uploadButton = React.createElement('div', {\n        className: uploadButtonCls,\n        style: {\n          display: children ? '' : 'none'\n        }\n      }, React.createElement(RcUpload, _extends({}, rcUploadProps, {\n        ref: this.saveUpload\n      })));\n\n      if (listType === 'picture-card') {\n        return React.createElement('span', {\n          className: className\n        }, uploadList, uploadButton);\n      }\n\n      return React.createElement('span', {\n        className: className\n      }, uploadButton, uploadList);\n    }\n  }]);\n\n  return Upload;\n}(React.Component);\n\nexport default Upload;\nUpload.defaultProps = {\n  prefixCls: 'ant-upload',\n  type: 'select',\n  multiple: false,\n  action: '',\n  data: {},\n  accept: '',\n  beforeUpload: T,\n  showUploadList: true,\n  listType: 'text',\n  className: '',\n  disabled: false,\n  supportServerRender: true\n};","map":{"version":3,"sources":["/Users/administrator/Desktop/DrChain/drchain_frontend/drchain/node_modules/antd/es/upload/Upload.js"],"names":["_defineProperty","_extends","_classCallCheck","_createClass","_possibleConstructorReturn","_inherits","React","RcUpload","classNames","uniqBy","LocaleReceiver","defaultLocale","UploadList","T","fileToObject","genPercentAdd","getFileItem","removeFileItem","Upload","_React$Component","props","_this","__proto__","Object","getPrototypeOf","call","onStart","file","targetItem","nextFileList","state","fileList","concat","status","push","onChange","window","FormData","autoUpdateProgress","onSuccess","response","clearProgressTimer","JSON","parse","e","onProgress","percent","event","onError","error","handleManualRemove","upload","abort","handleRemove","info","setState","onFileDrop","dragState","type","beforeUpload","result","map","item","uid","then","saveUpload","node","renderUploadList","locale","_this$props","showUploadList","listType","onPreview","showRemoveIcon","showPreviewIcon","createElement","items","onRemove","defaultFileList","key","value","componentWillUnmount","_","_this2","getPercent","curPercent","progressTimer","setInterval","_this3","Promise","resolve","ret","removedFileList","componentWillReceiveProps","nextProps","clearInterval","render","_classNames2","_props","_props$prefixCls","prefixCls","undefined","className","disabled","children","rcUploadProps","uploadList","componentName","_classNames","dragCls","some","onDrop","onDragOver","onDragLeave","ref","uploadButtonCls","uploadButton","style","display","Component","defaultProps","multiple","action","data","accept","supportServerRender"],"mappings":"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","sourcesContent":["import _defineProperty from 'babel-runtime/helpers/defineProperty';\nimport _extends from 'babel-runtime/helpers/extends';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport * as React from 'react';\nimport RcUpload from 'rc-upload';\nimport classNames from 'classnames';\nimport uniqBy from 'lodash/uniqBy';\nimport LocaleReceiver from '../locale-provider/LocaleReceiver';\nimport defaultLocale from '../locale-provider/default';\nimport UploadList from './UploadList';\nimport { T, fileToObject, genPercentAdd, getFileItem, removeFileItem } from './utils';\n\nvar Upload = function (_React$Component) {\n    _inherits(Upload, _React$Component);\n\n    function Upload(props) {\n        _classCallCheck(this, Upload);\n\n        var _this = _possibleConstructorReturn(this, (Upload.__proto__ || Object.getPrototypeOf(Upload)).call(this, props));\n\n        _this.onStart = function (file) {\n            var targetItem = void 0;\n            var nextFileList = _this.state.fileList.concat();\n            targetItem = fileToObject(file);\n            targetItem.status = 'uploading';\n            nextFileList.push(targetItem);\n            _this.onChange({\n                file: targetItem,\n                fileList: nextFileList\n            });\n            // fix ie progress\n            if (!window.FormData) {\n                _this.autoUpdateProgress(0, targetItem);\n            }\n        };\n        _this.onSuccess = function (response, file) {\n            _this.clearProgressTimer();\n            try {\n                if (typeof response === 'string') {\n                    response = JSON.parse(response);\n                }\n            } catch (e) {/* do nothing */\n            }\n            var fileList = _this.state.fileList;\n            var targetItem = getFileItem(file, fileList);\n            // removed\n            if (!targetItem) {\n                return;\n            }\n            targetItem.status = 'done';\n            targetItem.response = response;\n            _this.onChange({\n                file: _extends({}, targetItem),\n                fileList: fileList\n            });\n        };\n        _this.onProgress = function (e, file) {\n            var fileList = _this.state.fileList;\n            var targetItem = getFileItem(file, fileList);\n            // removed\n            if (!targetItem) {\n                return;\n            }\n            targetItem.percent = e.percent;\n            _this.onChange({\n                event: e,\n                file: _extends({}, targetItem),\n                fileList: _this.state.fileList\n            });\n        };\n        _this.onError = function (error, response, file) {\n            _this.clearProgressTimer();\n            var fileList = _this.state.fileList;\n            var targetItem = getFileItem(file, fileList);\n            // removed\n            if (!targetItem) {\n                return;\n            }\n            targetItem.error = error;\n            targetItem.response = response;\n            targetItem.status = 'error';\n            _this.onChange({\n                file: _extends({}, targetItem),\n                fileList: fileList\n            });\n        };\n        _this.handleManualRemove = function (file) {\n            _this.upload.abort(file);\n            file.status = 'removed'; // eslint-disable-line\n            _this.handleRemove(file);\n        };\n        _this.onChange = function (info) {\n            if (!('fileList' in _this.props)) {\n                _this.setState({ fileList: info.fileList });\n            }\n            var onChange = _this.props.onChange;\n\n            if (onChange) {\n                onChange(info);\n            }\n        };\n        _this.onFileDrop = function (e) {\n            _this.setState({\n                dragState: e.type\n            });\n        };\n        _this.beforeUpload = function (file, fileList) {\n            if (!_this.props.beforeUpload) {\n                return true;\n            }\n            var result = _this.props.beforeUpload(file, fileList);\n            if (result === false) {\n                _this.onChange({\n                    file: fileToObject(file),\n                    fileList: uniqBy(fileList.map(fileToObject).concat(_this.state.fileList), function (item) {\n                        return item.uid;\n                    })\n                });\n                return false;\n            } else if (result && result.then) {\n                return result;\n            }\n            return true;\n        };\n        _this.saveUpload = function (node) {\n            _this.upload = node;\n        };\n        _this.renderUploadList = function (locale) {\n            var _this$props = _this.props,\n                showUploadList = _this$props.showUploadList,\n                listType = _this$props.listType,\n                onPreview = _this$props.onPreview;\n            var showRemoveIcon = showUploadList.showRemoveIcon,\n                showPreviewIcon = showUploadList.showPreviewIcon;\n\n            return React.createElement(UploadList, { listType: listType, items: _this.state.fileList, onPreview: onPreview, onRemove: _this.handleManualRemove, showRemoveIcon: showRemoveIcon, showPreviewIcon: showPreviewIcon, locale: _extends({}, locale, _this.props.locale) });\n        };\n        _this.state = {\n            fileList: props.fileList || props.defaultFileList || [],\n            dragState: 'drop'\n        };\n        return _this;\n    }\n\n    _createClass(Upload, [{\n        key: 'componentWillUnmount',\n        value: function componentWillUnmount() {\n            this.clearProgressTimer();\n        }\n    }, {\n        key: 'autoUpdateProgress',\n        value: function autoUpdateProgress(_, file) {\n            var _this2 = this;\n\n            var getPercent = genPercentAdd();\n            var curPercent = 0;\n            this.clearProgressTimer();\n            this.progressTimer = setInterval(function () {\n                curPercent = getPercent(curPercent);\n                _this2.onProgress({\n                    percent: curPercent\n                }, file);\n            }, 200);\n        }\n    }, {\n        key: 'handleRemove',\n        value: function handleRemove(file) {\n            var _this3 = this;\n\n            var onRemove = this.props.onRemove;\n\n            Promise.resolve(typeof onRemove === 'function' ? onRemove(file) : onRemove).then(function (ret) {\n                // Prevent removing file\n                if (ret === false) {\n                    return;\n                }\n                var removedFileList = removeFileItem(file, _this3.state.fileList);\n                if (removedFileList) {\n                    _this3.onChange({\n                        file: file,\n                        fileList: removedFileList\n                    });\n                }\n            });\n        }\n    }, {\n        key: 'componentWillReceiveProps',\n        value: function componentWillReceiveProps(nextProps) {\n            if ('fileList' in nextProps) {\n                this.setState({\n                    fileList: nextProps.fileList || []\n                });\n            }\n        }\n    }, {\n        key: 'clearProgressTimer',\n        value: function clearProgressTimer() {\n            clearInterval(this.progressTimer);\n        }\n    }, {\n        key: 'render',\n        value: function render() {\n            var _classNames2;\n\n            var _props = this.props,\n                _props$prefixCls = _props.prefixCls,\n                prefixCls = _props$prefixCls === undefined ? '' : _props$prefixCls,\n                className = _props.className,\n                showUploadList = _props.showUploadList,\n                listType = _props.listType,\n                type = _props.type,\n                disabled = _props.disabled,\n                children = _props.children;\n\n            var rcUploadProps = _extends({ onStart: this.onStart, onError: this.onError, onProgress: this.onProgress, onSuccess: this.onSuccess }, this.props, { beforeUpload: this.beforeUpload });\n            delete rcUploadProps.className;\n            var uploadList = showUploadList ? React.createElement(\n                LocaleReceiver,\n                { componentName: 'Upload', defaultLocale: defaultLocale.Upload },\n                this.renderUploadList\n            ) : null;\n            if (type === 'drag') {\n                var _classNames;\n\n                var dragCls = classNames(prefixCls, (_classNames = {}, _defineProperty(_classNames, prefixCls + '-drag', true), _defineProperty(_classNames, prefixCls + '-drag-uploading', this.state.fileList.some(function (file) {\n                    return file.status === 'uploading';\n                })), _defineProperty(_classNames, prefixCls + '-drag-hover', this.state.dragState === 'dragover'), _defineProperty(_classNames, prefixCls + '-disabled', disabled), _classNames));\n                return React.createElement(\n                    'span',\n                    { className: className },\n                    React.createElement(\n                        'div',\n                        { className: dragCls, onDrop: this.onFileDrop, onDragOver: this.onFileDrop, onDragLeave: this.onFileDrop },\n                        React.createElement(\n                            RcUpload,\n                            _extends({}, rcUploadProps, { ref: this.saveUpload, className: prefixCls + '-btn' }),\n                            React.createElement(\n                                'div',\n                                { className: prefixCls + '-drag-container' },\n                                children\n                            )\n                        )\n                    ),\n                    uploadList\n                );\n            }\n            var uploadButtonCls = classNames(prefixCls, (_classNames2 = {}, _defineProperty(_classNames2, prefixCls + '-select', true), _defineProperty(_classNames2, prefixCls + '-select-' + listType, true), _defineProperty(_classNames2, prefixCls + '-disabled', disabled), _classNames2));\n            var uploadButton = React.createElement(\n                'div',\n                { className: uploadButtonCls, style: { display: children ? '' : 'none' } },\n                React.createElement(RcUpload, _extends({}, rcUploadProps, { ref: this.saveUpload }))\n            );\n            if (listType === 'picture-card') {\n                return React.createElement(\n                    'span',\n                    { className: className },\n                    uploadList,\n                    uploadButton\n                );\n            }\n            return React.createElement(\n                'span',\n                { className: className },\n                uploadButton,\n                uploadList\n            );\n        }\n    }]);\n\n    return Upload;\n}(React.Component);\n\nexport default Upload;\n\nUpload.defaultProps = {\n    prefixCls: 'ant-upload',\n    type: 'select',\n    multiple: false,\n    action: '',\n    data: {},\n    accept: '',\n    beforeUpload: T,\n    showUploadList: true,\n    listType: 'text',\n    className: '',\n    disabled: false,\n    supportServerRender: true\n};"]},"metadata":{},"sourceType":"module"}