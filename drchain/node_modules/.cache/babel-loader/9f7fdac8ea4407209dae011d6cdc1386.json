{"ast":null,"code":"import _extends from 'babel-runtime/helpers/extends';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport Animate from 'rc-animate';\nimport toArray from 'rc-util/es/Children/toArray';\nimport { contextTypes } from './Tree';\nvar defaultTitle = '---';\n\nvar TreeNode = function (_React$Component) {\n  _inherits(TreeNode, _React$Component);\n\n  function TreeNode(props) {\n    _classCallCheck(this, TreeNode);\n\n    var _this = _possibleConstructorReturn(this, _React$Component.call(this, props));\n\n    _this.onCheck = function () {\n      _this.props.root.onCheck(_this);\n    };\n\n    _this.onMouseEnter = function (e) {\n      e.preventDefault();\n\n      _this.props.root.onMouseEnter(e, _this);\n    };\n\n    _this.onMouseLeave = function (e) {\n      e.preventDefault();\n\n      _this.props.root.onMouseLeave(e, _this);\n    };\n\n    _this.onContextMenu = function (e) {\n      _this.props.root.onContextMenu(e, _this);\n    };\n\n    _this.onDragStart = function (e) {\n      e.stopPropagation();\n\n      _this.setState({\n        dragNodeHighlight: true\n      });\n\n      _this.props.root.onDragStart(e, _this);\n\n      try {\n        // ie throw error\n        // firefox-need-it\n        e.dataTransfer.setData('text/plain', '');\n      } catch (error) {// empty\n      }\n    };\n\n    _this.onDragEnter = function (e) {\n      e.preventDefault();\n      e.stopPropagation();\n\n      _this.props.root.onDragEnter(e, _this);\n    };\n\n    _this.onDragOver = function (e) {\n      e.preventDefault();\n      e.stopPropagation();\n\n      _this.props.root.onDragOver(e, _this);\n    };\n\n    _this.onDragLeave = function (e) {\n      e.stopPropagation();\n\n      _this.props.root.onDragLeave(e, _this);\n    };\n\n    _this.onDrop = function (e) {\n      e.preventDefault();\n      e.stopPropagation();\n\n      _this.setState({\n        dragNodeHighlight: false\n      });\n\n      _this.props.root.onDrop(e, _this);\n    };\n\n    _this.onDragEnd = function (e) {\n      e.stopPropagation();\n\n      _this.setState({\n        dragNodeHighlight: false\n      });\n\n      _this.props.root.onDragEnd(e, _this);\n    };\n\n    _this.onExpand = function () {\n      var callbackPromise = _this.props.root.onExpand(_this);\n\n      if (callbackPromise && typeof callbackPromise === 'object') {\n        var setLoading = function setLoading(dataLoading) {\n          _this.setState({\n            dataLoading: dataLoading\n          });\n        };\n\n        setLoading(true);\n        callbackPromise.then(function () {\n          setLoading(false);\n        }, function () {\n          setLoading(false);\n        });\n      }\n    };\n\n    _this.saveSelectHandle = function (node) {\n      _this.selectHandle = node;\n    };\n\n    _this.state = {\n      dataLoading: false,\n      dragNodeHighlight: false\n    };\n    return _this;\n  }\n\n  TreeNode.prototype.onSelect = function onSelect() {\n    this.props.root.onSelect(this);\n  }; // keyboard event support\n\n\n  TreeNode.prototype.onKeyDown = function onKeyDown(e) {\n    e.preventDefault();\n  };\n\n  TreeNode.prototype.isSelectable = function isSelectable() {\n    var props = this.props,\n        context = this.context;\n    return 'selectable' in props ? props.selectable : context.rcTree.selectable;\n  };\n\n  TreeNode.prototype.renderSwitcher = function renderSwitcher(props, expandedState) {\n    var prefixCls = props.prefixCls;\n    var switcherCls = classNames(prefixCls + '-switcher', prefixCls + '-switcher_' + expandedState);\n    return React.createElement('span', {\n      className: switcherCls,\n      onClick: this.onExpand\n    });\n  };\n\n  TreeNode.prototype.renderCheckbox = function renderCheckbox(props) {\n    var _checkboxCls;\n\n    var prefixCls = props.prefixCls;\n    var checkboxCls = (_checkboxCls = {}, _checkboxCls[prefixCls + '-checkbox'] = true, _checkboxCls);\n\n    if (props.checked) {\n      checkboxCls[prefixCls + '-checkbox-checked'] = true;\n    } else if (props.halfChecked) {\n      checkboxCls[prefixCls + '-checkbox-indeterminate'] = true;\n    }\n\n    var customEle = null;\n\n    if (typeof props.checkable !== 'boolean') {\n      customEle = props.checkable;\n    }\n\n    if (props.disabled || props.disableCheckbox) {\n      checkboxCls[prefixCls + '-checkbox-disabled'] = true;\n      return React.createElement('span', {\n        className: classNames(checkboxCls)\n      }, customEle);\n    }\n\n    return React.createElement('span', {\n      className: classNames(checkboxCls),\n      onClick: this.onCheck\n    }, customEle);\n  };\n\n  TreeNode.prototype.renderChildren = function renderChildren(props) {\n    var renderFirst = this.renderFirst;\n    this.renderFirst = 1;\n    var transitionAppear = true;\n\n    if (!renderFirst && props.expanded) {\n      transitionAppear = false;\n    }\n\n    var children = null;\n\n    if (props.children) {\n      children = toArray(props.children).filter(function (item) {\n        return !!item;\n      });\n    }\n\n    var newChildren = children;\n\n    if (children && (Array.isArray(children) && children.length && children.every(function (item) {\n      return item.type && item.type.isTreeNode;\n    }) || children.type && children.type.isTreeNode)) {\n      var _classNames;\n\n      var animProps = {};\n\n      if (props.openTransitionName) {\n        animProps.transitionName = props.openTransitionName;\n      } else if (typeof props.openAnimation === 'object') {\n        animProps.animation = _extends({}, props.openAnimation);\n\n        if (!transitionAppear) {\n          delete animProps.animation.appear;\n        }\n      }\n\n      var cls = classNames(props.prefixCls + '-child-tree', (_classNames = {}, _classNames[props.prefixCls + '-child-tree-open'] = props.expanded, _classNames));\n      newChildren = React.createElement(Animate, _extends({}, animProps, {\n        showProp: 'data-expanded',\n        transitionAppear: transitionAppear,\n        component: ''\n      }), !props.expanded ? null : React.createElement('ul', {\n        className: cls,\n        'data-expanded': props.expanded\n      }, React.Children.map(children, function (item, index) {\n        return props.root.renderTreeNode(item, index, props.pos);\n      }, props.root)));\n    }\n\n    return newChildren;\n  };\n\n  TreeNode.prototype.render = function render() {\n    var _iconEleCls,\n        _this2 = this;\n\n    var props = this.props;\n    var prefixCls = props.prefixCls;\n    var expandedState = props.expanded ? 'open' : 'close';\n    var iconState = expandedState;\n    var canRenderSwitcher = true;\n    var content = props.title;\n    var newChildren = this.renderChildren(props);\n\n    if (!newChildren || newChildren === props.children) {\n      // content = newChildren;\n      newChildren = null;\n\n      if (!props.loadData || props.isLeaf) {\n        canRenderSwitcher = false;\n        iconState = 'docu';\n      }\n    } // For performance, does't render children into dom when `!props.expanded` (move to Animate)\n    // if (!props.expanded) {\n    //   newChildren = null;\n    // }\n\n\n    var iconEleCls = (_iconEleCls = {}, _iconEleCls[prefixCls + '-iconEle'] = true, _iconEleCls[prefixCls + '-icon_loading'] = this.state.dataLoading, _iconEleCls[prefixCls + '-icon__' + iconState] = true, _iconEleCls);\n\n    var selectHandle = function selectHandle() {\n      var icon = props.showIcon || props.loadData && _this2.state.dataLoading ? React.createElement('span', {\n        className: classNames(iconEleCls)\n      }) : null;\n      var title = React.createElement('span', {\n        className: prefixCls + '-title'\n      }, content);\n      var wrap = prefixCls + '-node-content-wrapper';\n      var domProps = {\n        className: wrap + ' ' + wrap + '-' + (iconState === expandedState ? iconState : 'normal'),\n        onMouseEnter: _this2.onMouseEnter,\n        onMouseLeave: _this2.onMouseLeave,\n        onContextMenu: _this2.onContextMenu\n      };\n\n      if (!props.disabled) {\n        if (props.selected || _this2.state.dragNodeHighlight) {\n          domProps.className += ' ' + prefixCls + '-node-selected';\n        }\n\n        domProps.onClick = function (e) {\n          if (_this2.isSelectable()) {\n            e.preventDefault();\n\n            _this2.onSelect();\n          } else if (props.checkable && !props.disableCheckbox) {\n            e.preventDefault(); // && !props.disabled is checked on line 259\n\n            _this2.onCheck();\n          }\n        };\n\n        if (props.draggable) {\n          domProps.className += ' draggable';\n          domProps.draggable = true;\n          domProps['aria-grabbed'] = true;\n          domProps.onDragStart = _this2.onDragStart;\n        }\n      }\n\n      return React.createElement('span', _extends({\n        ref: _this2.saveSelectHandle,\n        title: typeof content === 'string' ? content : ''\n      }, domProps), icon, title);\n    };\n\n    var liProps = {};\n\n    if (props.draggable) {\n      liProps.onDragEnter = this.onDragEnter;\n      liProps.onDragOver = this.onDragOver;\n      liProps.onDragLeave = this.onDragLeave;\n      liProps.onDrop = this.onDrop;\n      liProps.onDragEnd = this.onDragEnd;\n    }\n\n    var disabledCls = '';\n    var dragOverCls = '';\n\n    if (props.disabled) {\n      disabledCls = prefixCls + '-treenode-disabled';\n    } else if (props.dragOver) {\n      dragOverCls = 'drag-over';\n    } else if (props.dragOverGapTop) {\n      dragOverCls = 'drag-over-gap-top';\n    } else if (props.dragOverGapBottom) {\n      dragOverCls = 'drag-over-gap-bottom';\n    }\n\n    var filterCls = props.filterTreeNode(this) ? 'filter-node' : '';\n\n    var renderNoopSwitcher = function renderNoopSwitcher() {\n      return React.createElement('span', {\n        className: prefixCls + '-switcher ' + prefixCls + '-switcher-noop'\n      });\n    };\n\n    return React.createElement('li', _extends({}, liProps, {\n      className: classNames(props.className, disabledCls, dragOverCls, filterCls)\n    }), canRenderSwitcher ? this.renderSwitcher(props, expandedState) : renderNoopSwitcher(), props.checkable ? this.renderCheckbox(props) : null, selectHandle(), newChildren);\n  };\n\n  return TreeNode;\n}(React.Component);\n\nTreeNode.propTypes = {\n  prefixCls: PropTypes.string,\n  disabled: PropTypes.bool,\n  disableCheckbox: PropTypes.bool,\n  expanded: PropTypes.bool,\n  isLeaf: PropTypes.bool,\n  root: PropTypes.object,\n  onSelect: PropTypes.func\n};\nTreeNode.contextTypes = contextTypes;\nTreeNode.defaultProps = {\n  title: defaultTitle\n};\nTreeNode.isTreeNode = 1;\nexport default TreeNode;","map":{"version":3,"sources":["/Users/administrator/Desktop/DrChain/drchain_frontend/drchain/node_modules/rc-tree-select/node_modules/rc-tree/es/TreeNode.js"],"names":["_extends","_classCallCheck","_possibleConstructorReturn","_inherits","React","PropTypes","classNames","Animate","toArray","contextTypes","defaultTitle","TreeNode","_React$Component","props","_this","call","onCheck","root","onMouseEnter","e","preventDefault","onMouseLeave","onContextMenu","onDragStart","stopPropagation","setState","dragNodeHighlight","dataTransfer","setData","error","onDragEnter","onDragOver","onDragLeave","onDrop","onDragEnd","onExpand","callbackPromise","setLoading","dataLoading","then","saveSelectHandle","node","selectHandle","state","prototype","onSelect","onKeyDown","isSelectable","context","selectable","rcTree","renderSwitcher","expandedState","prefixCls","switcherCls","createElement","className","onClick","renderCheckbox","_checkboxCls","checkboxCls","checked","halfChecked","customEle","checkable","disabled","disableCheckbox","renderChildren","renderFirst","transitionAppear","expanded","children","filter","item","newChildren","Array","isArray","length","every","type","isTreeNode","_classNames","animProps","openTransitionName","transitionName","openAnimation","animation","appear","cls","showProp","component","Children","map","index","renderTreeNode","pos","render","_iconEleCls","_this2","iconState","canRenderSwitcher","content","title","loadData","isLeaf","iconEleCls","icon","showIcon","wrap","domProps","selected","draggable","ref","liProps","disabledCls","dragOverCls","dragOver","dragOverGapTop","dragOverGapBottom","filterCls","filterTreeNode","renderNoopSwitcher","Component","propTypes","string","bool","object","func","defaultProps"],"mappings":"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","sourcesContent":["import _extends from 'babel-runtime/helpers/extends';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport Animate from 'rc-animate';\nimport toArray from 'rc-util/es/Children/toArray';\nimport { contextTypes } from './Tree';\n\nvar defaultTitle = '---';\n\nvar TreeNode = function (_React$Component) {\n  _inherits(TreeNode, _React$Component);\n\n  function TreeNode(props) {\n    _classCallCheck(this, TreeNode);\n\n    var _this = _possibleConstructorReturn(this, _React$Component.call(this, props));\n\n    _this.onCheck = function () {\n      _this.props.root.onCheck(_this);\n    };\n\n    _this.onMouseEnter = function (e) {\n      e.preventDefault();\n      _this.props.root.onMouseEnter(e, _this);\n    };\n\n    _this.onMouseLeave = function (e) {\n      e.preventDefault();\n      _this.props.root.onMouseLeave(e, _this);\n    };\n\n    _this.onContextMenu = function (e) {\n      _this.props.root.onContextMenu(e, _this);\n    };\n\n    _this.onDragStart = function (e) {\n      e.stopPropagation();\n      _this.setState({\n        dragNodeHighlight: true\n      });\n      _this.props.root.onDragStart(e, _this);\n      try {\n        // ie throw error\n        // firefox-need-it\n        e.dataTransfer.setData('text/plain', '');\n      } catch (error) {\n        // empty\n      }\n    };\n\n    _this.onDragEnter = function (e) {\n      e.preventDefault();\n      e.stopPropagation();\n      _this.props.root.onDragEnter(e, _this);\n    };\n\n    _this.onDragOver = function (e) {\n      e.preventDefault();\n      e.stopPropagation();\n      _this.props.root.onDragOver(e, _this);\n    };\n\n    _this.onDragLeave = function (e) {\n      e.stopPropagation();\n      _this.props.root.onDragLeave(e, _this);\n    };\n\n    _this.onDrop = function (e) {\n      e.preventDefault();\n      e.stopPropagation();\n      _this.setState({\n        dragNodeHighlight: false\n      });\n      _this.props.root.onDrop(e, _this);\n    };\n\n    _this.onDragEnd = function (e) {\n      e.stopPropagation();\n      _this.setState({\n        dragNodeHighlight: false\n      });\n      _this.props.root.onDragEnd(e, _this);\n    };\n\n    _this.onExpand = function () {\n      var callbackPromise = _this.props.root.onExpand(_this);\n      if (callbackPromise && typeof callbackPromise === 'object') {\n        var setLoading = function setLoading(dataLoading) {\n          _this.setState({ dataLoading: dataLoading });\n        };\n        setLoading(true);\n        callbackPromise.then(function () {\n          setLoading(false);\n        }, function () {\n          setLoading(false);\n        });\n      }\n    };\n\n    _this.saveSelectHandle = function (node) {\n      _this.selectHandle = node;\n    };\n\n    _this.state = {\n      dataLoading: false,\n      dragNodeHighlight: false\n    };\n    return _this;\n  }\n\n  TreeNode.prototype.onSelect = function onSelect() {\n    this.props.root.onSelect(this);\n  };\n\n  // keyboard event support\n  TreeNode.prototype.onKeyDown = function onKeyDown(e) {\n    e.preventDefault();\n  };\n\n  TreeNode.prototype.isSelectable = function isSelectable() {\n    var props = this.props,\n        context = this.context;\n\n    return 'selectable' in props ? props.selectable : context.rcTree.selectable;\n  };\n\n  TreeNode.prototype.renderSwitcher = function renderSwitcher(props, expandedState) {\n    var prefixCls = props.prefixCls;\n    var switcherCls = classNames(prefixCls + '-switcher', prefixCls + '-switcher_' + expandedState);\n    return React.createElement('span', { className: switcherCls, onClick: this.onExpand });\n  };\n\n  TreeNode.prototype.renderCheckbox = function renderCheckbox(props) {\n    var _checkboxCls;\n\n    var prefixCls = props.prefixCls;\n    var checkboxCls = (_checkboxCls = {}, _checkboxCls[prefixCls + '-checkbox'] = true, _checkboxCls);\n    if (props.checked) {\n      checkboxCls[prefixCls + '-checkbox-checked'] = true;\n    } else if (props.halfChecked) {\n      checkboxCls[prefixCls + '-checkbox-indeterminate'] = true;\n    }\n    var customEle = null;\n    if (typeof props.checkable !== 'boolean') {\n      customEle = props.checkable;\n    }\n    if (props.disabled || props.disableCheckbox) {\n      checkboxCls[prefixCls + '-checkbox-disabled'] = true;\n      return React.createElement(\n        'span',\n        { className: classNames(checkboxCls) },\n        customEle\n      );\n    }\n    return React.createElement(\n      'span',\n      {\n        className: classNames(checkboxCls),\n        onClick: this.onCheck\n      },\n      customEle\n    );\n  };\n\n  TreeNode.prototype.renderChildren = function renderChildren(props) {\n    var renderFirst = this.renderFirst;\n    this.renderFirst = 1;\n    var transitionAppear = true;\n    if (!renderFirst && props.expanded) {\n      transitionAppear = false;\n    }\n    var children = null;\n    if (props.children) {\n      children = toArray(props.children).filter(function (item) {\n        return !!item;\n      });\n    }\n    var newChildren = children;\n    if (children && (Array.isArray(children) && children.length && children.every(function (item) {\n      return item.type && item.type.isTreeNode;\n    }) || children.type && children.type.isTreeNode)) {\n      var _classNames;\n\n      var animProps = {};\n      if (props.openTransitionName) {\n        animProps.transitionName = props.openTransitionName;\n      } else if (typeof props.openAnimation === 'object') {\n        animProps.animation = _extends({}, props.openAnimation);\n        if (!transitionAppear) {\n          delete animProps.animation.appear;\n        }\n      }\n      var cls = classNames(props.prefixCls + '-child-tree', (_classNames = {}, _classNames[props.prefixCls + '-child-tree-open'] = props.expanded, _classNames));\n      newChildren = React.createElement(\n        Animate,\n        _extends({}, animProps, {\n          showProp: 'data-expanded',\n          transitionAppear: transitionAppear,\n          component: ''\n        }),\n        !props.expanded ? null : React.createElement(\n          'ul',\n          { className: cls, 'data-expanded': props.expanded },\n          React.Children.map(children, function (item, index) {\n            return props.root.renderTreeNode(item, index, props.pos);\n          }, props.root)\n        )\n      );\n    }\n    return newChildren;\n  };\n\n  TreeNode.prototype.render = function render() {\n    var _iconEleCls,\n        _this2 = this;\n\n    var props = this.props;\n\n    var prefixCls = props.prefixCls;\n    var expandedState = props.expanded ? 'open' : 'close';\n    var iconState = expandedState;\n\n    var canRenderSwitcher = true;\n    var content = props.title;\n    var newChildren = this.renderChildren(props);\n    if (!newChildren || newChildren === props.children) {\n      // content = newChildren;\n      newChildren = null;\n      if (!props.loadData || props.isLeaf) {\n        canRenderSwitcher = false;\n        iconState = 'docu';\n      }\n    }\n    // For performance, does't render children into dom when `!props.expanded` (move to Animate)\n    // if (!props.expanded) {\n    //   newChildren = null;\n    // }\n\n    var iconEleCls = (_iconEleCls = {}, _iconEleCls[prefixCls + '-iconEle'] = true, _iconEleCls[prefixCls + '-icon_loading'] = this.state.dataLoading, _iconEleCls[prefixCls + '-icon__' + iconState] = true, _iconEleCls);\n\n    var selectHandle = function selectHandle() {\n      var icon = props.showIcon || props.loadData && _this2.state.dataLoading ? React.createElement('span', { className: classNames(iconEleCls) }) : null;\n      var title = React.createElement(\n        'span',\n        { className: prefixCls + '-title' },\n        content\n      );\n      var wrap = prefixCls + '-node-content-wrapper';\n      var domProps = {\n        className: wrap + ' ' + wrap + '-' + (iconState === expandedState ? iconState : 'normal'),\n        onMouseEnter: _this2.onMouseEnter,\n        onMouseLeave: _this2.onMouseLeave,\n        onContextMenu: _this2.onContextMenu\n      };\n      if (!props.disabled) {\n        if (props.selected || _this2.state.dragNodeHighlight) {\n          domProps.className += ' ' + prefixCls + '-node-selected';\n        }\n        domProps.onClick = function (e) {\n          if (_this2.isSelectable()) {\n            e.preventDefault();\n            _this2.onSelect();\n          } else if (props.checkable && !props.disableCheckbox) {\n            e.preventDefault();\n            // && !props.disabled is checked on line 259\n            _this2.onCheck();\n          }\n        };\n        if (props.draggable) {\n          domProps.className += ' draggable';\n          domProps.draggable = true;\n          domProps['aria-grabbed'] = true;\n          domProps.onDragStart = _this2.onDragStart;\n        }\n      }\n      return React.createElement(\n        'span',\n        _extends({\n          ref: _this2.saveSelectHandle,\n          title: typeof content === 'string' ? content : ''\n        }, domProps),\n        icon,\n        title\n      );\n    };\n\n    var liProps = {};\n    if (props.draggable) {\n      liProps.onDragEnter = this.onDragEnter;\n      liProps.onDragOver = this.onDragOver;\n      liProps.onDragLeave = this.onDragLeave;\n      liProps.onDrop = this.onDrop;\n      liProps.onDragEnd = this.onDragEnd;\n    }\n\n    var disabledCls = '';\n    var dragOverCls = '';\n    if (props.disabled) {\n      disabledCls = prefixCls + '-treenode-disabled';\n    } else if (props.dragOver) {\n      dragOverCls = 'drag-over';\n    } else if (props.dragOverGapTop) {\n      dragOverCls = 'drag-over-gap-top';\n    } else if (props.dragOverGapBottom) {\n      dragOverCls = 'drag-over-gap-bottom';\n    }\n\n    var filterCls = props.filterTreeNode(this) ? 'filter-node' : '';\n\n    var renderNoopSwitcher = function renderNoopSwitcher() {\n      return React.createElement('span', { className: prefixCls + '-switcher ' + prefixCls + '-switcher-noop' });\n    };\n\n    return React.createElement(\n      'li',\n      _extends({}, liProps, {\n        className: classNames(props.className, disabledCls, dragOverCls, filterCls)\n      }),\n      canRenderSwitcher ? this.renderSwitcher(props, expandedState) : renderNoopSwitcher(),\n      props.checkable ? this.renderCheckbox(props) : null,\n      selectHandle(),\n      newChildren\n    );\n  };\n\n  return TreeNode;\n}(React.Component);\n\nTreeNode.propTypes = {\n  prefixCls: PropTypes.string,\n  disabled: PropTypes.bool,\n  disableCheckbox: PropTypes.bool,\n  expanded: PropTypes.bool,\n  isLeaf: PropTypes.bool,\n  root: PropTypes.object,\n  onSelect: PropTypes.func\n};\nTreeNode.contextTypes = contextTypes;\nTreeNode.defaultProps = {\n  title: defaultTitle\n};\n\n\nTreeNode.isTreeNode = 1;\n\nexport default TreeNode;"]},"metadata":{},"sourceType":"module"}