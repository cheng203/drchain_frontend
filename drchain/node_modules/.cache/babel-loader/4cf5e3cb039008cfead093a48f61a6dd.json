{"ast":null,"code":"import _extends from 'babel-runtime/helpers/extends';\nimport { placements as rcPlacements } from 'rc-tooltip/es/placements';\nvar autoAdjustOverflowEnabled = {\n  adjustX: 1,\n  adjustY: 1\n};\nvar autoAdjustOverflowDisabled = {\n  adjustX: 0,\n  adjustY: 0\n};\nvar targetOffset = [0, 0];\nexport function getOverflowOptions(autoAdjustOverflow) {\n  if (typeof autoAdjustOverflow === 'boolean') {\n    return autoAdjustOverflow ? autoAdjustOverflowEnabled : autoAdjustOverflowDisabled;\n  }\n\n  return _extends({}, autoAdjustOverflowDisabled, autoAdjustOverflow);\n}\nexport default function getPlacements() {\n  var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var _config$arrowWidth = config.arrowWidth,\n      arrowWidth = _config$arrowWidth === undefined ? 5 : _config$arrowWidth,\n      _config$horizontalArr = config.horizontalArrowShift,\n      horizontalArrowShift = _config$horizontalArr === undefined ? 16 : _config$horizontalArr,\n      _config$verticalArrow = config.verticalArrowShift,\n      verticalArrowShift = _config$verticalArrow === undefined ? 12 : _config$verticalArrow,\n      _config$autoAdjustOve = config.autoAdjustOverflow,\n      autoAdjustOverflow = _config$autoAdjustOve === undefined ? true : _config$autoAdjustOve;\n  var placementMap = {\n    left: {\n      points: ['cr', 'cl'],\n      offset: [-4, 0]\n    },\n    right: {\n      points: ['cl', 'cr'],\n      offset: [4, 0]\n    },\n    top: {\n      points: ['bc', 'tc'],\n      offset: [0, -4]\n    },\n    bottom: {\n      points: ['tc', 'bc'],\n      offset: [0, 4]\n    },\n    topLeft: {\n      points: ['bl', 'tc'],\n      offset: [-(horizontalArrowShift + arrowWidth), -4]\n    },\n    leftTop: {\n      points: ['tr', 'cl'],\n      offset: [-4, -(verticalArrowShift + arrowWidth)]\n    },\n    topRight: {\n      points: ['br', 'tc'],\n      offset: [horizontalArrowShift + arrowWidth, -4]\n    },\n    rightTop: {\n      points: ['tl', 'cr'],\n      offset: [4, -(verticalArrowShift + arrowWidth)]\n    },\n    bottomRight: {\n      points: ['tr', 'bc'],\n      offset: [horizontalArrowShift + arrowWidth, 4]\n    },\n    rightBottom: {\n      points: ['bl', 'cr'],\n      offset: [4, verticalArrowShift + arrowWidth]\n    },\n    bottomLeft: {\n      points: ['tl', 'bc'],\n      offset: [-(horizontalArrowShift + arrowWidth), 4]\n    },\n    leftBottom: {\n      points: ['br', 'cl'],\n      offset: [-4, verticalArrowShift + arrowWidth]\n    }\n  };\n  Object.keys(placementMap).forEach(function (key) {\n    placementMap[key] = config.arrowPointAtCenter ? _extends({}, placementMap[key], {\n      overflow: getOverflowOptions(autoAdjustOverflow),\n      targetOffset: targetOffset\n    }) : _extends({}, rcPlacements[key], {\n      overflow: getOverflowOptions(autoAdjustOverflow)\n    });\n  });\n  return placementMap;\n}","map":{"version":3,"sources":["/Users/administrator/Desktop/DrChain/drchain_frontend/drchain/node_modules/antd/es/tooltip/placements.js"],"names":["_extends","placements","rcPlacements","autoAdjustOverflowEnabled","adjustX","adjustY","autoAdjustOverflowDisabled","targetOffset","getOverflowOptions","autoAdjustOverflow","getPlacements","config","arguments","length","undefined","_config$arrowWidth","arrowWidth","_config$horizontalArr","horizontalArrowShift","_config$verticalArrow","verticalArrowShift","_config$autoAdjustOve","placementMap","left","points","offset","right","top","bottom","topLeft","leftTop","topRight","rightTop","bottomRight","rightBottom","bottomLeft","leftBottom","Object","keys","forEach","key","arrowPointAtCenter","overflow"],"mappings":"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","sourcesContent":["import _extends from 'babel-runtime/helpers/extends';\nimport { placements as rcPlacements } from 'rc-tooltip/es/placements';\nvar autoAdjustOverflowEnabled = {\n    adjustX: 1,\n    adjustY: 1\n};\nvar autoAdjustOverflowDisabled = {\n    adjustX: 0,\n    adjustY: 0\n};\nvar targetOffset = [0, 0];\nexport function getOverflowOptions(autoAdjustOverflow) {\n    if (typeof autoAdjustOverflow === 'boolean') {\n        return autoAdjustOverflow ? autoAdjustOverflowEnabled : autoAdjustOverflowDisabled;\n    }\n    return _extends({}, autoAdjustOverflowDisabled, autoAdjustOverflow);\n}\nexport default function getPlacements() {\n    var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var _config$arrowWidth = config.arrowWidth,\n        arrowWidth = _config$arrowWidth === undefined ? 5 : _config$arrowWidth,\n        _config$horizontalArr = config.horizontalArrowShift,\n        horizontalArrowShift = _config$horizontalArr === undefined ? 16 : _config$horizontalArr,\n        _config$verticalArrow = config.verticalArrowShift,\n        verticalArrowShift = _config$verticalArrow === undefined ? 12 : _config$verticalArrow,\n        _config$autoAdjustOve = config.autoAdjustOverflow,\n        autoAdjustOverflow = _config$autoAdjustOve === undefined ? true : _config$autoAdjustOve;\n\n    var placementMap = {\n        left: {\n            points: ['cr', 'cl'],\n            offset: [-4, 0]\n        },\n        right: {\n            points: ['cl', 'cr'],\n            offset: [4, 0]\n        },\n        top: {\n            points: ['bc', 'tc'],\n            offset: [0, -4]\n        },\n        bottom: {\n            points: ['tc', 'bc'],\n            offset: [0, 4]\n        },\n        topLeft: {\n            points: ['bl', 'tc'],\n            offset: [-(horizontalArrowShift + arrowWidth), -4]\n        },\n        leftTop: {\n            points: ['tr', 'cl'],\n            offset: [-4, -(verticalArrowShift + arrowWidth)]\n        },\n        topRight: {\n            points: ['br', 'tc'],\n            offset: [horizontalArrowShift + arrowWidth, -4]\n        },\n        rightTop: {\n            points: ['tl', 'cr'],\n            offset: [4, -(verticalArrowShift + arrowWidth)]\n        },\n        bottomRight: {\n            points: ['tr', 'bc'],\n            offset: [horizontalArrowShift + arrowWidth, 4]\n        },\n        rightBottom: {\n            points: ['bl', 'cr'],\n            offset: [4, verticalArrowShift + arrowWidth]\n        },\n        bottomLeft: {\n            points: ['tl', 'bc'],\n            offset: [-(horizontalArrowShift + arrowWidth), 4]\n        },\n        leftBottom: {\n            points: ['br', 'cl'],\n            offset: [-4, verticalArrowShift + arrowWidth]\n        }\n    };\n    Object.keys(placementMap).forEach(function (key) {\n        placementMap[key] = config.arrowPointAtCenter ? _extends({}, placementMap[key], { overflow: getOverflowOptions(autoAdjustOverflow), targetOffset: targetOffset }) : _extends({}, rcPlacements[key], { overflow: getOverflowOptions(autoAdjustOverflow) });\n    });\n    return placementMap;\n}"]},"metadata":{},"sourceType":"module"}