{"ast":null,"code":"import _extends from 'babel-runtime/helpers/extends';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport createReactClass from 'create-react-class';\nimport { Provider, create } from 'mini-store';\nimport { default as MenuMixin, getActiveKey } from './MenuMixin';\nimport { noop } from './util';\nvar Menu = createReactClass({\n  displayName: 'Menu',\n  propTypes: {\n    defaultSelectedKeys: PropTypes.arrayOf(PropTypes.string),\n    selectedKeys: PropTypes.arrayOf(PropTypes.string),\n    defaultOpenKeys: PropTypes.arrayOf(PropTypes.string),\n    openKeys: PropTypes.arrayOf(PropTypes.string),\n    mode: PropTypes.oneOf(['horizontal', 'vertical', 'vertical-left', 'vertical-right', 'inline']),\n    getPopupContainer: PropTypes.func,\n    onClick: PropTypes.func,\n    onSelect: PropTypes.func,\n    onDeselect: PropTypes.func,\n    onDestroy: PropTypes.func,\n    openTransitionName: PropTypes.string,\n    openAnimation: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n    subMenuOpenDelay: PropTypes.number,\n    subMenuCloseDelay: PropTypes.number,\n    forceSubMenuRender: PropTypes.bool,\n    triggerSubMenuAction: PropTypes.string,\n    level: PropTypes.number,\n    selectable: PropTypes.bool,\n    multiple: PropTypes.bool,\n    children: PropTypes.any\n  },\n  mixins: [MenuMixin],\n  isRootMenu: true,\n  getDefaultProps: function getDefaultProps() {\n    return {\n      selectable: true,\n      onClick: noop,\n      onSelect: noop,\n      onOpenChange: noop,\n      onDeselect: noop,\n      defaultSelectedKeys: [],\n      defaultOpenKeys: [],\n      subMenuOpenDelay: 0.1,\n      subMenuCloseDelay: 0.1,\n      triggerSubMenuAction: 'hover'\n    };\n  },\n  getInitialState: function getInitialState() {\n    var props = this.props;\n    var selectedKeys = props.defaultSelectedKeys;\n    var openKeys = props.defaultOpenKeys;\n\n    if ('selectedKeys' in props) {\n      selectedKeys = props.selectedKeys || [];\n    }\n\n    if ('openKeys' in props) {\n      openKeys = props.openKeys || [];\n    }\n\n    this.store = create({\n      selectedKeys: selectedKeys,\n      openKeys: openKeys,\n      activeKey: {\n        '0-menu-': getActiveKey(props, props.activeKey)\n      }\n    });\n    return {};\n  },\n  componentWillReceiveProps: function componentWillReceiveProps(nextProps) {\n    if ('selectedKeys' in nextProps) {\n      this.store.setState({\n        selectedKeys: nextProps.selectedKeys || []\n      });\n    }\n\n    if ('openKeys' in nextProps) {\n      this.store.setState({\n        openKeys: nextProps.openKeys || []\n      });\n    }\n  },\n  onSelect: function onSelect(selectInfo) {\n    var props = this.props;\n\n    if (props.selectable) {\n      // root menu\n      var selectedKeys = this.store.getState().selectedKeys;\n      var selectedKey = selectInfo.key;\n\n      if (props.multiple) {\n        selectedKeys = selectedKeys.concat([selectedKey]);\n      } else {\n        selectedKeys = [selectedKey];\n      }\n\n      if (!('selectedKeys' in props)) {\n        this.store.setState({\n          selectedKeys: selectedKeys\n        });\n      }\n\n      props.onSelect(_extends({}, selectInfo, {\n        selectedKeys: selectedKeys\n      }));\n    }\n  },\n  onClick: function onClick(e) {\n    this.props.onClick(e);\n  },\n  onOpenChange: function onOpenChange(event) {\n    var props = this.props;\n    var openKeys = this.store.getState().openKeys.concat();\n    var changed = false;\n\n    var processSingle = function processSingle(e) {\n      var oneChanged = false;\n\n      if (e.open) {\n        oneChanged = openKeys.indexOf(e.key) === -1;\n\n        if (oneChanged) {\n          openKeys.push(e.key);\n        }\n      } else {\n        var index = openKeys.indexOf(e.key);\n        oneChanged = index !== -1;\n\n        if (oneChanged) {\n          openKeys.splice(index, 1);\n        }\n      }\n\n      changed = changed || oneChanged;\n    };\n\n    if (Array.isArray(event)) {\n      // batch change call\n      event.forEach(processSingle);\n    } else {\n      processSingle(event);\n    }\n\n    if (changed) {\n      if (!('openKeys' in this.props)) {\n        this.store.setState({\n          openKeys: openKeys\n        });\n      }\n\n      props.onOpenChange(openKeys);\n    }\n  },\n  onDeselect: function onDeselect(selectInfo) {\n    var props = this.props;\n\n    if (props.selectable) {\n      var selectedKeys = this.store.getState().selectedKeys.concat();\n      var selectedKey = selectInfo.key;\n      var index = selectedKeys.indexOf(selectedKey);\n\n      if (index !== -1) {\n        selectedKeys.splice(index, 1);\n      }\n\n      if (!('selectedKeys' in props)) {\n        this.store.setState({\n          selectedKeys: selectedKeys\n        });\n      }\n\n      props.onDeselect(_extends({}, selectInfo, {\n        selectedKeys: selectedKeys\n      }));\n    }\n  },\n  getOpenTransitionName: function getOpenTransitionName() {\n    var props = this.props;\n    var transitionName = props.openTransitionName;\n    var animationName = props.openAnimation;\n\n    if (!transitionName && typeof animationName === 'string') {\n      transitionName = props.prefixCls + '-open-' + animationName;\n    }\n\n    return transitionName;\n  },\n  isInlineMode: function isInlineMode() {\n    return this.props.mode === 'inline';\n  },\n  lastOpenSubMenu: function lastOpenSubMenu() {\n    var lastOpen = [];\n\n    var _store$getState = this.store.getState(),\n        openKeys = _store$getState.openKeys;\n\n    if (openKeys.length) {\n      lastOpen = this.getFlatInstanceArray().filter(function (c) {\n        return c && openKeys.indexOf(c.props.eventKey) !== -1;\n      });\n    }\n\n    return lastOpen[0];\n  },\n  renderMenuItem: function renderMenuItem(c, i, subIndex, subMenuKey) {\n    if (!c) {\n      return null;\n    }\n\n    var state = this.store.getState();\n    var extraProps = {\n      openKeys: state.openKeys,\n      selectedKeys: state.selectedKeys,\n      triggerSubMenuAction: this.props.triggerSubMenuAction,\n      subMenuKey: subMenuKey\n    };\n    return this.renderCommonMenuItem(c, i, subIndex, extraProps);\n  },\n  render: function render() {\n    var props = _extends({}, this.props);\n\n    props.className += ' ' + props.prefixCls + '-root';\n    return React.createElement(Provider, {\n      store: this.store\n    }, this.renderRoot(props));\n  }\n});\nexport default Menu;","map":{"version":3,"sources":["/Users/administrator/Desktop/DrChain/drchain_frontend/drchain/node_modules/rc-menu/es/Menu.js"],"names":["_extends","React","PropTypes","createReactClass","Provider","create","default","MenuMixin","getActiveKey","noop","Menu","displayName","propTypes","defaultSelectedKeys","arrayOf","string","selectedKeys","defaultOpenKeys","openKeys","mode","oneOf","getPopupContainer","func","onClick","onSelect","onDeselect","onDestroy","openTransitionName","openAnimation","oneOfType","object","subMenuOpenDelay","number","subMenuCloseDelay","forceSubMenuRender","bool","triggerSubMenuAction","level","selectable","multiple","children","any","mixins","isRootMenu","getDefaultProps","onOpenChange","getInitialState","props","store","activeKey","componentWillReceiveProps","nextProps","setState","selectInfo","getState","selectedKey","key","concat","e","event","changed","processSingle","oneChanged","open","indexOf","push","index","splice","Array","isArray","forEach","getOpenTransitionName","transitionName","animationName","prefixCls","isInlineMode","lastOpenSubMenu","lastOpen","_store$getState","length","getFlatInstanceArray","filter","c","eventKey","renderMenuItem","i","subIndex","subMenuKey","state","extraProps","renderCommonMenuItem","render","className","createElement","renderRoot"],"mappings":"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","sourcesContent":["import _extends from 'babel-runtime/helpers/extends';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport createReactClass from 'create-react-class';\nimport { Provider, create } from 'mini-store';\nimport { default as MenuMixin, getActiveKey } from './MenuMixin';\nimport { noop } from './util';\n\nvar Menu = createReactClass({\n  displayName: 'Menu',\n\n  propTypes: {\n    defaultSelectedKeys: PropTypes.arrayOf(PropTypes.string),\n    selectedKeys: PropTypes.arrayOf(PropTypes.string),\n    defaultOpenKeys: PropTypes.arrayOf(PropTypes.string),\n    openKeys: PropTypes.arrayOf(PropTypes.string),\n    mode: PropTypes.oneOf(['horizontal', 'vertical', 'vertical-left', 'vertical-right', 'inline']),\n    getPopupContainer: PropTypes.func,\n    onClick: PropTypes.func,\n    onSelect: PropTypes.func,\n    onDeselect: PropTypes.func,\n    onDestroy: PropTypes.func,\n    openTransitionName: PropTypes.string,\n    openAnimation: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n    subMenuOpenDelay: PropTypes.number,\n    subMenuCloseDelay: PropTypes.number,\n    forceSubMenuRender: PropTypes.bool,\n    triggerSubMenuAction: PropTypes.string,\n    level: PropTypes.number,\n    selectable: PropTypes.bool,\n    multiple: PropTypes.bool,\n    children: PropTypes.any\n  },\n\n  mixins: [MenuMixin],\n\n  isRootMenu: true,\n\n  getDefaultProps: function getDefaultProps() {\n    return {\n      selectable: true,\n      onClick: noop,\n      onSelect: noop,\n      onOpenChange: noop,\n      onDeselect: noop,\n      defaultSelectedKeys: [],\n      defaultOpenKeys: [],\n      subMenuOpenDelay: 0.1,\n      subMenuCloseDelay: 0.1,\n      triggerSubMenuAction: 'hover'\n    };\n  },\n  getInitialState: function getInitialState() {\n    var props = this.props;\n    var selectedKeys = props.defaultSelectedKeys;\n    var openKeys = props.defaultOpenKeys;\n    if ('selectedKeys' in props) {\n      selectedKeys = props.selectedKeys || [];\n    }\n    if ('openKeys' in props) {\n      openKeys = props.openKeys || [];\n    }\n\n    this.store = create({\n      selectedKeys: selectedKeys,\n      openKeys: openKeys,\n      activeKey: { '0-menu-': getActiveKey(props, props.activeKey) }\n    });\n\n    return {};\n  },\n  componentWillReceiveProps: function componentWillReceiveProps(nextProps) {\n    if ('selectedKeys' in nextProps) {\n      this.store.setState({\n        selectedKeys: nextProps.selectedKeys || []\n      });\n    }\n    if ('openKeys' in nextProps) {\n      this.store.setState({\n        openKeys: nextProps.openKeys || []\n      });\n    }\n  },\n  onSelect: function onSelect(selectInfo) {\n    var props = this.props;\n    if (props.selectable) {\n      // root menu\n      var selectedKeys = this.store.getState().selectedKeys;\n      var selectedKey = selectInfo.key;\n      if (props.multiple) {\n        selectedKeys = selectedKeys.concat([selectedKey]);\n      } else {\n        selectedKeys = [selectedKey];\n      }\n      if (!('selectedKeys' in props)) {\n        this.store.setState({\n          selectedKeys: selectedKeys\n        });\n      }\n      props.onSelect(_extends({}, selectInfo, {\n        selectedKeys: selectedKeys\n      }));\n    }\n  },\n  onClick: function onClick(e) {\n    this.props.onClick(e);\n  },\n  onOpenChange: function onOpenChange(event) {\n    var props = this.props;\n    var openKeys = this.store.getState().openKeys.concat();\n    var changed = false;\n    var processSingle = function processSingle(e) {\n      var oneChanged = false;\n      if (e.open) {\n        oneChanged = openKeys.indexOf(e.key) === -1;\n        if (oneChanged) {\n          openKeys.push(e.key);\n        }\n      } else {\n        var index = openKeys.indexOf(e.key);\n        oneChanged = index !== -1;\n        if (oneChanged) {\n          openKeys.splice(index, 1);\n        }\n      }\n      changed = changed || oneChanged;\n    };\n    if (Array.isArray(event)) {\n      // batch change call\n      event.forEach(processSingle);\n    } else {\n      processSingle(event);\n    }\n    if (changed) {\n      if (!('openKeys' in this.props)) {\n        this.store.setState({ openKeys: openKeys });\n      }\n      props.onOpenChange(openKeys);\n    }\n  },\n  onDeselect: function onDeselect(selectInfo) {\n    var props = this.props;\n    if (props.selectable) {\n      var selectedKeys = this.store.getState().selectedKeys.concat();\n      var selectedKey = selectInfo.key;\n      var index = selectedKeys.indexOf(selectedKey);\n      if (index !== -1) {\n        selectedKeys.splice(index, 1);\n      }\n      if (!('selectedKeys' in props)) {\n        this.store.setState({\n          selectedKeys: selectedKeys\n        });\n      }\n      props.onDeselect(_extends({}, selectInfo, {\n        selectedKeys: selectedKeys\n      }));\n    }\n  },\n  getOpenTransitionName: function getOpenTransitionName() {\n    var props = this.props;\n    var transitionName = props.openTransitionName;\n    var animationName = props.openAnimation;\n    if (!transitionName && typeof animationName === 'string') {\n      transitionName = props.prefixCls + '-open-' + animationName;\n    }\n    return transitionName;\n  },\n  isInlineMode: function isInlineMode() {\n    return this.props.mode === 'inline';\n  },\n  lastOpenSubMenu: function lastOpenSubMenu() {\n    var lastOpen = [];\n\n    var _store$getState = this.store.getState(),\n        openKeys = _store$getState.openKeys;\n\n    if (openKeys.length) {\n      lastOpen = this.getFlatInstanceArray().filter(function (c) {\n        return c && openKeys.indexOf(c.props.eventKey) !== -1;\n      });\n    }\n    return lastOpen[0];\n  },\n  renderMenuItem: function renderMenuItem(c, i, subIndex, subMenuKey) {\n    if (!c) {\n      return null;\n    }\n    var state = this.store.getState();\n    var extraProps = {\n      openKeys: state.openKeys,\n      selectedKeys: state.selectedKeys,\n      triggerSubMenuAction: this.props.triggerSubMenuAction,\n      subMenuKey: subMenuKey\n    };\n    return this.renderCommonMenuItem(c, i, subIndex, extraProps);\n  },\n  render: function render() {\n    var props = _extends({}, this.props);\n    props.className += ' ' + props.prefixCls + '-root';\n    return React.createElement(\n      Provider,\n      { store: this.store },\n      this.renderRoot(props)\n    );\n  }\n});\n\nexport default Menu;"]},"metadata":{},"sourceType":"module"}