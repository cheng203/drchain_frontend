{"ast":null,"code":"import _objectWithoutProperties from 'babel-runtime/helpers/objectWithoutProperties';\nimport _extends from 'babel-runtime/helpers/extends';\n/* eslint no-loop-func: 0*/\n\nimport React from 'react';\nexport function toTitle(title) {\n  if (typeof title === 'string') {\n    return title;\n  }\n\n  return null;\n}\nexport function getValuePropValue(child) {\n  var props = child.props;\n\n  if ('value' in props) {\n    return props.value;\n  }\n\n  if (child.key) {\n    return child.key;\n  }\n\n  throw new Error('no key or value for ' + child);\n}\nexport function getPropValue(child, prop) {\n  if (prop === 'value') {\n    return getValuePropValue(child);\n  }\n\n  return child.props[prop];\n}\nexport function isMultiple(props) {\n  return !!(props.multiple || props.treeCheckable);\n}\nexport function toArray(value) {\n  var ret = value;\n\n  if (value === undefined) {\n    ret = [];\n  } else if (!Array.isArray(value)) {\n    ret = [value];\n  }\n\n  return ret;\n}\nexport function preventDefaultEvent(e) {\n  e.preventDefault();\n}\nexport var UNSELECTABLE_STYLE = {\n  userSelect: 'none',\n  WebkitUserSelect: 'none'\n};\nexport var UNSELECTABLE_ATTRIBUTE = {\n  unselectable: 'unselectable'\n};\nexport function labelCompatible(prop) {\n  var newProp = prop;\n\n  if (newProp === 'label') {\n    newProp = 'title';\n  }\n\n  return newProp;\n}\nexport function isInclude(smallArray, bigArray) {\n  // attention: [0,0,1] [0,0,10]\n  return smallArray.every(function (ii, i) {\n    return ii === bigArray[i];\n  });\n}\nexport function isPositionPrefix(smallPos, bigPos) {\n  if (!bigPos || !smallPos) {\n    // console.log(smallPos, bigPos);\n    return false;\n  }\n\n  if (bigPos.length < smallPos.length) {\n    return false;\n  } // attention: \"0-0-1\" \"0-0-10\"\n\n\n  if (bigPos.length > smallPos.length && bigPos.charAt(smallPos.length) !== '-') {\n    return false;\n  }\n\n  return bigPos.substr(0, smallPos.length) === smallPos;\n}\n/*\nexport function getCheckedKeys(node, checkedKeys, allCheckedNodesKeys) {\n  const nodeKey = node.props.eventKey;\n  let newCks = [...checkedKeys];\n  let nodePos;\n  const unCheck = allCheckedNodesKeys.some(item => {\n    if (item.key === nodeKey) {\n      nodePos = item.pos;\n      return true;\n    }\n  });\n  if (unCheck) {\n    newCks = [];\n    allCheckedNodesKeys.forEach(item => {\n      if (isPositionPrefix(item.pos, nodePos) || isPositionPrefix(nodePos, item.pos)) {\n        return;\n      }\n      newCks.push(item.key);\n    });\n  } else {\n    newCks.push(nodeKey);\n  }\n  return newCks;\n}\n*/\n\nfunction getChildrenlength(children) {\n  var len = 1;\n\n  if (Array.isArray(children)) {\n    len = children.length;\n  }\n\n  return len;\n}\n\nfunction getSiblingPosition(index, len, siblingPosition) {\n  if (len === 1) {\n    siblingPosition.first = true;\n    siblingPosition.last = true;\n  } else {\n    siblingPosition.first = index === 0;\n    siblingPosition.last = index === len - 1;\n  }\n\n  return siblingPosition;\n}\n\nexport function loopAllChildren(childs, callback, parent) {\n  var loop = function loop(children, level, _parent) {\n    var len = getChildrenlength(children);\n    React.Children.forEach(children, function handler(item, index) {\n      // eslint-disable-line\n      var pos = level + '-' + index;\n\n      if (item && item.props.children && item.type) {\n        loop(item.props.children, pos, {\n          node: item,\n          pos: pos\n        });\n      }\n\n      if (item) {\n        callback(item, index, pos, item.key || pos, getSiblingPosition(index, len, {}), _parent);\n      }\n    });\n  };\n\n  loop(childs, 0, parent);\n} // export function loopAllChildren(childs, callback) {\n//   const loop = (children, level) => {\n//     React.Children.forEach(children, (item, index) => {\n//       const pos = `${level}-${index}`;\n//       if (item && item.props.children) {\n//         loop(item.props.children, pos);\n//       }\n//       if (item) {\n//         callback(item, index, pos, getValuePropValue(item));\n//       }\n//     });\n//   };\n//   loop(childs, 0);\n// }\n// TODO: Here has the side effect. Update node children data affect.\n\nexport function flatToHierarchy(arr) {\n  if (!arr.length) {\n    return arr;\n  }\n\n  var hierarchyNodes = [];\n  var levelObj = {};\n  arr.forEach(function (item) {\n    if (!item.pos) {\n      return;\n    }\n\n    var posLen = item.pos.split('-').length;\n\n    if (!levelObj[posLen]) {\n      levelObj[posLen] = [];\n    }\n\n    levelObj[posLen].push(item);\n  });\n  var levelArr = Object.keys(levelObj).sort(function (a, b) {\n    return b - a;\n  }); // const s = Date.now();\n  // todo: there are performance issues!\n\n  levelArr.reduce(function (pre, cur) {\n    if (cur && cur !== pre) {\n      levelObj[pre].forEach(function (item) {\n        var haveParent = false;\n        levelObj[cur].forEach(function (ii) {\n          if (isPositionPrefix(ii.pos, item.pos)) {\n            haveParent = true;\n\n            if (!ii.children) {\n              ii.children = [];\n            }\n\n            ii.children.push(item);\n          }\n        });\n\n        if (!haveParent) {\n          hierarchyNodes.push(item);\n        }\n      });\n    }\n\n    return cur;\n  }); // console.log(Date.now() - s);\n\n  return levelObj[levelArr[levelArr.length - 1]].concat(hierarchyNodes);\n} // arr.length === 628, use time: ~20ms\n\nexport function filterParentPosition(arr) {\n  var levelObj = {};\n  arr.forEach(function (item) {\n    var posLen = item.split('-').length;\n\n    if (!levelObj[posLen]) {\n      levelObj[posLen] = [];\n    }\n\n    levelObj[posLen].push(item);\n  });\n  var levelArr = Object.keys(levelObj).sort();\n\n  var _loop = function _loop(i) {\n    if (levelArr[i + 1]) {\n      levelObj[levelArr[i]].forEach(function (ii) {\n        var _loop2 = function _loop2(j) {\n          levelObj[levelArr[j]].forEach(function (_i, index) {\n            if (isPositionPrefix(ii, _i)) {\n              levelObj[levelArr[j]][index] = null;\n            }\n          });\n          levelObj[levelArr[j]] = levelObj[levelArr[j]].filter(function (p) {\n            return p;\n          });\n        };\n\n        for (var j = i + 1; j < levelArr.length; j++) {\n          _loop2(j);\n        }\n      });\n    }\n  };\n\n  for (var i = 0; i < levelArr.length; i++) {\n    _loop(i);\n  }\n\n  var nArr = [];\n  levelArr.forEach(function (i) {\n    nArr = nArr.concat(levelObj[i]);\n  });\n  return nArr;\n} // console.log(filterParentPosition(\n// ['0-2', '0-3-3', '0-10', '0-10-0', '0-0-1', '0-0', '0-1-1', '0-1']\n// ));\n\nfunction stripTail(str) {\n  var arr = str.match(/(.+)(-[^-]+)$/);\n  var st = '';\n\n  if (arr && arr.length === 3) {\n    st = arr[1];\n  }\n\n  return st;\n}\n\nfunction splitPosition(pos) {\n  return pos.split('-');\n} // todo: do optimization.\n\n\nexport function handleCheckState(obj, checkedPositionArr, checkIt) {\n  // console.log(stripTail('0-101-000'));\n  // let s = Date.now();\n  var objKeys = Object.keys(obj);\n  objKeys.forEach(function (i, index) {\n    var iArr = splitPosition(i);\n    var saved = false;\n    checkedPositionArr.forEach(function (_pos) {\n      var _posArr = splitPosition(_pos);\n\n      if (iArr.length > _posArr.length && isInclude(_posArr, iArr)) {\n        obj[i].halfChecked = false;\n        obj[i].checked = checkIt;\n        objKeys[index] = null;\n      }\n\n      if (iArr[0] === _posArr[0] && iArr[1] === _posArr[1]) {\n        saved = true;\n      }\n    });\n\n    if (!saved) {\n      objKeys[index] = null;\n    }\n  });\n  objKeys = objKeys.filter(function (i) {\n    return i;\n  }); // filter non null;\n\n  var _loop3 = function _loop3(_pIndex) {\n    // loop to set ancestral nodes's `checked` or `halfChecked`\n    var loop = function loop(__pos) {\n      var _posLen = splitPosition(__pos).length;\n\n      if (_posLen <= 2) {\n        // e.g. '0-0', '0-1'\n        return;\n      }\n\n      var sibling = 0;\n      var siblingChecked = 0;\n      var parentPosition = stripTail(__pos);\n      objKeys.forEach(function (i\n      /* , index*/\n      ) {\n        var iArr = splitPosition(i);\n\n        if (iArr.length === _posLen && isInclude(splitPosition(parentPosition), iArr)) {\n          sibling++;\n\n          if (obj[i].checked) {\n            siblingChecked++;\n\n            var _i = checkedPositionArr.indexOf(i);\n\n            if (_i > -1) {\n              checkedPositionArr.splice(_i, 1);\n\n              if (_i <= _pIndex) {\n                _pIndex--;\n              }\n            }\n          } else if (obj[i].halfChecked) {\n            siblingChecked += 0.5;\n          } // objKeys[index] = null;\n\n        }\n      }); // objKeys = objKeys.filter(i => i); // filter non null;\n\n      var parent = obj[parentPosition]; // not check, checked, halfChecked\n\n      if (siblingChecked === 0) {\n        parent.checked = false;\n        parent.halfChecked = false;\n      } else if (siblingChecked === sibling) {\n        parent.checked = true;\n        parent.halfChecked = false;\n      } else {\n        parent.halfChecked = true;\n        parent.checked = false;\n      }\n\n      loop(parentPosition);\n    };\n\n    loop(checkedPositionArr[_pIndex], _pIndex);\n    pIndex = _pIndex;\n  };\n\n  for (var pIndex = 0; pIndex < checkedPositionArr.length; pIndex++) {\n    _loop3(pIndex);\n  } // console.log(Date.now()-s, objKeys.length, checkIt);\n\n}\n\nfunction getCheck(treeNodesStates, checkedPositions) {\n  var halfCheckedKeys = [];\n  var checkedKeys = [];\n  var checkedNodes = [];\n  Object.keys(treeNodesStates).forEach(function (item) {\n    var itemObj = treeNodesStates[item];\n\n    if (itemObj.checked) {\n      checkedKeys.push(itemObj.key); // checkedNodes.push(getValuePropValue(itemObj.node));\n\n      checkedNodes.push(_extends({}, itemObj, {\n        pos: item\n      }));\n    } else if (itemObj.halfChecked) {\n      halfCheckedKeys.push(itemObj.key);\n    }\n  });\n  return {\n    halfCheckedKeys: halfCheckedKeys,\n    checkedKeys: checkedKeys,\n    checkedNodes: checkedNodes,\n    treeNodesStates: treeNodesStates,\n    checkedPositions: checkedPositions\n  };\n}\n\nexport function getTreeNodesStates(children, values) {\n  var checkedPositions = [];\n  var treeNodesStates = {};\n  loopAllChildren(children, function (item, index, pos, keyOrPos, siblingPosition) {\n    treeNodesStates[pos] = {\n      node: item,\n      key: keyOrPos,\n      checked: false,\n      halfChecked: false,\n      siblingPosition: siblingPosition\n    };\n\n    if (values.indexOf(getValuePropValue(item)) !== -1) {\n      treeNodesStates[pos].checked = true;\n      checkedPositions.push(pos);\n    }\n  });\n  handleCheckState(treeNodesStates, filterParentPosition(checkedPositions.sort()), true);\n  return getCheck(treeNodesStates, checkedPositions);\n} // can add extra prop to every node.\n\nexport function recursiveCloneChildren(children) {\n  var cb = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function (ch) {\n    return ch;\n  }; // return React.Children.map(children, child => {\n\n  return Array.from(children).map(function (child) {\n    var newChild = cb(child);\n\n    if (newChild && newChild.props && newChild.props.children) {\n      return React.cloneElement(newChild, {}, recursiveCloneChildren(newChild.props.children, cb));\n    }\n\n    return newChild;\n  });\n} // const newChildren = recursiveCloneChildren(children, child => {\n//   const extraProps = {};\n//   if (child && child.type && child.type.xxx) {\n//     extraProps._prop = true;\n//     return React.cloneElement(child, extraProps);\n//   }\n//   return child;\n// });\n\nfunction recursiveGen(children) {\n  var level = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  return React.Children.map(children, function (child, index) {\n    var pos = level + '-' + index;\n\n    var _child$props = child.props,\n        title = _child$props.title,\n        label = _child$props.label,\n        value = _child$props.value,\n        subChildren = _child$props.children,\n        rest = _objectWithoutProperties(_child$props, ['title', 'label', 'value', 'children']);\n\n    var o = _extends({}, rest, {\n      title: title,\n      label: label || title,\n      value: value,\n      key: child.key,\n      _pos: pos\n    });\n\n    if (subChildren) {\n      o.children = recursiveGen(subChildren, pos);\n    }\n\n    return o;\n  });\n}\n\nfunction recursive(children, cb) {\n  children.forEach(function (item) {\n    cb(item);\n\n    if (item.children) {\n      recursive(item.children, cb);\n    }\n  });\n} // Get the tree's checkedNodes (todo: can merge to the `handleCheckState` function)\n// If one node checked, it's all children nodes checked.\n// If sibling nodes all checked, the parent checked.\n\n\nexport function filterAllCheckedData(vs, treeNodes) {\n  var vals = [].concat(vs);\n\n  if (!vals.length) {\n    return vals;\n  }\n\n  var data = recursiveGen(treeNodes);\n  var checkedNodesPositions = [];\n\n  function checkChildren(children) {\n    children.forEach(function (item) {\n      if (item.__checked) {\n        return;\n      }\n\n      var ci = vals.indexOf(item.value);\n      var childs = item.children;\n\n      if (ci > -1) {\n        item.__checked = true;\n        checkedNodesPositions.push({\n          node: item,\n          pos: item._pos\n        });\n        vals.splice(ci, 1);\n\n        if (childs) {\n          recursive(childs, function (child) {\n            child.__checked = true;\n            checkedNodesPositions.push({\n              node: child,\n              pos: child._pos\n            });\n          });\n        }\n      } else {\n        if (childs) {\n          checkChildren(childs);\n        }\n      }\n    });\n  }\n\n  function checkParent(children) {\n    var parent = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n      root: true\n    };\n    var siblingChecked = 0;\n    children.forEach(function (item) {\n      var childs = item.children;\n\n      if (childs && !item.__checked && !item.__halfChecked) {\n        var p = checkParent(childs, item);\n\n        if (p.__checked) {\n          siblingChecked++;\n        } else if (p.__halfChecked) {\n          siblingChecked += 0.5;\n        }\n      } else if (item.__checked) {\n        siblingChecked++;\n      } else if (item.__halfChecked) {\n        siblingChecked += 0.5;\n      }\n    });\n    var len = children.length;\n\n    if (siblingChecked === len) {\n      parent.__checked = true;\n      checkedNodesPositions.push({\n        node: parent,\n        pos: parent._pos\n      });\n    } else if (siblingChecked < len && siblingChecked > 0) {\n      parent.__halfChecked = true;\n    }\n\n    if (parent.root) {\n      return children;\n    }\n\n    return parent;\n  }\n\n  checkChildren(data);\n  checkParent(data);\n  checkedNodesPositions.forEach(function (i, index) {\n    // clear private metadata\n    delete checkedNodesPositions[index].node.__checked;\n    delete checkedNodesPositions[index].node._pos; // create the same structure of `onCheck`'s return.\n\n    checkedNodesPositions[index].node.props = {\n      title: checkedNodesPositions[index].node.title,\n      label: checkedNodesPositions[index].node.label || checkedNodesPositions[index].node.title,\n      value: checkedNodesPositions[index].node.value\n    };\n\n    if (checkedNodesPositions[index].node.children) {\n      checkedNodesPositions[index].node.props.children = checkedNodesPositions[index].node.children;\n    }\n\n    delete checkedNodesPositions[index].node.title;\n    delete checkedNodesPositions[index].node.label;\n    delete checkedNodesPositions[index].node.value;\n    delete checkedNodesPositions[index].node.children;\n  });\n  return checkedNodesPositions;\n}\nexport function processSimpleTreeData(treeData, format) {\n  function unflatten2(array) {\n    var _ref;\n\n    var parent = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : (_ref = {}, _ref[format.id] = format.rootPId, _ref);\n    var children = [];\n\n    for (var i = 0; i < array.length; i++) {\n      array[i] = _extends({}, array[i]); // copy, can not corrupts original data\n\n      if (array[i][format.pId] === parent[format.id]) {\n        array[i].key = array[i][format.id];\n        children.push(array[i]);\n        array.splice(i--, 1);\n      }\n    }\n\n    if (children.length) {\n      parent.children = children;\n      children.forEach(function (child) {\n        return unflatten2(array, child);\n      });\n    }\n\n    if (parent[format.id] === format.rootPId) {\n      return children;\n    }\n  }\n\n  return unflatten2(treeData);\n}\nexport function saveRef(instance, name) {\n  if (!instance.saveRefs) {\n    instance.saveRefs = {};\n  }\n\n  if (!instance.saveRefs[name]) {\n    instance.saveRefs[name] = function (node) {\n      instance[name] = node;\n    };\n  }\n\n  return instance.saveRefs[name];\n}","map":{"version":3,"sources":["/Users/administrator/Desktop/DrChain/drchain_frontend/drchain/node_modules/rc-tree-select/es/util.js"],"names":["_objectWithoutProperties","_extends","React","toTitle","title","getValuePropValue","child","props","value","key","Error","getPropValue","prop","isMultiple","multiple","treeCheckable","toArray","ret","undefined","Array","isArray","preventDefaultEvent","e","preventDefault","UNSELECTABLE_STYLE","userSelect","WebkitUserSelect","UNSELECTABLE_ATTRIBUTE","unselectable","labelCompatible","newProp","isInclude","smallArray","bigArray","every","ii","i","isPositionPrefix","smallPos","bigPos","length","charAt","substr","getChildrenlength","children","len","getSiblingPosition","index","siblingPosition","first","last","loopAllChildren","childs","callback","parent","loop","level","_parent","Children","forEach","handler","item","pos","type","node","flatToHierarchy","arr","hierarchyNodes","levelObj","posLen","split","push","levelArr","Object","keys","sort","a","b","reduce","pre","cur","haveParent","concat","filterParentPosition","_loop","_loop2","j","_i","filter","p","nArr","stripTail","str","match","st","splitPosition","handleCheckState","obj","checkedPositionArr","checkIt","objKeys","iArr","saved","_pos","_posArr","halfChecked","checked","_loop3","_pIndex","__pos","_posLen","sibling","siblingChecked","parentPosition","indexOf","splice","pIndex","getCheck","treeNodesStates","checkedPositions","halfCheckedKeys","checkedKeys","checkedNodes","itemObj","getTreeNodesStates","values","keyOrPos","recursiveCloneChildren","cb","arguments","ch","from","map","newChild","cloneElement","recursiveGen","_child$props","label","subChildren","rest","o","recursive","filterAllCheckedData","vs","treeNodes","vals","data","checkedNodesPositions","checkChildren","__checked","ci","checkParent","root","__halfChecked","processSimpleTreeData","treeData","format","unflatten2","array","_ref","id","rootPId","pId","saveRef","instance","name","saveRefs"],"mappings":"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","sourcesContent":["import _objectWithoutProperties from 'babel-runtime/helpers/objectWithoutProperties';\nimport _extends from 'babel-runtime/helpers/extends';\n/* eslint no-loop-func: 0*/\nimport React from 'react';\n\nexport function toTitle(title) {\n  if (typeof title === 'string') {\n    return title;\n  }\n  return null;\n}\n\nexport function getValuePropValue(child) {\n  var props = child.props;\n  if ('value' in props) {\n    return props.value;\n  }\n  if (child.key) {\n    return child.key;\n  }\n  throw new Error('no key or value for ' + child);\n}\n\nexport function getPropValue(child, prop) {\n  if (prop === 'value') {\n    return getValuePropValue(child);\n  }\n  return child.props[prop];\n}\n\nexport function isMultiple(props) {\n  return !!(props.multiple || props.treeCheckable);\n}\n\nexport function toArray(value) {\n  var ret = value;\n  if (value === undefined) {\n    ret = [];\n  } else if (!Array.isArray(value)) {\n    ret = [value];\n  }\n  return ret;\n}\n\nexport function preventDefaultEvent(e) {\n  e.preventDefault();\n}\n\nexport var UNSELECTABLE_STYLE = {\n  userSelect: 'none',\n  WebkitUserSelect: 'none'\n};\n\nexport var UNSELECTABLE_ATTRIBUTE = {\n  unselectable: 'unselectable'\n};\n\nexport function labelCompatible(prop) {\n  var newProp = prop;\n  if (newProp === 'label') {\n    newProp = 'title';\n  }\n  return newProp;\n}\n\nexport function isInclude(smallArray, bigArray) {\n  // attention: [0,0,1] [0,0,10]\n  return smallArray.every(function (ii, i) {\n    return ii === bigArray[i];\n  });\n}\n\nexport function isPositionPrefix(smallPos, bigPos) {\n  if (!bigPos || !smallPos) {\n    // console.log(smallPos, bigPos);\n    return false;\n  }\n  if (bigPos.length < smallPos.length) {\n    return false;\n  }\n  // attention: \"0-0-1\" \"0-0-10\"\n  if (bigPos.length > smallPos.length && bigPos.charAt(smallPos.length) !== '-') {\n    return false;\n  }\n  return bigPos.substr(0, smallPos.length) === smallPos;\n}\n\n/*\nexport function getCheckedKeys(node, checkedKeys, allCheckedNodesKeys) {\n  const nodeKey = node.props.eventKey;\n  let newCks = [...checkedKeys];\n  let nodePos;\n  const unCheck = allCheckedNodesKeys.some(item => {\n    if (item.key === nodeKey) {\n      nodePos = item.pos;\n      return true;\n    }\n  });\n  if (unCheck) {\n    newCks = [];\n    allCheckedNodesKeys.forEach(item => {\n      if (isPositionPrefix(item.pos, nodePos) || isPositionPrefix(nodePos, item.pos)) {\n        return;\n      }\n      newCks.push(item.key);\n    });\n  } else {\n    newCks.push(nodeKey);\n  }\n  return newCks;\n}\n*/\n\nfunction getChildrenlength(children) {\n  var len = 1;\n  if (Array.isArray(children)) {\n    len = children.length;\n  }\n  return len;\n}\n\nfunction getSiblingPosition(index, len, siblingPosition) {\n  if (len === 1) {\n    siblingPosition.first = true;\n    siblingPosition.last = true;\n  } else {\n    siblingPosition.first = index === 0;\n    siblingPosition.last = index === len - 1;\n  }\n  return siblingPosition;\n}\n\nexport function loopAllChildren(childs, callback, parent) {\n  var loop = function loop(children, level, _parent) {\n    var len = getChildrenlength(children);\n    React.Children.forEach(children, function handler(item, index) {\n      // eslint-disable-line\n      var pos = level + '-' + index;\n      if (item && item.props.children && item.type) {\n        loop(item.props.children, pos, { node: item, pos: pos });\n      }\n      if (item) {\n        callback(item, index, pos, item.key || pos, getSiblingPosition(index, len, {}), _parent);\n      }\n    });\n  };\n  loop(childs, 0, parent);\n}\n\n// export function loopAllChildren(childs, callback) {\n//   const loop = (children, level) => {\n//     React.Children.forEach(children, (item, index) => {\n//       const pos = `${level}-${index}`;\n//       if (item && item.props.children) {\n//         loop(item.props.children, pos);\n//       }\n//       if (item) {\n//         callback(item, index, pos, getValuePropValue(item));\n//       }\n//     });\n//   };\n//   loop(childs, 0);\n// }\n\n// TODO: Here has the side effect. Update node children data affect.\nexport function flatToHierarchy(arr) {\n  if (!arr.length) {\n    return arr;\n  }\n  var hierarchyNodes = [];\n  var levelObj = {};\n  arr.forEach(function (item) {\n    if (!item.pos) {\n      return;\n    }\n    var posLen = item.pos.split('-').length;\n    if (!levelObj[posLen]) {\n      levelObj[posLen] = [];\n    }\n    levelObj[posLen].push(item);\n  });\n  var levelArr = Object.keys(levelObj).sort(function (a, b) {\n    return b - a;\n  });\n  // const s = Date.now();\n  // todo: there are performance issues!\n  levelArr.reduce(function (pre, cur) {\n    if (cur && cur !== pre) {\n      levelObj[pre].forEach(function (item) {\n        var haveParent = false;\n        levelObj[cur].forEach(function (ii) {\n          if (isPositionPrefix(ii.pos, item.pos)) {\n            haveParent = true;\n            if (!ii.children) {\n              ii.children = [];\n            }\n            ii.children.push(item);\n          }\n        });\n        if (!haveParent) {\n          hierarchyNodes.push(item);\n        }\n      });\n    }\n    return cur;\n  });\n  // console.log(Date.now() - s);\n  return levelObj[levelArr[levelArr.length - 1]].concat(hierarchyNodes);\n}\n\n// arr.length === 628, use time: ~20ms\nexport function filterParentPosition(arr) {\n  var levelObj = {};\n  arr.forEach(function (item) {\n    var posLen = item.split('-').length;\n    if (!levelObj[posLen]) {\n      levelObj[posLen] = [];\n    }\n    levelObj[posLen].push(item);\n  });\n  var levelArr = Object.keys(levelObj).sort();\n\n  var _loop = function _loop(i) {\n    if (levelArr[i + 1]) {\n      levelObj[levelArr[i]].forEach(function (ii) {\n        var _loop2 = function _loop2(j) {\n          levelObj[levelArr[j]].forEach(function (_i, index) {\n            if (isPositionPrefix(ii, _i)) {\n              levelObj[levelArr[j]][index] = null;\n            }\n          });\n          levelObj[levelArr[j]] = levelObj[levelArr[j]].filter(function (p) {\n            return p;\n          });\n        };\n\n        for (var j = i + 1; j < levelArr.length; j++) {\n          _loop2(j);\n        }\n      });\n    }\n  };\n\n  for (var i = 0; i < levelArr.length; i++) {\n    _loop(i);\n  }\n  var nArr = [];\n  levelArr.forEach(function (i) {\n    nArr = nArr.concat(levelObj[i]);\n  });\n  return nArr;\n}\n// console.log(filterParentPosition(\n// ['0-2', '0-3-3', '0-10', '0-10-0', '0-0-1', '0-0', '0-1-1', '0-1']\n// ));\n\nfunction stripTail(str) {\n  var arr = str.match(/(.+)(-[^-]+)$/);\n  var st = '';\n  if (arr && arr.length === 3) {\n    st = arr[1];\n  }\n  return st;\n}\nfunction splitPosition(pos) {\n  return pos.split('-');\n}\n\n// todo: do optimization.\nexport function handleCheckState(obj, checkedPositionArr, checkIt) {\n  // console.log(stripTail('0-101-000'));\n  // let s = Date.now();\n  var objKeys = Object.keys(obj);\n\n  objKeys.forEach(function (i, index) {\n    var iArr = splitPosition(i);\n    var saved = false;\n    checkedPositionArr.forEach(function (_pos) {\n      var _posArr = splitPosition(_pos);\n      if (iArr.length > _posArr.length && isInclude(_posArr, iArr)) {\n        obj[i].halfChecked = false;\n        obj[i].checked = checkIt;\n        objKeys[index] = null;\n      }\n      if (iArr[0] === _posArr[0] && iArr[1] === _posArr[1]) {\n        saved = true;\n      }\n    });\n    if (!saved) {\n      objKeys[index] = null;\n    }\n  });\n  objKeys = objKeys.filter(function (i) {\n    return i;\n  }); // filter non null;\n\n  var _loop3 = function _loop3(_pIndex) {\n    // loop to set ancestral nodes's `checked` or `halfChecked`\n    var loop = function loop(__pos) {\n      var _posLen = splitPosition(__pos).length;\n      if (_posLen <= 2) {\n        // e.g. '0-0', '0-1'\n        return;\n      }\n      var sibling = 0;\n      var siblingChecked = 0;\n      var parentPosition = stripTail(__pos);\n      objKeys.forEach(function (i /* , index*/) {\n        var iArr = splitPosition(i);\n        if (iArr.length === _posLen && isInclude(splitPosition(parentPosition), iArr)) {\n          sibling++;\n          if (obj[i].checked) {\n            siblingChecked++;\n            var _i = checkedPositionArr.indexOf(i);\n            if (_i > -1) {\n              checkedPositionArr.splice(_i, 1);\n              if (_i <= _pIndex) {\n                _pIndex--;\n              }\n            }\n          } else if (obj[i].halfChecked) {\n            siblingChecked += 0.5;\n          }\n          // objKeys[index] = null;\n        }\n      });\n      // objKeys = objKeys.filter(i => i); // filter non null;\n      var parent = obj[parentPosition];\n      // not check, checked, halfChecked\n      if (siblingChecked === 0) {\n        parent.checked = false;\n        parent.halfChecked = false;\n      } else if (siblingChecked === sibling) {\n        parent.checked = true;\n        parent.halfChecked = false;\n      } else {\n        parent.halfChecked = true;\n        parent.checked = false;\n      }\n      loop(parentPosition);\n    };\n    loop(checkedPositionArr[_pIndex], _pIndex);\n    pIndex = _pIndex;\n  };\n\n  for (var pIndex = 0; pIndex < checkedPositionArr.length; pIndex++) {\n    _loop3(pIndex);\n  }\n  // console.log(Date.now()-s, objKeys.length, checkIt);\n}\n\nfunction getCheck(treeNodesStates, checkedPositions) {\n  var halfCheckedKeys = [];\n  var checkedKeys = [];\n  var checkedNodes = [];\n  Object.keys(treeNodesStates).forEach(function (item) {\n    var itemObj = treeNodesStates[item];\n    if (itemObj.checked) {\n      checkedKeys.push(itemObj.key);\n      // checkedNodes.push(getValuePropValue(itemObj.node));\n      checkedNodes.push(_extends({}, itemObj, { pos: item }));\n    } else if (itemObj.halfChecked) {\n      halfCheckedKeys.push(itemObj.key);\n    }\n  });\n  return {\n    halfCheckedKeys: halfCheckedKeys, checkedKeys: checkedKeys, checkedNodes: checkedNodes, treeNodesStates: treeNodesStates, checkedPositions: checkedPositions\n  };\n}\n\nexport function getTreeNodesStates(children, values) {\n  var checkedPositions = [];\n  var treeNodesStates = {};\n  loopAllChildren(children, function (item, index, pos, keyOrPos, siblingPosition) {\n    treeNodesStates[pos] = {\n      node: item,\n      key: keyOrPos,\n      checked: false,\n      halfChecked: false,\n      siblingPosition: siblingPosition\n    };\n    if (values.indexOf(getValuePropValue(item)) !== -1) {\n      treeNodesStates[pos].checked = true;\n      checkedPositions.push(pos);\n    }\n  });\n\n  handleCheckState(treeNodesStates, filterParentPosition(checkedPositions.sort()), true);\n\n  return getCheck(treeNodesStates, checkedPositions);\n}\n\n// can add extra prop to every node.\nexport function recursiveCloneChildren(children) {\n  var cb = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function (ch) {\n    return ch;\n  };\n\n  // return React.Children.map(children, child => {\n  return Array.from(children).map(function (child) {\n    var newChild = cb(child);\n    if (newChild && newChild.props && newChild.props.children) {\n      return React.cloneElement(newChild, {}, recursiveCloneChildren(newChild.props.children, cb));\n    }\n    return newChild;\n  });\n}\n// const newChildren = recursiveCloneChildren(children, child => {\n//   const extraProps = {};\n//   if (child && child.type && child.type.xxx) {\n//     extraProps._prop = true;\n//     return React.cloneElement(child, extraProps);\n//   }\n//   return child;\n// });\n\n\nfunction recursiveGen(children) {\n  var level = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n  return React.Children.map(children, function (child, index) {\n    var pos = level + '-' + index;\n\n    var _child$props = child.props,\n        title = _child$props.title,\n        label = _child$props.label,\n        value = _child$props.value,\n        subChildren = _child$props.children,\n        rest = _objectWithoutProperties(_child$props, ['title', 'label', 'value', 'children']);\n\n    var o = _extends({}, rest, {\n      title: title,\n      label: label || title,\n      value: value,\n      key: child.key,\n      _pos: pos\n    });\n    if (subChildren) {\n      o.children = recursiveGen(subChildren, pos);\n    }\n    return o;\n  });\n}\n\nfunction recursive(children, cb) {\n  children.forEach(function (item) {\n    cb(item);\n    if (item.children) {\n      recursive(item.children, cb);\n    }\n  });\n}\n\n// Get the tree's checkedNodes (todo: can merge to the `handleCheckState` function)\n// If one node checked, it's all children nodes checked.\n// If sibling nodes all checked, the parent checked.\nexport function filterAllCheckedData(vs, treeNodes) {\n  var vals = [].concat(vs);\n  if (!vals.length) {\n    return vals;\n  }\n\n  var data = recursiveGen(treeNodes);\n  var checkedNodesPositions = [];\n\n  function checkChildren(children) {\n    children.forEach(function (item) {\n      if (item.__checked) {\n        return;\n      }\n      var ci = vals.indexOf(item.value);\n      var childs = item.children;\n      if (ci > -1) {\n        item.__checked = true;\n        checkedNodesPositions.push({ node: item, pos: item._pos });\n        vals.splice(ci, 1);\n        if (childs) {\n          recursive(childs, function (child) {\n            child.__checked = true;\n            checkedNodesPositions.push({ node: child, pos: child._pos });\n          });\n        }\n      } else {\n        if (childs) {\n          checkChildren(childs);\n        }\n      }\n    });\n  }\n\n  function checkParent(children) {\n    var parent = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : { root: true };\n\n    var siblingChecked = 0;\n    children.forEach(function (item) {\n      var childs = item.children;\n      if (childs && !item.__checked && !item.__halfChecked) {\n        var p = checkParent(childs, item);\n        if (p.__checked) {\n          siblingChecked++;\n        } else if (p.__halfChecked) {\n          siblingChecked += 0.5;\n        }\n      } else if (item.__checked) {\n        siblingChecked++;\n      } else if (item.__halfChecked) {\n        siblingChecked += 0.5;\n      }\n    });\n    var len = children.length;\n    if (siblingChecked === len) {\n      parent.__checked = true;\n      checkedNodesPositions.push({ node: parent, pos: parent._pos });\n    } else if (siblingChecked < len && siblingChecked > 0) {\n      parent.__halfChecked = true;\n    }\n    if (parent.root) {\n      return children;\n    }\n    return parent;\n  }\n  checkChildren(data);\n  checkParent(data);\n\n  checkedNodesPositions.forEach(function (i, index) {\n    // clear private metadata\n    delete checkedNodesPositions[index].node.__checked;\n    delete checkedNodesPositions[index].node._pos;\n    // create the same structure of `onCheck`'s return.\n    checkedNodesPositions[index].node.props = {\n      title: checkedNodesPositions[index].node.title,\n      label: checkedNodesPositions[index].node.label || checkedNodesPositions[index].node.title,\n      value: checkedNodesPositions[index].node.value\n    };\n    if (checkedNodesPositions[index].node.children) {\n      checkedNodesPositions[index].node.props.children = checkedNodesPositions[index].node.children;\n    }\n    delete checkedNodesPositions[index].node.title;\n    delete checkedNodesPositions[index].node.label;\n    delete checkedNodesPositions[index].node.value;\n    delete checkedNodesPositions[index].node.children;\n  });\n  return checkedNodesPositions;\n}\n\nexport function processSimpleTreeData(treeData, format) {\n  function unflatten2(array) {\n    var _ref;\n\n    var parent = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : (_ref = {}, _ref[format.id] = format.rootPId, _ref);\n\n    var children = [];\n    for (var i = 0; i < array.length; i++) {\n      array[i] = _extends({}, array[i]); // copy, can not corrupts original data\n      if (array[i][format.pId] === parent[format.id]) {\n        array[i].key = array[i][format.id];\n        children.push(array[i]);\n        array.splice(i--, 1);\n      }\n    }\n    if (children.length) {\n      parent.children = children;\n      children.forEach(function (child) {\n        return unflatten2(array, child);\n      });\n    }\n    if (parent[format.id] === format.rootPId) {\n      return children;\n    }\n  }\n  return unflatten2(treeData);\n}\n\nexport function saveRef(instance, name) {\n  if (!instance.saveRefs) {\n    instance.saveRefs = {};\n  }\n  if (!instance.saveRefs[name]) {\n    instance.saveRefs[name] = function (node) {\n      instance[name] = node;\n    };\n  }\n  return instance.saveRefs[name];\n}"]},"metadata":{},"sourceType":"module"}