{"ast":null,"code":"import _objectDestructuringEmpty from 'babel-runtime/helpers/objectDestructuringEmpty';\nimport _extends from 'babel-runtime/helpers/extends';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport warning from 'warning';\nimport { traverseTreeNodes, getStrictlyValue, getFullKeyList, getPosition, getDragNodesKeys, calcExpandedKeys, calcSelectedKeys, calcCheckedKeys, calcDropPosition, arrAdd, arrDel, posToArr } from './util';\n/**\n * Thought we still use `cloneElement` to pass `key`,\n * other props can pass with context for future refactor.\n */\n\nexport var contextTypes = {\n  rcTree: PropTypes.shape({\n    root: PropTypes.object,\n    prefixCls: PropTypes.string,\n    selectable: PropTypes.bool,\n    showIcon: PropTypes.bool,\n    icon: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n    draggable: PropTypes.bool,\n    checkable: PropTypes.oneOfType([PropTypes.bool, PropTypes.node]),\n    checkStrictly: PropTypes.bool,\n    disabled: PropTypes.bool,\n    openTransitionName: PropTypes.string,\n    openAnimation: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n    loadData: PropTypes.func,\n    filterTreeNode: PropTypes.func,\n    renderTreeNode: PropTypes.func,\n    isKeyChecked: PropTypes.func,\n    onNodeExpand: PropTypes.func,\n    onNodeSelect: PropTypes.func,\n    onNodeMouseEnter: PropTypes.func,\n    onNodeMouseLeave: PropTypes.func,\n    onNodeContextMenu: PropTypes.func,\n    onNodeDragStart: PropTypes.func,\n    onNodeDragEnter: PropTypes.func,\n    onNodeDragOver: PropTypes.func,\n    onNodeDragLeave: PropTypes.func,\n    onNodeDragEnd: PropTypes.func,\n    onNodeDrop: PropTypes.func,\n    onBatchNodeCheck: PropTypes.func,\n    onCheckConductFinished: PropTypes.func\n  })\n};\n\nvar Tree = function (_React$Component) {\n  _inherits(Tree, _React$Component);\n\n  function Tree(props) {\n    _classCallCheck(this, Tree);\n\n    var _this = _possibleConstructorReturn(this, _React$Component.call(this, props));\n\n    _initialiseProps.call(_this);\n\n    var defaultExpandAll = props.defaultExpandAll,\n        defaultExpandParent = props.defaultExpandParent,\n        defaultExpandedKeys = props.defaultExpandedKeys,\n        defaultCheckedKeys = props.defaultCheckedKeys,\n        defaultSelectedKeys = props.defaultSelectedKeys,\n        expandedKeys = props.expandedKeys; // Sync state with props\n\n    var _ref = calcCheckedKeys(defaultCheckedKeys, props) || {},\n        _ref$checkedKeys = _ref.checkedKeys,\n        checkedKeys = _ref$checkedKeys === undefined ? [] : _ref$checkedKeys,\n        _ref$halfCheckedKeys = _ref.halfCheckedKeys,\n        halfCheckedKeys = _ref$halfCheckedKeys === undefined ? [] : _ref$halfCheckedKeys;\n\n    var state = {\n      selectedKeys: calcSelectedKeys(defaultSelectedKeys, props),\n      checkedKeys: checkedKeys,\n      halfCheckedKeys: halfCheckedKeys\n    };\n\n    if (defaultExpandAll) {\n      state.expandedKeys = getFullKeyList(props.children);\n    } else if (defaultExpandParent) {\n      state.expandedKeys = calcExpandedKeys(expandedKeys || defaultExpandedKeys, props);\n    } else {\n      state.expandedKeys = defaultExpandedKeys;\n    }\n\n    _this.state = _extends({}, state, _this.getSyncProps(props) || {}); // Cache for check status to optimize\n\n    _this.checkedBatch = null;\n    return _this;\n  }\n\n  Tree.prototype.getChildContext = function getChildContext() {\n    var _props = this.props,\n        prefixCls = _props.prefixCls,\n        selectable = _props.selectable,\n        showIcon = _props.showIcon,\n        icon = _props.icon,\n        draggable = _props.draggable,\n        checkable = _props.checkable,\n        checkStrictly = _props.checkStrictly,\n        disabled = _props.disabled,\n        loadData = _props.loadData,\n        filterTreeNode = _props.filterTreeNode,\n        openTransitionName = _props.openTransitionName,\n        openAnimation = _props.openAnimation;\n    return {\n      rcTree: {\n        // root: this,\n        prefixCls: prefixCls,\n        selectable: selectable,\n        showIcon: showIcon,\n        icon: icon,\n        draggable: draggable,\n        checkable: checkable,\n        checkStrictly: checkStrictly,\n        disabled: disabled,\n        openTransitionName: openTransitionName,\n        openAnimation: openAnimation,\n        loadData: loadData,\n        filterTreeNode: filterTreeNode,\n        renderTreeNode: this.renderTreeNode,\n        isKeyChecked: this.isKeyChecked,\n        onNodeExpand: this.onNodeExpand,\n        onNodeSelect: this.onNodeSelect,\n        onNodeMouseEnter: this.onNodeMouseEnter,\n        onNodeMouseLeave: this.onNodeMouseLeave,\n        onNodeContextMenu: this.onNodeContextMenu,\n        onNodeDragStart: this.onNodeDragStart,\n        onNodeDragEnter: this.onNodeDragEnter,\n        onNodeDragOver: this.onNodeDragOver,\n        onNodeDragLeave: this.onNodeDragLeave,\n        onNodeDragEnd: this.onNodeDragEnd,\n        onNodeDrop: this.onNodeDrop,\n        onBatchNodeCheck: this.onBatchNodeCheck,\n        onCheckConductFinished: this.onCheckConductFinished\n      }\n    };\n  };\n\n  Tree.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {\n    var _this2 = this; // React 16 will not trigger update if new state is null\n\n\n    this.setState(function (prevState) {\n      return _this2.getSyncProps(nextProps, _this2.props, prevState);\n    });\n  };\n  /**\n   * [Legacy] Select handler is less small than node,\n   * so that this will trigger when drag enter node or select handler.\n   * This is a little tricky if customize css without padding.\n   * Better for use mouse move event to refresh drag state.\n   * But let's just keep it to avoid event trigger logic change.\n   */\n\n  /**\n   * This will cache node check status to optimize update process.\n   * When Tree get trigger `onCheckConductFinished` will flush all the update.\n   */\n\n  /**\n   * When top `onCheckConductFinished` called, will execute all batch update.\n   * And trigger `onCheck` event.\n   */\n\n  /**\n   * Sync state with props if needed\n   */\n\n  /**\n   * Only update the value which is not in props\n   */\n\n  /**\n   * [Legacy] Original logic use `key` as tracking clue.\n   * We have to use `cloneElement` to pass `key`.\n   */\n\n\n  Tree.prototype.render = function render() {\n    var _classNames;\n\n    var _props2 = this.props,\n        prefixCls = _props2.prefixCls,\n        className = _props2.className,\n        focusable = _props2.focusable,\n        showLine = _props2.showLine,\n        children = _props2.children;\n    var domProps = {}; // [Legacy] Commit: 0117f0c9db0e2956e92cb208f51a42387dfcb3d1\n\n    if (focusable) {\n      domProps.tabIndex = '0';\n      domProps.onKeyDown = this.onKeyDown;\n    }\n\n    return React.createElement('ul', _extends({}, domProps, {\n      className: classNames(prefixCls, className, (_classNames = {}, _classNames[prefixCls + '-show-line'] = showLine, _classNames)),\n      role: 'tree-node',\n      unselectable: 'on'\n    }), React.Children.map(children, this.renderTreeNode, this));\n  };\n\n  return Tree;\n}(React.Component);\n\nTree.propTypes = {\n  prefixCls: PropTypes.string,\n  className: PropTypes.string,\n  children: PropTypes.any,\n  showLine: PropTypes.bool,\n  showIcon: PropTypes.bool,\n  icon: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n  focusable: PropTypes.bool,\n  selectable: PropTypes.bool,\n  disabled: PropTypes.bool,\n  multiple: PropTypes.bool,\n  checkable: PropTypes.oneOfType([PropTypes.bool, PropTypes.node]),\n  checkStrictly: PropTypes.bool,\n  draggable: PropTypes.bool,\n  defaultExpandParent: PropTypes.bool,\n  autoExpandParent: PropTypes.bool,\n  defaultExpandAll: PropTypes.bool,\n  defaultExpandedKeys: PropTypes.arrayOf(PropTypes.string),\n  expandedKeys: PropTypes.arrayOf(PropTypes.string),\n  defaultCheckedKeys: PropTypes.arrayOf(PropTypes.string),\n  checkedKeys: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.string), PropTypes.object]),\n  defaultSelectedKeys: PropTypes.arrayOf(PropTypes.string),\n  selectedKeys: PropTypes.arrayOf(PropTypes.string),\n  onExpand: PropTypes.func,\n  onCheck: PropTypes.func,\n  onSelect: PropTypes.func,\n  loadData: PropTypes.func,\n  onMouseEnter: PropTypes.func,\n  onMouseLeave: PropTypes.func,\n  onRightClick: PropTypes.func,\n  onDragStart: PropTypes.func,\n  onDragEnter: PropTypes.func,\n  onDragOver: PropTypes.func,\n  onDragLeave: PropTypes.func,\n  onDragEnd: PropTypes.func,\n  onDrop: PropTypes.func,\n  filterTreeNode: PropTypes.func,\n  openTransitionName: PropTypes.string,\n  openAnimation: PropTypes.oneOfType([PropTypes.string, PropTypes.object])\n};\nTree.childContextTypes = contextTypes;\nTree.defaultProps = {\n  prefixCls: 'rc-tree',\n  showLine: false,\n  showIcon: true,\n  selectable: true,\n  multiple: false,\n  checkable: false,\n  disabled: false,\n  checkStrictly: false,\n  draggable: false,\n  defaultExpandParent: true,\n  autoExpandParent: false,\n  defaultExpandAll: false,\n  defaultExpandedKeys: [],\n  defaultCheckedKeys: [],\n  defaultSelectedKeys: [],\n  onExpand: null,\n  onCheck: null,\n  onSelect: null,\n  onDragStart: null,\n  onDragEnter: null,\n  onDragOver: null,\n  onDragLeave: null,\n  onDrop: null,\n  onDragEnd: null,\n  onMouseEnter: null,\n  onMouseLeave: null\n};\n\nvar _initialiseProps = function _initialiseProps() {\n  var _this3 = this;\n\n  this.onNodeDragStart = function (event, node) {\n    var expandedKeys = _this3.state.expandedKeys;\n    var onDragStart = _this3.props.onDragStart;\n    var _node$props = node.props,\n        eventKey = _node$props.eventKey,\n        children = _node$props.children;\n    _this3.dragNode = node;\n\n    _this3.setState({\n      dragNodesKeys: getDragNodesKeys(children, node),\n      expandedKeys: arrDel(expandedKeys, eventKey)\n    });\n\n    if (onDragStart) {\n      onDragStart({\n        event: event,\n        node: node\n      });\n    }\n  };\n\n  this.onNodeDragEnter = function (event, node) {\n    var expandedKeys = _this3.state.expandedKeys;\n    var onDragEnter = _this3.props.onDragEnter;\n    var _node$props2 = node.props,\n        pos = _node$props2.pos,\n        eventKey = _node$props2.eventKey;\n    var dropPosition = calcDropPosition(event, node); // Skip if drag node is self\n\n    if (_this3.dragNode.props.eventKey === eventKey && dropPosition === 0) {\n      _this3.setState({\n        dragOverNodeKey: '',\n        dropPosition: null\n      });\n\n      return;\n    } // Ref: https://github.com/react-component/tree/issues/132\n    // Add timeout to let onDragLevel fire before onDragEnter,\n    // so that we can clean drag props for onDragLeave node.\n    // Macro task for this:\n    // https://html.spec.whatwg.org/multipage/webappapis.html#clean-up-after-running-script\n\n\n    setTimeout(function () {\n      // Update drag over node\n      _this3.setState({\n        dragOverNodeKey: eventKey,\n        dropPosition: dropPosition\n      }); // Side effect for delay drag\n\n\n      if (!_this3.delayedDragEnterLogic) {\n        _this3.delayedDragEnterLogic = {};\n      }\n\n      Object.keys(_this3.delayedDragEnterLogic).forEach(function (key) {\n        clearTimeout(_this3.delayedDragEnterLogic[key]);\n      });\n      _this3.delayedDragEnterLogic[pos] = setTimeout(function () {\n        var newExpandedKeys = arrAdd(expandedKeys, eventKey);\n\n        _this3.setState({\n          expandedKeys: newExpandedKeys\n        });\n\n        if (onDragEnter) {\n          onDragEnter({\n            event: event,\n            node: node,\n            expandedKeys: newExpandedKeys\n          });\n        }\n      }, 400);\n    }, 0);\n  };\n\n  this.onNodeDragOver = function (event, node) {\n    var onDragOver = _this3.props.onDragOver;\n    var eventKey = node.props.eventKey; // Update drag position\n\n    if (_this3.dragNode && eventKey === _this3.state.dragOverNodeKey) {\n      var dropPosition = calcDropPosition(event, node);\n      if (dropPosition === _this3.state.dropPosition) return;\n\n      _this3.setState({\n        dropPosition: dropPosition\n      });\n    }\n\n    if (onDragOver) {\n      onDragOver({\n        event: event,\n        node: node\n      });\n    }\n  };\n\n  this.onNodeDragLeave = function (event, node) {\n    var onDragLeave = _this3.props.onDragLeave;\n\n    _this3.setState({\n      dragOverNodeKey: ''\n    });\n\n    if (onDragLeave) {\n      onDragLeave({\n        event: event,\n        node: node\n      });\n    }\n  };\n\n  this.onNodeDragEnd = function (event, node) {\n    var onDragEnd = _this3.props.onDragEnd;\n\n    _this3.setState({\n      dragOverNodeKey: ''\n    });\n\n    if (onDragEnd) {\n      onDragEnd({\n        event: event,\n        node: node\n      });\n    }\n  };\n\n  this.onNodeDrop = function (event, node) {\n    var _state = _this3.state,\n        dragNodesKeys = _state.dragNodesKeys,\n        dropPosition = _state.dropPosition;\n    var onDrop = _this3.props.onDrop;\n    var _node$props3 = node.props,\n        eventKey = _node$props3.eventKey,\n        pos = _node$props3.pos;\n\n    _this3.setState({\n      dragOverNodeKey: '',\n      dropNodeKey: eventKey\n    });\n\n    if (dragNodesKeys.indexOf(eventKey) !== -1) {\n      warning(false, 'Can not drop to dragNode(include it\\'s children node)');\n      return;\n    }\n\n    var posArr = posToArr(pos);\n    var dropResult = {\n      event: event,\n      node: node,\n      dragNode: _this3.dragNode,\n      dragNodesKeys: dragNodesKeys.slice(),\n      dropPosition: dropPosition + Number(posArr[posArr.length - 1])\n    };\n\n    if (dropPosition !== 0) {\n      dropResult.dropToGap = true;\n    }\n\n    if (onDrop) {\n      onDrop(dropResult);\n    }\n  };\n\n  this.onNodeSelect = function (e, treeNode) {\n    var selectedKeys = _this3.state.selectedKeys;\n    var _props3 = _this3.props,\n        onSelect = _props3.onSelect,\n        multiple = _props3.multiple,\n        children = _props3.children;\n    var _treeNode$props = treeNode.props,\n        selected = _treeNode$props.selected,\n        eventKey = _treeNode$props.eventKey;\n    var targetSelected = !selected; // Update selected keys\n\n    if (!targetSelected) {\n      selectedKeys = arrDel(selectedKeys, eventKey);\n    } else if (!multiple) {\n      selectedKeys = [eventKey];\n    } else {\n      selectedKeys = arrAdd(selectedKeys, eventKey);\n    } // [Legacy] Not found related usage in doc or upper libs\n    // [Legacy] TODO: add optimize prop to skip node process\n\n\n    var selectedNodes = [];\n\n    if (selectedKeys.length) {\n      traverseTreeNodes(children, function (_ref2) {\n        var node = _ref2.node,\n            key = _ref2.key;\n\n        if (selectedKeys.indexOf(key) !== -1) {\n          selectedNodes.push(node);\n        }\n      });\n    }\n\n    _this3.setUncontrolledState({\n      selectedKeys: selectedKeys\n    });\n\n    if (onSelect) {\n      var eventObj = {\n        event: 'select',\n        selected: targetSelected,\n        node: treeNode,\n        selectedNodes: selectedNodes\n      };\n      onSelect(selectedKeys, eventObj);\n    }\n  };\n\n  this.onBatchNodeCheck = function (key, checked, halfChecked, startNode) {\n    if (startNode) {\n      _this3.checkedBatch = {\n        treeNode: startNode,\n        checked: checked,\n        list: []\n      };\n    } // This code should never called\n\n\n    if (!_this3.checkedBatch) {\n      _this3.checkedBatch = {\n        list: []\n      };\n      warning(false, 'Checked batch not init. This should be a bug. Please fire a issue.');\n    }\n\n    _this3.checkedBatch.list.push({\n      key: key,\n      checked: checked,\n      halfChecked: halfChecked\n    });\n  };\n\n  this.onCheckConductFinished = function () {\n    var _state2 = _this3.state,\n        checkedKeys = _state2.checkedKeys,\n        halfCheckedKeys = _state2.halfCheckedKeys;\n    var _props4 = _this3.props,\n        onCheck = _props4.onCheck,\n        checkStrictly = _props4.checkStrictly,\n        children = _props4.children; // Use map to optimize update speed\n\n    var checkedKeySet = {};\n    var halfCheckedKeySet = {};\n    checkedKeys.forEach(function (key) {\n      checkedKeySet[key] = true;\n    });\n    halfCheckedKeys.forEach(function (key) {\n      halfCheckedKeySet[key] = true;\n    }); // Batch process\n\n    _this3.checkedBatch.list.forEach(function (_ref3) {\n      var key = _ref3.key,\n          checked = _ref3.checked,\n          halfChecked = _ref3.halfChecked;\n      checkedKeySet[key] = checked;\n      halfCheckedKeySet[key] = halfChecked;\n    });\n\n    var newCheckedKeys = Object.keys(checkedKeySet).filter(function (key) {\n      return checkedKeySet[key];\n    });\n    var newHalfCheckedKeys = Object.keys(halfCheckedKeySet).filter(function (key) {\n      return halfCheckedKeySet[key];\n    }); // Trigger onChecked\n\n    var selectedObj = void 0;\n    var eventObj = {\n      event: 'check',\n      node: _this3.checkedBatch.treeNode,\n      checked: _this3.checkedBatch.checked\n    };\n\n    if (checkStrictly) {\n      selectedObj = getStrictlyValue(newCheckedKeys, newHalfCheckedKeys); // [Legacy] TODO: add optimize prop to skip node process\n\n      eventObj.checkedNodes = [];\n      traverseTreeNodes(children, function (_ref4) {\n        var node = _ref4.node,\n            key = _ref4.key;\n\n        if (checkedKeySet[key]) {\n          eventObj.checkedNodes.push(node);\n        }\n      });\n\n      _this3.setUncontrolledState({\n        checkedKeys: newCheckedKeys\n      });\n    } else {\n      selectedObj = newCheckedKeys; // [Legacy] TODO: add optimize prop to skip node process\n\n      eventObj.checkedNodes = [];\n      eventObj.checkedNodesPositions = []; // [Legacy] TODO: not in API\n\n      eventObj.halfCheckedKeys = newHalfCheckedKeys; // [Legacy] TODO: not in API\n\n      traverseTreeNodes(children, function (_ref5) {\n        var node = _ref5.node,\n            pos = _ref5.pos,\n            key = _ref5.key;\n\n        if (checkedKeySet[key]) {\n          eventObj.checkedNodes.push(node);\n          eventObj.checkedNodesPositions.push({\n            node: node,\n            pos: pos\n          });\n        }\n      });\n\n      _this3.setUncontrolledState({\n        checkedKeys: newCheckedKeys,\n        halfCheckedKeys: newHalfCheckedKeys\n      });\n    }\n\n    if (onCheck) {\n      onCheck(selectedObj, eventObj);\n    } // Clean up\n\n\n    _this3.checkedBatch = null;\n  };\n\n  this.onNodeExpand = function (e, treeNode) {\n    var expandedKeys = _this3.state.expandedKeys;\n    var _props5 = _this3.props,\n        onExpand = _props5.onExpand,\n        loadData = _props5.loadData;\n    var _treeNode$props2 = treeNode.props,\n        eventKey = _treeNode$props2.eventKey,\n        expanded = _treeNode$props2.expanded; // Update selected keys\n\n    var index = expandedKeys.indexOf(eventKey);\n    var targetExpanded = !expanded;\n    warning(expanded && index !== -1 || !expanded && index === -1, 'Expand state not sync with index check');\n\n    if (targetExpanded) {\n      expandedKeys = arrAdd(expandedKeys, eventKey);\n    } else {\n      expandedKeys = arrDel(expandedKeys, eventKey);\n    }\n\n    _this3.setUncontrolledState({\n      expandedKeys: expandedKeys\n    });\n\n    if (onExpand) {\n      onExpand(expandedKeys, {\n        node: treeNode,\n        expanded: targetExpanded\n      });\n    } // Async Load data\n\n\n    if (targetExpanded && loadData) {\n      return loadData(treeNode).then(function () {\n        // [Legacy] Refresh logic\n        _this3.setUncontrolledState({\n          expandedKeys: expandedKeys\n        });\n      });\n    }\n\n    return null;\n  };\n\n  this.onNodeMouseEnter = function (event, node) {\n    var onMouseEnter = _this3.props.onMouseEnter;\n\n    if (onMouseEnter) {\n      onMouseEnter({\n        event: event,\n        node: node\n      });\n    }\n  };\n\n  this.onNodeMouseLeave = function (event, node) {\n    var onMouseLeave = _this3.props.onMouseLeave;\n\n    if (onMouseLeave) {\n      onMouseLeave({\n        event: event,\n        node: node\n      });\n    }\n  };\n\n  this.onNodeContextMenu = function (event, node) {\n    var onRightClick = _this3.props.onRightClick;\n\n    if (onRightClick) {\n      event.preventDefault();\n      onRightClick({\n        event: event,\n        node: node\n      });\n    }\n  };\n\n  this.getSyncProps = function () {\n    var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var prevProps = arguments[1];\n    var preState = arguments[2];\n    var needSync = false;\n    var oriState = preState || _this3.state;\n    var newState = {};\n    var myPrevProps = prevProps || {};\n\n    function checkSync(name) {\n      if (props[name] !== myPrevProps[name]) {\n        needSync = true;\n        return true;\n      }\n\n      return false;\n    } // Children change will affect check box status.\n    // And no need to check when prev props not provided\n\n\n    if (prevProps && checkSync('children')) {\n      var newCheckedKeys = calcCheckedKeys(props.checkedKeys || oriState.checkedKeys, props);\n\n      var _ref6 = newCheckedKeys || {},\n          _ref6$checkedKeys = _ref6.checkedKeys,\n          checkedKeys = _ref6$checkedKeys === undefined ? [] : _ref6$checkedKeys,\n          _ref6$halfCheckedKeys = _ref6.halfCheckedKeys,\n          halfCheckedKeys = _ref6$halfCheckedKeys === undefined ? [] : _ref6$halfCheckedKeys;\n\n      newState.checkedKeys = checkedKeys;\n      newState.halfCheckedKeys = halfCheckedKeys;\n    } // Re-calculate when autoExpandParent or expandedKeys changed\n\n\n    if (prevProps && (checkSync('autoExpandParent') || checkSync('expandedKeys'))) {\n      newState.expandedKeys = props.autoExpandParent ? calcExpandedKeys(props.expandedKeys, props) : props.expandedKeys;\n    }\n\n    if (checkSync('selectedKeys')) {\n      newState.selectedKeys = calcSelectedKeys(props.selectedKeys, props);\n    }\n\n    if (checkSync('checkedKeys')) {\n      var _ref7 = calcCheckedKeys(props.checkedKeys, props) || {},\n          _ref7$checkedKeys = _ref7.checkedKeys,\n          _checkedKeys = _ref7$checkedKeys === undefined ? [] : _ref7$checkedKeys,\n          _ref7$halfCheckedKeys = _ref7.halfCheckedKeys,\n          _halfCheckedKeys = _ref7$halfCheckedKeys === undefined ? [] : _ref7$halfCheckedKeys;\n\n      newState.checkedKeys = _checkedKeys;\n      newState.halfCheckedKeys = _halfCheckedKeys;\n    }\n\n    return needSync ? newState : null;\n  };\n\n  this.setUncontrolledState = function (state) {\n    var needSync = false;\n    var newState = {};\n    Object.keys(state).forEach(function (name) {\n      if (name in _this3.props) return;\n      needSync = true;\n      newState[name] = state[name];\n    });\n\n    if (needSync) {\n      _this3.setState(newState);\n    }\n  };\n\n  this.isKeyChecked = function (key) {\n    var _state$checkedKeys = _this3.state.checkedKeys,\n        checkedKeys = _state$checkedKeys === undefined ? [] : _state$checkedKeys;\n    return checkedKeys.indexOf(key) !== -1;\n  };\n\n  this.renderTreeNode = function (child, index) {\n    var level = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n    var _state3 = _this3.state,\n        _state3$expandedKeys = _state3.expandedKeys,\n        expandedKeys = _state3$expandedKeys === undefined ? [] : _state3$expandedKeys,\n        _state3$selectedKeys = _state3.selectedKeys,\n        selectedKeys = _state3$selectedKeys === undefined ? [] : _state3$selectedKeys,\n        _state3$halfCheckedKe = _state3.halfCheckedKeys,\n        halfCheckedKeys = _state3$halfCheckedKe === undefined ? [] : _state3$halfCheckedKe,\n        dragOverNodeKey = _state3.dragOverNodeKey,\n        dropPosition = _state3.dropPosition;\n\n    _objectDestructuringEmpty(_this3.props);\n\n    var pos = getPosition(level, index);\n    var key = child.key || pos;\n    return React.cloneElement(child, {\n      eventKey: key,\n      expanded: expandedKeys.indexOf(key) !== -1,\n      selected: selectedKeys.indexOf(key) !== -1,\n      checked: _this3.isKeyChecked(key),\n      halfChecked: halfCheckedKeys.indexOf(key) !== -1,\n      pos: pos,\n      // [Legacy] Drag props\n      dragOver: dragOverNodeKey === key && dropPosition === 0,\n      dragOverGapTop: dragOverNodeKey === key && dropPosition === -1,\n      dragOverGapBottom: dragOverNodeKey === key && dropPosition === 1\n    });\n  };\n};\n\nexport default Tree;","map":{"version":3,"sources":["/Users/administrator/Desktop/DrChain/drchain_frontend/drchain/node_modules/rc-tree/es/Tree.js"],"names":["_objectDestructuringEmpty","_extends","_classCallCheck","_possibleConstructorReturn","_inherits","React","PropTypes","classNames","warning","traverseTreeNodes","getStrictlyValue","getFullKeyList","getPosition","getDragNodesKeys","calcExpandedKeys","calcSelectedKeys","calcCheckedKeys","calcDropPosition","arrAdd","arrDel","posToArr","contextTypes","rcTree","shape","root","object","prefixCls","string","selectable","bool","showIcon","icon","oneOfType","node","func","draggable","checkable","checkStrictly","disabled","openTransitionName","openAnimation","loadData","filterTreeNode","renderTreeNode","isKeyChecked","onNodeExpand","onNodeSelect","onNodeMouseEnter","onNodeMouseLeave","onNodeContextMenu","onNodeDragStart","onNodeDragEnter","onNodeDragOver","onNodeDragLeave","onNodeDragEnd","onNodeDrop","onBatchNodeCheck","onCheckConductFinished","Tree","_React$Component","props","_this","call","_initialiseProps","defaultExpandAll","defaultExpandParent","defaultExpandedKeys","defaultCheckedKeys","defaultSelectedKeys","expandedKeys","_ref","_ref$checkedKeys","checkedKeys","undefined","_ref$halfCheckedKeys","halfCheckedKeys","state","selectedKeys","children","getSyncProps","checkedBatch","prototype","getChildContext","_props","componentWillReceiveProps","nextProps","_this2","setState","prevState","render","_classNames","_props2","className","focusable","showLine","domProps","tabIndex","onKeyDown","createElement","role","unselectable","Children","map","Component","propTypes","any","multiple","autoExpandParent","arrayOf","onExpand","onCheck","onSelect","onMouseEnter","onMouseLeave","onRightClick","onDragStart","onDragEnter","onDragOver","onDragLeave","onDragEnd","onDrop","childContextTypes","defaultProps","_this3","event","_node$props","eventKey","dragNode","dragNodesKeys","_node$props2","pos","dropPosition","dragOverNodeKey","setTimeout","delayedDragEnterLogic","Object","keys","forEach","key","clearTimeout","newExpandedKeys","_state","_node$props3","dropNodeKey","indexOf","posArr","dropResult","slice","Number","length","dropToGap","e","treeNode","_props3","_treeNode$props","selected","targetSelected","selectedNodes","_ref2","push","setUncontrolledState","eventObj","checked","halfChecked","startNode","list","_state2","_props4","checkedKeySet","halfCheckedKeySet","_ref3","newCheckedKeys","filter","newHalfCheckedKeys","selectedObj","checkedNodes","_ref4","checkedNodesPositions","_ref5","_props5","_treeNode$props2","expanded","index","targetExpanded","then","preventDefault","arguments","prevProps","preState","needSync","oriState","newState","myPrevProps","checkSync","name","_ref6","_ref6$checkedKeys","_ref6$halfCheckedKeys","_ref7","_ref7$checkedKeys","_checkedKeys","_ref7$halfCheckedKeys","_halfCheckedKeys","_state$checkedKeys","child","level","_state3","_state3$expandedKeys","_state3$selectedKeys","_state3$halfCheckedKe","cloneElement","dragOver","dragOverGapTop","dragOverGapBottom"],"mappings":"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","sourcesContent":["import _objectDestructuringEmpty from 'babel-runtime/helpers/objectDestructuringEmpty';\nimport _extends from 'babel-runtime/helpers/extends';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport warning from 'warning';\nimport { traverseTreeNodes, getStrictlyValue, getFullKeyList, getPosition, getDragNodesKeys, calcExpandedKeys, calcSelectedKeys, calcCheckedKeys, calcDropPosition, arrAdd, arrDel, posToArr } from './util';\n\n/**\n * Thought we still use `cloneElement` to pass `key`,\n * other props can pass with context for future refactor.\n */\nexport var contextTypes = {\n  rcTree: PropTypes.shape({\n    root: PropTypes.object,\n\n    prefixCls: PropTypes.string,\n    selectable: PropTypes.bool,\n    showIcon: PropTypes.bool,\n    icon: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n    draggable: PropTypes.bool,\n    checkable: PropTypes.oneOfType([PropTypes.bool, PropTypes.node]),\n    checkStrictly: PropTypes.bool,\n    disabled: PropTypes.bool,\n    openTransitionName: PropTypes.string,\n    openAnimation: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n\n    loadData: PropTypes.func,\n    filterTreeNode: PropTypes.func,\n    renderTreeNode: PropTypes.func,\n\n    isKeyChecked: PropTypes.func,\n\n    onNodeExpand: PropTypes.func,\n    onNodeSelect: PropTypes.func,\n    onNodeMouseEnter: PropTypes.func,\n    onNodeMouseLeave: PropTypes.func,\n    onNodeContextMenu: PropTypes.func,\n    onNodeDragStart: PropTypes.func,\n    onNodeDragEnter: PropTypes.func,\n    onNodeDragOver: PropTypes.func,\n    onNodeDragLeave: PropTypes.func,\n    onNodeDragEnd: PropTypes.func,\n    onNodeDrop: PropTypes.func,\n    onBatchNodeCheck: PropTypes.func,\n    onCheckConductFinished: PropTypes.func\n  })\n};\n\nvar Tree = function (_React$Component) {\n  _inherits(Tree, _React$Component);\n\n  function Tree(props) {\n    _classCallCheck(this, Tree);\n\n    var _this = _possibleConstructorReturn(this, _React$Component.call(this, props));\n\n    _initialiseProps.call(_this);\n\n    var defaultExpandAll = props.defaultExpandAll,\n        defaultExpandParent = props.defaultExpandParent,\n        defaultExpandedKeys = props.defaultExpandedKeys,\n        defaultCheckedKeys = props.defaultCheckedKeys,\n        defaultSelectedKeys = props.defaultSelectedKeys,\n        expandedKeys = props.expandedKeys;\n\n    // Sync state with props\n\n    var _ref = calcCheckedKeys(defaultCheckedKeys, props) || {},\n        _ref$checkedKeys = _ref.checkedKeys,\n        checkedKeys = _ref$checkedKeys === undefined ? [] : _ref$checkedKeys,\n        _ref$halfCheckedKeys = _ref.halfCheckedKeys,\n        halfCheckedKeys = _ref$halfCheckedKeys === undefined ? [] : _ref$halfCheckedKeys;\n\n    var state = {\n      selectedKeys: calcSelectedKeys(defaultSelectedKeys, props),\n      checkedKeys: checkedKeys,\n      halfCheckedKeys: halfCheckedKeys\n    };\n\n    if (defaultExpandAll) {\n      state.expandedKeys = getFullKeyList(props.children);\n    } else if (defaultExpandParent) {\n      state.expandedKeys = calcExpandedKeys(expandedKeys || defaultExpandedKeys, props);\n    } else {\n      state.expandedKeys = defaultExpandedKeys;\n    }\n\n    _this.state = _extends({}, state, _this.getSyncProps(props) || {});\n\n    // Cache for check status to optimize\n    _this.checkedBatch = null;\n    return _this;\n  }\n\n  Tree.prototype.getChildContext = function getChildContext() {\n    var _props = this.props,\n        prefixCls = _props.prefixCls,\n        selectable = _props.selectable,\n        showIcon = _props.showIcon,\n        icon = _props.icon,\n        draggable = _props.draggable,\n        checkable = _props.checkable,\n        checkStrictly = _props.checkStrictly,\n        disabled = _props.disabled,\n        loadData = _props.loadData,\n        filterTreeNode = _props.filterTreeNode,\n        openTransitionName = _props.openTransitionName,\n        openAnimation = _props.openAnimation;\n\n\n    return {\n      rcTree: {\n        // root: this,\n\n        prefixCls: prefixCls,\n        selectable: selectable,\n        showIcon: showIcon,\n        icon: icon,\n        draggable: draggable,\n        checkable: checkable,\n        checkStrictly: checkStrictly,\n        disabled: disabled,\n        openTransitionName: openTransitionName,\n        openAnimation: openAnimation,\n\n        loadData: loadData,\n        filterTreeNode: filterTreeNode,\n        renderTreeNode: this.renderTreeNode,\n        isKeyChecked: this.isKeyChecked,\n\n        onNodeExpand: this.onNodeExpand,\n        onNodeSelect: this.onNodeSelect,\n        onNodeMouseEnter: this.onNodeMouseEnter,\n        onNodeMouseLeave: this.onNodeMouseLeave,\n        onNodeContextMenu: this.onNodeContextMenu,\n        onNodeDragStart: this.onNodeDragStart,\n        onNodeDragEnter: this.onNodeDragEnter,\n        onNodeDragOver: this.onNodeDragOver,\n        onNodeDragLeave: this.onNodeDragLeave,\n        onNodeDragEnd: this.onNodeDragEnd,\n        onNodeDrop: this.onNodeDrop,\n        onBatchNodeCheck: this.onBatchNodeCheck,\n        onCheckConductFinished: this.onCheckConductFinished\n      }\n    };\n  };\n\n  Tree.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {\n    var _this2 = this;\n\n    // React 16 will not trigger update if new state is null\n    this.setState(function (prevState) {\n      return _this2.getSyncProps(nextProps, _this2.props, prevState);\n    });\n  };\n\n  /**\n   * [Legacy] Select handler is less small than node,\n   * so that this will trigger when drag enter node or select handler.\n   * This is a little tricky if customize css without padding.\n   * Better for use mouse move event to refresh drag state.\n   * But let's just keep it to avoid event trigger logic change.\n   */\n\n\n  /**\n   * This will cache node check status to optimize update process.\n   * When Tree get trigger `onCheckConductFinished` will flush all the update.\n   */\n\n\n  /**\n   * When top `onCheckConductFinished` called, will execute all batch update.\n   * And trigger `onCheck` event.\n   */\n\n\n  /**\n   * Sync state with props if needed\n   */\n\n\n  /**\n   * Only update the value which is not in props\n   */\n\n\n  /**\n   * [Legacy] Original logic use `key` as tracking clue.\n   * We have to use `cloneElement` to pass `key`.\n   */\n\n\n  Tree.prototype.render = function render() {\n    var _classNames;\n\n    var _props2 = this.props,\n        prefixCls = _props2.prefixCls,\n        className = _props2.className,\n        focusable = _props2.focusable,\n        showLine = _props2.showLine,\n        children = _props2.children;\n\n    var domProps = {};\n\n    // [Legacy] Commit: 0117f0c9db0e2956e92cb208f51a42387dfcb3d1\n    if (focusable) {\n      domProps.tabIndex = '0';\n      domProps.onKeyDown = this.onKeyDown;\n    }\n\n    return React.createElement(\n      'ul',\n      _extends({}, domProps, {\n        className: classNames(prefixCls, className, (_classNames = {}, _classNames[prefixCls + '-show-line'] = showLine, _classNames)),\n        role: 'tree-node',\n        unselectable: 'on'\n      }),\n      React.Children.map(children, this.renderTreeNode, this)\n    );\n  };\n\n  return Tree;\n}(React.Component);\n\nTree.propTypes = {\n  prefixCls: PropTypes.string,\n  className: PropTypes.string,\n  children: PropTypes.any,\n  showLine: PropTypes.bool,\n  showIcon: PropTypes.bool,\n  icon: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n  focusable: PropTypes.bool,\n  selectable: PropTypes.bool,\n  disabled: PropTypes.bool,\n  multiple: PropTypes.bool,\n  checkable: PropTypes.oneOfType([PropTypes.bool, PropTypes.node]),\n  checkStrictly: PropTypes.bool,\n  draggable: PropTypes.bool,\n  defaultExpandParent: PropTypes.bool,\n  autoExpandParent: PropTypes.bool,\n  defaultExpandAll: PropTypes.bool,\n  defaultExpandedKeys: PropTypes.arrayOf(PropTypes.string),\n  expandedKeys: PropTypes.arrayOf(PropTypes.string),\n  defaultCheckedKeys: PropTypes.arrayOf(PropTypes.string),\n  checkedKeys: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.string), PropTypes.object]),\n  defaultSelectedKeys: PropTypes.arrayOf(PropTypes.string),\n  selectedKeys: PropTypes.arrayOf(PropTypes.string),\n  onExpand: PropTypes.func,\n  onCheck: PropTypes.func,\n  onSelect: PropTypes.func,\n  loadData: PropTypes.func,\n  onMouseEnter: PropTypes.func,\n  onMouseLeave: PropTypes.func,\n  onRightClick: PropTypes.func,\n  onDragStart: PropTypes.func,\n  onDragEnter: PropTypes.func,\n  onDragOver: PropTypes.func,\n  onDragLeave: PropTypes.func,\n  onDragEnd: PropTypes.func,\n  onDrop: PropTypes.func,\n  filterTreeNode: PropTypes.func,\n  openTransitionName: PropTypes.string,\n  openAnimation: PropTypes.oneOfType([PropTypes.string, PropTypes.object])\n};\nTree.childContextTypes = contextTypes;\nTree.defaultProps = {\n  prefixCls: 'rc-tree',\n  showLine: false,\n  showIcon: true,\n  selectable: true,\n  multiple: false,\n  checkable: false,\n  disabled: false,\n  checkStrictly: false,\n  draggable: false,\n  defaultExpandParent: true,\n  autoExpandParent: false,\n  defaultExpandAll: false,\n  defaultExpandedKeys: [],\n  defaultCheckedKeys: [],\n  defaultSelectedKeys: [],\n  onExpand: null,\n  onCheck: null,\n  onSelect: null,\n  onDragStart: null,\n  onDragEnter: null,\n  onDragOver: null,\n  onDragLeave: null,\n  onDrop: null,\n  onDragEnd: null,\n  onMouseEnter: null,\n  onMouseLeave: null\n};\n\nvar _initialiseProps = function _initialiseProps() {\n  var _this3 = this;\n\n  this.onNodeDragStart = function (event, node) {\n    var expandedKeys = _this3.state.expandedKeys;\n    var onDragStart = _this3.props.onDragStart;\n    var _node$props = node.props,\n        eventKey = _node$props.eventKey,\n        children = _node$props.children;\n\n\n    _this3.dragNode = node;\n\n    _this3.setState({\n      dragNodesKeys: getDragNodesKeys(children, node),\n      expandedKeys: arrDel(expandedKeys, eventKey)\n    });\n\n    if (onDragStart) {\n      onDragStart({ event: event, node: node });\n    }\n  };\n\n  this.onNodeDragEnter = function (event, node) {\n    var expandedKeys = _this3.state.expandedKeys;\n    var onDragEnter = _this3.props.onDragEnter;\n    var _node$props2 = node.props,\n        pos = _node$props2.pos,\n        eventKey = _node$props2.eventKey;\n\n\n    var dropPosition = calcDropPosition(event, node);\n\n    // Skip if drag node is self\n    if (_this3.dragNode.props.eventKey === eventKey && dropPosition === 0) {\n      _this3.setState({\n        dragOverNodeKey: '',\n        dropPosition: null\n      });\n      return;\n    }\n\n    // Ref: https://github.com/react-component/tree/issues/132\n    // Add timeout to let onDragLevel fire before onDragEnter,\n    // so that we can clean drag props for onDragLeave node.\n    // Macro task for this:\n    // https://html.spec.whatwg.org/multipage/webappapis.html#clean-up-after-running-script\n    setTimeout(function () {\n      // Update drag over node\n      _this3.setState({\n        dragOverNodeKey: eventKey,\n        dropPosition: dropPosition\n      });\n\n      // Side effect for delay drag\n      if (!_this3.delayedDragEnterLogic) {\n        _this3.delayedDragEnterLogic = {};\n      }\n      Object.keys(_this3.delayedDragEnterLogic).forEach(function (key) {\n        clearTimeout(_this3.delayedDragEnterLogic[key]);\n      });\n      _this3.delayedDragEnterLogic[pos] = setTimeout(function () {\n        var newExpandedKeys = arrAdd(expandedKeys, eventKey);\n        _this3.setState({\n          expandedKeys: newExpandedKeys\n        });\n\n        if (onDragEnter) {\n          onDragEnter({ event: event, node: node, expandedKeys: newExpandedKeys });\n        }\n      }, 400);\n    }, 0);\n  };\n\n  this.onNodeDragOver = function (event, node) {\n    var onDragOver = _this3.props.onDragOver;\n    var eventKey = node.props.eventKey;\n\n    // Update drag position\n\n    if (_this3.dragNode && eventKey === _this3.state.dragOverNodeKey) {\n      var dropPosition = calcDropPosition(event, node);\n\n      if (dropPosition === _this3.state.dropPosition) return;\n\n      _this3.setState({\n        dropPosition: dropPosition\n      });\n    }\n\n    if (onDragOver) {\n      onDragOver({ event: event, node: node });\n    }\n  };\n\n  this.onNodeDragLeave = function (event, node) {\n    var onDragLeave = _this3.props.onDragLeave;\n\n\n    _this3.setState({\n      dragOverNodeKey: ''\n    });\n\n    if (onDragLeave) {\n      onDragLeave({ event: event, node: node });\n    }\n  };\n\n  this.onNodeDragEnd = function (event, node) {\n    var onDragEnd = _this3.props.onDragEnd;\n\n    _this3.setState({\n      dragOverNodeKey: ''\n    });\n    if (onDragEnd) {\n      onDragEnd({ event: event, node: node });\n    }\n  };\n\n  this.onNodeDrop = function (event, node) {\n    var _state = _this3.state,\n        dragNodesKeys = _state.dragNodesKeys,\n        dropPosition = _state.dropPosition;\n    var onDrop = _this3.props.onDrop;\n    var _node$props3 = node.props,\n        eventKey = _node$props3.eventKey,\n        pos = _node$props3.pos;\n\n\n    _this3.setState({\n      dragOverNodeKey: '',\n      dropNodeKey: eventKey\n    });\n\n    if (dragNodesKeys.indexOf(eventKey) !== -1) {\n      warning(false, 'Can not drop to dragNode(include it\\'s children node)');\n      return;\n    }\n\n    var posArr = posToArr(pos);\n\n    var dropResult = {\n      event: event,\n      node: node,\n      dragNode: _this3.dragNode,\n      dragNodesKeys: dragNodesKeys.slice(),\n      dropPosition: dropPosition + Number(posArr[posArr.length - 1])\n    };\n\n    if (dropPosition !== 0) {\n      dropResult.dropToGap = true;\n    }\n\n    if (onDrop) {\n      onDrop(dropResult);\n    }\n  };\n\n  this.onNodeSelect = function (e, treeNode) {\n    var selectedKeys = _this3.state.selectedKeys;\n    var _props3 = _this3.props,\n        onSelect = _props3.onSelect,\n        multiple = _props3.multiple,\n        children = _props3.children;\n    var _treeNode$props = treeNode.props,\n        selected = _treeNode$props.selected,\n        eventKey = _treeNode$props.eventKey;\n\n    var targetSelected = !selected;\n\n    // Update selected keys\n    if (!targetSelected) {\n      selectedKeys = arrDel(selectedKeys, eventKey);\n    } else if (!multiple) {\n      selectedKeys = [eventKey];\n    } else {\n      selectedKeys = arrAdd(selectedKeys, eventKey);\n    }\n\n    // [Legacy] Not found related usage in doc or upper libs\n    // [Legacy] TODO: add optimize prop to skip node process\n    var selectedNodes = [];\n    if (selectedKeys.length) {\n      traverseTreeNodes(children, function (_ref2) {\n        var node = _ref2.node,\n            key = _ref2.key;\n\n        if (selectedKeys.indexOf(key) !== -1) {\n          selectedNodes.push(node);\n        }\n      });\n    }\n\n    _this3.setUncontrolledState({ selectedKeys: selectedKeys });\n\n    if (onSelect) {\n      var eventObj = {\n        event: 'select',\n        selected: targetSelected,\n        node: treeNode,\n        selectedNodes: selectedNodes\n      };\n      onSelect(selectedKeys, eventObj);\n    }\n  };\n\n  this.onBatchNodeCheck = function (key, checked, halfChecked, startNode) {\n    if (startNode) {\n      _this3.checkedBatch = {\n        treeNode: startNode,\n        checked: checked,\n        list: []\n      };\n    }\n\n    // This code should never called\n    if (!_this3.checkedBatch) {\n      _this3.checkedBatch = {\n        list: []\n      };\n      warning(false, 'Checked batch not init. This should be a bug. Please fire a issue.');\n    }\n\n    _this3.checkedBatch.list.push({ key: key, checked: checked, halfChecked: halfChecked });\n  };\n\n  this.onCheckConductFinished = function () {\n    var _state2 = _this3.state,\n        checkedKeys = _state2.checkedKeys,\n        halfCheckedKeys = _state2.halfCheckedKeys;\n    var _props4 = _this3.props,\n        onCheck = _props4.onCheck,\n        checkStrictly = _props4.checkStrictly,\n        children = _props4.children;\n\n    // Use map to optimize update speed\n\n    var checkedKeySet = {};\n    var halfCheckedKeySet = {};\n\n    checkedKeys.forEach(function (key) {\n      checkedKeySet[key] = true;\n    });\n    halfCheckedKeys.forEach(function (key) {\n      halfCheckedKeySet[key] = true;\n    });\n\n    // Batch process\n    _this3.checkedBatch.list.forEach(function (_ref3) {\n      var key = _ref3.key,\n          checked = _ref3.checked,\n          halfChecked = _ref3.halfChecked;\n\n      checkedKeySet[key] = checked;\n      halfCheckedKeySet[key] = halfChecked;\n    });\n    var newCheckedKeys = Object.keys(checkedKeySet).filter(function (key) {\n      return checkedKeySet[key];\n    });\n    var newHalfCheckedKeys = Object.keys(halfCheckedKeySet).filter(function (key) {\n      return halfCheckedKeySet[key];\n    });\n\n    // Trigger onChecked\n    var selectedObj = void 0;\n\n    var eventObj = {\n      event: 'check',\n      node: _this3.checkedBatch.treeNode,\n      checked: _this3.checkedBatch.checked\n    };\n\n    if (checkStrictly) {\n      selectedObj = getStrictlyValue(newCheckedKeys, newHalfCheckedKeys);\n\n      // [Legacy] TODO: add optimize prop to skip node process\n      eventObj.checkedNodes = [];\n      traverseTreeNodes(children, function (_ref4) {\n        var node = _ref4.node,\n            key = _ref4.key;\n\n        if (checkedKeySet[key]) {\n          eventObj.checkedNodes.push(node);\n        }\n      });\n\n      _this3.setUncontrolledState({ checkedKeys: newCheckedKeys });\n    } else {\n      selectedObj = newCheckedKeys;\n\n      // [Legacy] TODO: add optimize prop to skip node process\n      eventObj.checkedNodes = [];\n      eventObj.checkedNodesPositions = []; // [Legacy] TODO: not in API\n      eventObj.halfCheckedKeys = newHalfCheckedKeys; // [Legacy] TODO: not in API\n      traverseTreeNodes(children, function (_ref5) {\n        var node = _ref5.node,\n            pos = _ref5.pos,\n            key = _ref5.key;\n\n        if (checkedKeySet[key]) {\n          eventObj.checkedNodes.push(node);\n          eventObj.checkedNodesPositions.push({ node: node, pos: pos });\n        }\n      });\n\n      _this3.setUncontrolledState({\n        checkedKeys: newCheckedKeys,\n        halfCheckedKeys: newHalfCheckedKeys\n      });\n    }\n\n    if (onCheck) {\n      onCheck(selectedObj, eventObj);\n    }\n\n    // Clean up\n    _this3.checkedBatch = null;\n  };\n\n  this.onNodeExpand = function (e, treeNode) {\n    var expandedKeys = _this3.state.expandedKeys;\n    var _props5 = _this3.props,\n        onExpand = _props5.onExpand,\n        loadData = _props5.loadData;\n    var _treeNode$props2 = treeNode.props,\n        eventKey = _treeNode$props2.eventKey,\n        expanded = _treeNode$props2.expanded;\n\n    // Update selected keys\n\n    var index = expandedKeys.indexOf(eventKey);\n    var targetExpanded = !expanded;\n\n    warning(expanded && index !== -1 || !expanded && index === -1, 'Expand state not sync with index check');\n\n    if (targetExpanded) {\n      expandedKeys = arrAdd(expandedKeys, eventKey);\n    } else {\n      expandedKeys = arrDel(expandedKeys, eventKey);\n    }\n\n    _this3.setUncontrolledState({ expandedKeys: expandedKeys });\n\n    if (onExpand) {\n      onExpand(expandedKeys, { node: treeNode, expanded: targetExpanded });\n    }\n\n    // Async Load data\n    if (targetExpanded && loadData) {\n      return loadData(treeNode).then(function () {\n        // [Legacy] Refresh logic\n        _this3.setUncontrolledState({ expandedKeys: expandedKeys });\n      });\n    }\n\n    return null;\n  };\n\n  this.onNodeMouseEnter = function (event, node) {\n    var onMouseEnter = _this3.props.onMouseEnter;\n\n    if (onMouseEnter) {\n      onMouseEnter({ event: event, node: node });\n    }\n  };\n\n  this.onNodeMouseLeave = function (event, node) {\n    var onMouseLeave = _this3.props.onMouseLeave;\n\n    if (onMouseLeave) {\n      onMouseLeave({ event: event, node: node });\n    }\n  };\n\n  this.onNodeContextMenu = function (event, node) {\n    var onRightClick = _this3.props.onRightClick;\n\n    if (onRightClick) {\n      event.preventDefault();\n      onRightClick({ event: event, node: node });\n    }\n  };\n\n  this.getSyncProps = function () {\n    var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var prevProps = arguments[1];\n    var preState = arguments[2];\n\n    var needSync = false;\n    var oriState = preState || _this3.state;\n    var newState = {};\n    var myPrevProps = prevProps || {};\n\n    function checkSync(name) {\n      if (props[name] !== myPrevProps[name]) {\n        needSync = true;\n        return true;\n      }\n      return false;\n    }\n\n    // Children change will affect check box status.\n    // And no need to check when prev props not provided\n    if (prevProps && checkSync('children')) {\n      var newCheckedKeys = calcCheckedKeys(props.checkedKeys || oriState.checkedKeys, props);\n\n      var _ref6 = newCheckedKeys || {},\n          _ref6$checkedKeys = _ref6.checkedKeys,\n          checkedKeys = _ref6$checkedKeys === undefined ? [] : _ref6$checkedKeys,\n          _ref6$halfCheckedKeys = _ref6.halfCheckedKeys,\n          halfCheckedKeys = _ref6$halfCheckedKeys === undefined ? [] : _ref6$halfCheckedKeys;\n\n      newState.checkedKeys = checkedKeys;\n      newState.halfCheckedKeys = halfCheckedKeys;\n    }\n\n    // Re-calculate when autoExpandParent or expandedKeys changed\n    if (prevProps && (checkSync('autoExpandParent') || checkSync('expandedKeys'))) {\n      newState.expandedKeys = props.autoExpandParent ? calcExpandedKeys(props.expandedKeys, props) : props.expandedKeys;\n    }\n\n    if (checkSync('selectedKeys')) {\n      newState.selectedKeys = calcSelectedKeys(props.selectedKeys, props);\n    }\n\n    if (checkSync('checkedKeys')) {\n      var _ref7 = calcCheckedKeys(props.checkedKeys, props) || {},\n          _ref7$checkedKeys = _ref7.checkedKeys,\n          _checkedKeys = _ref7$checkedKeys === undefined ? [] : _ref7$checkedKeys,\n          _ref7$halfCheckedKeys = _ref7.halfCheckedKeys,\n          _halfCheckedKeys = _ref7$halfCheckedKeys === undefined ? [] : _ref7$halfCheckedKeys;\n\n      newState.checkedKeys = _checkedKeys;\n      newState.halfCheckedKeys = _halfCheckedKeys;\n    }\n\n    return needSync ? newState : null;\n  };\n\n  this.setUncontrolledState = function (state) {\n    var needSync = false;\n    var newState = {};\n\n    Object.keys(state).forEach(function (name) {\n      if (name in _this3.props) return;\n\n      needSync = true;\n      newState[name] = state[name];\n    });\n\n    if (needSync) {\n      _this3.setState(newState);\n    }\n  };\n\n  this.isKeyChecked = function (key) {\n    var _state$checkedKeys = _this3.state.checkedKeys,\n        checkedKeys = _state$checkedKeys === undefined ? [] : _state$checkedKeys;\n\n    return checkedKeys.indexOf(key) !== -1;\n  };\n\n  this.renderTreeNode = function (child, index) {\n    var level = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n    var _state3 = _this3.state,\n        _state3$expandedKeys = _state3.expandedKeys,\n        expandedKeys = _state3$expandedKeys === undefined ? [] : _state3$expandedKeys,\n        _state3$selectedKeys = _state3.selectedKeys,\n        selectedKeys = _state3$selectedKeys === undefined ? [] : _state3$selectedKeys,\n        _state3$halfCheckedKe = _state3.halfCheckedKeys,\n        halfCheckedKeys = _state3$halfCheckedKe === undefined ? [] : _state3$halfCheckedKe,\n        dragOverNodeKey = _state3.dragOverNodeKey,\n        dropPosition = _state3.dropPosition;\n\n    _objectDestructuringEmpty(_this3.props);\n\n    var pos = getPosition(level, index);\n    var key = child.key || pos;\n\n    return React.cloneElement(child, {\n      eventKey: key,\n      expanded: expandedKeys.indexOf(key) !== -1,\n      selected: selectedKeys.indexOf(key) !== -1,\n      checked: _this3.isKeyChecked(key),\n      halfChecked: halfCheckedKeys.indexOf(key) !== -1,\n      pos: pos,\n\n      // [Legacy] Drag props\n      dragOver: dragOverNodeKey === key && dropPosition === 0,\n      dragOverGapTop: dragOverNodeKey === key && dropPosition === -1,\n      dragOverGapBottom: dragOverNodeKey === key && dropPosition === 1\n    });\n  };\n};\n\nexport default Tree;"]},"metadata":{},"sourceType":"module"}