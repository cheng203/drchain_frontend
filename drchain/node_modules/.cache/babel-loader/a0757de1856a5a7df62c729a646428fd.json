{"ast":null,"code":"import _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport _extends from 'babel-runtime/helpers/extends';\nimport _objectWithoutProperties from 'babel-runtime/helpers/objectWithoutProperties';\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport KeyCode from 'rc-util/es/KeyCode';\nimport classnames from 'classnames';\nimport Animate from 'rc-animate';\nimport { getPropValue, getValuePropValue, isMultiple, toArray, UNSELECTABLE_ATTRIBUTE, UNSELECTABLE_STYLE, preventDefaultEvent, getTreeNodesStates, flatToHierarchy, filterParentPosition, isPositionPrefix, labelCompatible, loopAllChildren, filterAllCheckedData, processSimpleTreeData, saveRef, toTitle } from './util';\nimport SelectTrigger from './SelectTrigger';\nimport _TreeNode from './TreeNode';\nimport { SHOW_ALL, SHOW_PARENT, SHOW_CHILD } from './strategies';\nimport { SelectPropTypes } from './PropTypes';\n\nfunction noop() {}\n\nfunction filterFn(input, child) {\n  return String(getPropValue(child, labelCompatible(this.props.treeNodeFilterProp))).indexOf(input) > -1;\n}\n\nfunction loopTreeData(data) {\n  var level = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var treeCheckable = arguments[2];\n  return data.map(function (item, index) {\n    var pos = level + '-' + index;\n\n    var label = item.label,\n        value = item.value,\n        disabled = item.disabled,\n        key = item.key,\n        hasOwnProperty = item.hasOwnProperty,\n        selectable = item.selectable,\n        children = item.children,\n        isLeaf = item.isLeaf,\n        otherProps = _objectWithoutProperties(item, ['label', 'value', 'disabled', 'key', 'hasOwnProperty', 'selectable', 'children', 'isLeaf']);\n\n    var props = _extends({\n      value: value,\n      title: label,\n      // value: value || String(key || label), // cause onChange callback error\n      key: key || value || pos,\n      disabled: disabled || false,\n      selectable: selectable === false ? selectable : !treeCheckable\n    }, otherProps);\n\n    var ret = void 0;\n\n    if (children && children.length) {\n      ret = React.createElement(_TreeNode, props, loopTreeData(children, pos, treeCheckable));\n    } else {\n      ret = React.createElement(_TreeNode, _extends({}, props, {\n        isLeaf: isLeaf\n      }));\n    }\n\n    return ret;\n  });\n}\n\nvar Select = function (_Component) {\n  _inherits(Select, _Component);\n\n  function Select(props) {\n    _classCallCheck(this, Select);\n\n    var _this = _possibleConstructorReturn(this, _Component.call(this, props));\n\n    _initialiseProps.call(_this);\n\n    var value = [];\n\n    if ('value' in props) {\n      value = toArray(props.value);\n    } else {\n      value = toArray(props.defaultValue);\n    } // save parsed treeData, for performance (treeData may be very big)\n\n\n    _this.renderedTreeData = _this.renderTreeData();\n    value = _this.addLabelToValue(props, value);\n    value = _this.getValue(props, value, props.inputValue ? '__strict' : true);\n    var inputValue = props.inputValue || ''; // if (props.combobox) {\n    //   inputValue = value.length ? String(value[0].value) : '';\n    // }\n\n    _this.state = {\n      value: value,\n      inputValue: inputValue,\n      open: props.open || props.defaultOpen,\n      focused: false\n    };\n    return _this;\n  }\n\n  Select.prototype.componentDidMount = function componentDidMount() {\n    var _props2 = this.props,\n        autoFocus = _props2.autoFocus,\n        disabled = _props2.disabled;\n\n    if (isMultiple(this.props)) {\n      var inputNode = this.getInputDOMNode();\n\n      if (inputNode.value) {\n        inputNode.style.width = '';\n        inputNode.style.width = this.inputMirrorInstance.clientWidth + 'px';\n      } else {\n        inputNode.style.width = '';\n      }\n    }\n\n    if (autoFocus && !disabled) {\n      this.focus();\n    }\n  };\n\n  Select.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {\n    // save parsed treeData, for performance (treeData may be very big)\n    this.renderedTreeData = this.renderTreeData(nextProps); // Detecting whether the object of `onChange`'s argument  is old ref.\n    // Better to do a deep equal later.\n\n    this._cacheTreeNodesStates = this._cacheTreeNodesStates !== 'no' && this._savedValue && nextProps.value === this._savedValue;\n\n    if (this.props.treeData !== nextProps.treeData || this.props.children !== nextProps.children) {\n      // refresh this._treeNodesStates cache\n      this._treeNodesStates = getTreeNodesStates(this.renderedTreeData || nextProps.children, this.state.value.map(function (item) {\n        return item.value;\n      }));\n    }\n\n    if ('value' in nextProps) {\n      var value = toArray(nextProps.value);\n      value = this.addLabelToValue(nextProps, value);\n      value = this.getValue(nextProps, value);\n      this.setState({\n        value: value\n      }, this.forcePopupAlign); // if (nextProps.combobox) {\n      //   this.setState({\n      //     inputValue: value.length ? String(value[0].key) : '',\n      //   });\n      // }\n    }\n\n    if (nextProps.inputValue !== this.props.inputValue) {\n      this.setState({\n        inputValue: nextProps.inputValue\n      });\n    }\n\n    if ('open' in nextProps) {\n      this.setState({\n        open: nextProps.open\n      });\n    }\n  };\n\n  Select.prototype.componentWillUpdate = function componentWillUpdate(nextProps) {\n    if (this._savedValue && nextProps.value && nextProps.value !== this._savedValue && nextProps.value === this.props.value) {\n      this._cacheTreeNodesStates = false;\n      this.getValue(nextProps, this.addLabelToValue(nextProps, toArray(nextProps.value)));\n    }\n  };\n\n  Select.prototype.componentDidUpdate = function componentDidUpdate() {\n    var state = this.state;\n    var props = this.props;\n\n    if (state.open && isMultiple(props)) {\n      var inputNode = this.getInputDOMNode();\n\n      if (inputNode.value) {\n        inputNode.style.width = '';\n        inputNode.style.width = this.inputMirrorInstance.clientWidth + 'px';\n      } else {\n        inputNode.style.width = '';\n      }\n    }\n  };\n\n  Select.prototype.componentWillUnmount = function componentWillUnmount() {\n    this.clearDelayTimer();\n\n    if (this.dropdownContainer) {\n      ReactDOM.unmountComponentAtNode(this.dropdownContainer);\n      document.body.removeChild(this.dropdownContainer);\n      this.dropdownContainer = null;\n    }\n  }; // combobox ignore\n\n\n  Select.prototype.getLabelFromNode = function getLabelFromNode(child) {\n    return getPropValue(child, this.props.treeNodeLabelProp);\n  };\n\n  Select.prototype.getLabelFromProps = function getLabelFromProps(props, value) {\n    var _this2 = this;\n\n    if (value === undefined) {\n      return null;\n    }\n\n    var label = null;\n    loopAllChildren(this.renderedTreeData || props.children, function (item) {\n      if (getValuePropValue(item) === value) {\n        label = _this2.getLabelFromNode(item);\n      }\n    });\n\n    if (label === null) {\n      return value;\n    }\n\n    return label;\n  };\n\n  Select.prototype.getDropdownContainer = function getDropdownContainer() {\n    if (!this.dropdownContainer) {\n      this.dropdownContainer = document.createElement('div');\n      document.body.appendChild(this.dropdownContainer);\n    }\n\n    return this.dropdownContainer;\n  };\n\n  Select.prototype.getSearchPlaceholderElement = function getSearchPlaceholderElement(hidden) {\n    var props = this.props;\n    var placeholder = void 0;\n\n    if (isMultiple(props)) {\n      placeholder = props.placeholder || props.searchPlaceholder;\n    } else {\n      placeholder = props.searchPlaceholder;\n    }\n\n    if (placeholder) {\n      return React.createElement('span', {\n        style: {\n          display: hidden ? 'none' : 'block'\n        },\n        onClick: this.onPlaceholderClick,\n        className: props.prefixCls + '-search__field__placeholder'\n      }, placeholder);\n    }\n\n    return null;\n  };\n\n  Select.prototype.getInputElement = function getInputElement() {\n    var inputValue = this.state.inputValue;\n    var _props3 = this.props,\n        prefixCls = _props3.prefixCls,\n        disabled = _props3.disabled;\n    return React.createElement('span', {\n      className: prefixCls + '-search__field__wrap'\n    }, React.createElement('input', {\n      ref: saveRef(this, 'inputInstance'),\n      onChange: this.onInputChange,\n      onKeyDown: this.onInputKeyDown,\n      value: inputValue,\n      disabled: disabled,\n      className: prefixCls + '-search__field',\n      role: 'textbox'\n    }), React.createElement('span', {\n      ref: saveRef(this, 'inputMirrorInstance'),\n      className: prefixCls + '-search__field__mirror'\n    }, inputValue, '\\xA0'), isMultiple(this.props) ? null : this.getSearchPlaceholderElement(!!inputValue));\n  };\n\n  Select.prototype.getInputDOMNode = function getInputDOMNode() {\n    return this.inputInstance;\n  };\n\n  Select.prototype.getPopupDOMNode = function getPopupDOMNode() {\n    return this.trigger.getPopupDOMNode();\n  };\n\n  Select.prototype.getPopupComponentRefs = function getPopupComponentRefs() {\n    return this.trigger.getPopupEleRefs();\n  };\n\n  Select.prototype.getValue = function getValue(_props, val) {\n    var _this3 = this;\n\n    var init = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n    var value = val; // if inputValue existing, tree is checkStrictly\n\n    var _strict = init === '__strict' || init && (this.state && this.state.inputValue || this.props.inputValue !== _props.inputValue);\n\n    if (_props.treeCheckable && (_props.treeCheckStrictly || _strict)) {\n      this.halfCheckedValues = [];\n      value = [];\n      val.forEach(function (i) {\n        if (!i.halfChecked) {\n          value.push(i);\n        } else {\n          _this3.halfCheckedValues.push(i);\n        }\n      });\n    } // if (!(_props.treeCheckable && !_props.treeCheckStrictly)) {\n\n\n    if (!!!_props.treeCheckable || _props.treeCheckable && (_props.treeCheckStrictly || _strict)) {\n      return value;\n    }\n\n    var checkedTreeNodes = void 0;\n\n    if (this._cachetreeData && this._cacheTreeNodesStates && this._checkedNodes && this.state && !this.state.inputValue) {\n      this.checkedTreeNodes = checkedTreeNodes = this._checkedNodes;\n    } else {\n      /**\n       * Note: `this._treeNodesStates`'s treeNodesStates must correspond to nodes of the\n       * final tree (`processTreeNode` function from SelectTrigger.jsx produce the final tree).\n       *\n       * And, `this._treeNodesStates` from `onSelect` is previous value,\n       * so it perhaps only have a few nodes, but the newly filtered tree can have many nodes,\n       * thus, you cannot use previous _treeNodesStates.\n       */\n      // getTreeNodesStates is not effective.\n      this._treeNodesStates = getTreeNodesStates(this.renderedTreeData || _props.children, value.map(function (item) {\n        return item.value;\n      }));\n      this.checkedTreeNodes = checkedTreeNodes = this._treeNodesStates.checkedNodes;\n    }\n\n    var mapLabVal = function mapLabVal(arr) {\n      return arr.map(function (itemObj) {\n        return {\n          value: getValuePropValue(itemObj.node),\n          label: getPropValue(itemObj.node, _props.treeNodeLabelProp)\n        };\n      });\n    };\n\n    var props = this.props;\n    var checkedValues = [];\n\n    if (props.showCheckedStrategy === SHOW_ALL) {\n      checkedValues = mapLabVal(checkedTreeNodes);\n    } else if (props.showCheckedStrategy === SHOW_PARENT) {\n      var posArr = filterParentPosition(checkedTreeNodes.map(function (itemObj) {\n        return itemObj.pos;\n      }));\n      checkedValues = mapLabVal(checkedTreeNodes.filter(function (itemObj) {\n        return posArr.indexOf(itemObj.pos) !== -1;\n      }));\n    } else {\n      checkedValues = mapLabVal(checkedTreeNodes.filter(function (itemObj) {\n        return !itemObj.node.props.children;\n      }));\n    }\n\n    return checkedValues;\n  };\n\n  Select.prototype.getCheckedNodes = function getCheckedNodes(info, props) {\n    // TODO treeCheckable does not support tags/dynamic\n    var checkedNodes = info.checkedNodes; // if inputValue existing, tree is checkStrictly\n\n    if (props.treeCheckStrictly || this.state.inputValue) {\n      return checkedNodes;\n    }\n\n    var checkedNodesPositions = info.checkedNodesPositions;\n\n    if (props.showCheckedStrategy === SHOW_ALL) {\n      checkedNodes = checkedNodes;\n    } else if (props.showCheckedStrategy === SHOW_PARENT) {\n      var posArr = filterParentPosition(checkedNodesPositions.map(function (itemObj) {\n        return itemObj.pos;\n      }));\n      checkedNodes = checkedNodesPositions.filter(function (itemObj) {\n        return posArr.indexOf(itemObj.pos) !== -1;\n      }).map(function (itemObj) {\n        return itemObj.node;\n      });\n    } else {\n      checkedNodes = checkedNodes.filter(function (n) {\n        return !n.props.children;\n      });\n    }\n\n    return checkedNodes;\n  };\n\n  Select.prototype.getDeselectedValue = function getDeselectedValue(selectedValue) {\n    var checkedTreeNodes = this.checkedTreeNodes;\n    var unCheckPos = void 0;\n    checkedTreeNodes.forEach(function (itemObj) {\n      if (itemObj.node.props.value === selectedValue) {\n        unCheckPos = itemObj.pos;\n      }\n    });\n    var newVals = [];\n    var newCkTns = [];\n    checkedTreeNodes.forEach(function (itemObj) {\n      if (isPositionPrefix(itemObj.pos, unCheckPos) || isPositionPrefix(unCheckPos, itemObj.pos)) {\n        // Filter ancestral and children nodes when uncheck a node.\n        return;\n      }\n\n      newCkTns.push(itemObj);\n      newVals.push(itemObj.node.props.value);\n    });\n    this.checkedTreeNodes = this._checkedNodes = newCkTns;\n    var nv = this.state.value.filter(function (val) {\n      return newVals.indexOf(val.value) !== -1;\n    });\n    this.fireChange(nv, {\n      triggerValue: selectedValue,\n      clear: true\n    });\n  };\n\n  Select.prototype.setOpenState = function setOpenState(open, needFocus) {\n    var _this4 = this;\n\n    var documentClickClose = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    this.clearDelayTimer();\n    var props = this.props; // can not optimize, if children is empty\n    // if (this.state.open === open) {\n    //   return;\n    // }\n\n    if (!this.props.onDropdownVisibleChange(open, {\n      documentClickClose: documentClickClose\n    })) {\n      return;\n    }\n\n    this.setState({\n      open: open\n    }, function () {\n      if (needFocus || open) {\n        // Input dom init after first time component render\n        // Add delay for this to get focus\n        Promise.resolve().then(function () {\n          if (open || isMultiple(props)) {\n            var input = _this4.getInputDOMNode();\n\n            if (input && document.activeElement !== input) {\n              input.focus();\n            }\n          } else if (_this4.selection) {\n            _this4.selection.focus();\n          }\n        });\n      }\n    });\n  };\n\n  Select.prototype.clearSearchInput = function clearSearchInput() {\n    this.getInputDOMNode().focus();\n\n    if (!('inputValue' in this.props)) {\n      this.setState({\n        inputValue: ''\n      });\n    }\n  };\n\n  Select.prototype.addLabelToValue = function addLabelToValue(props, value_) {\n    var _this5 = this;\n\n    var value = value_;\n\n    if (this.isLabelInValue()) {\n      value.forEach(function (v, i) {\n        if (Object.prototype.toString.call(value[i]) !== '[object Object]') {\n          value[i] = {\n            value: '',\n            label: ''\n          };\n          return;\n        }\n\n        v.label = v.label || _this5.getLabelFromProps(props, v.value);\n      });\n    } else {\n      value = value.map(function (v) {\n        return {\n          value: v,\n          label: _this5.getLabelFromProps(props, v)\n        };\n      });\n    }\n\n    return value;\n  };\n\n  Select.prototype.clearDelayTimer = function clearDelayTimer() {\n    if (this.delayTimer) {\n      clearTimeout(this.delayTimer);\n      this.delayTimer = null;\n    }\n  };\n\n  Select.prototype.removeSelected = function removeSelected(selectedVal, e) {\n    var props = this.props;\n\n    if (props.disabled) {\n      return;\n    } // Do not trigger Trigger popup\n\n\n    if (e && e.stopPropagation) {\n      e.stopPropagation();\n    }\n\n    this._cacheTreeNodesStates = 'no';\n\n    if (props.treeCheckable && (props.showCheckedStrategy === SHOW_ALL || props.showCheckedStrategy === SHOW_PARENT) && !(props.treeCheckStrictly || this.state.inputValue)) {\n      this.getDeselectedValue(selectedVal);\n      return;\n    } // click the node's `x`(in select box), likely trigger the TreeNode's `unCheck` event,\n    // cautiously, they are completely different, think about it, the tree may not render at first,\n    // but the nodes in select box are ready.\n\n\n    var label = void 0;\n    var value = this.state.value.filter(function (singleValue) {\n      if (singleValue.value === selectedVal) {\n        label = singleValue.label;\n      }\n\n      return singleValue.value !== selectedVal;\n    });\n    var canMultiple = isMultiple(props);\n\n    if (canMultiple) {\n      var event = selectedVal;\n\n      if (this.isLabelInValue()) {\n        event = {\n          value: selectedVal,\n          label: label\n        };\n      }\n\n      props.onDeselect(event);\n    }\n\n    if (props.treeCheckable) {\n      if (this.checkedTreeNodes && this.checkedTreeNodes.length) {\n        this.checkedTreeNodes = this._checkedNodes = this.checkedTreeNodes.filter(function (item) {\n          return value.some(function (i) {\n            return i.value === item.node.props.value;\n          });\n        });\n      }\n    }\n\n    this.fireChange(value, {\n      triggerValue: selectedVal,\n      clear: true\n    });\n  };\n\n  Select.prototype.openIfHasChildren = function openIfHasChildren() {\n    var props = this.props;\n\n    if (React.Children.count(props.children) || !isMultiple(props)) {\n      this.setOpenState(true);\n    }\n  };\n\n  Select.prototype.fireChange = function fireChange(value) {\n    var _this6 = this;\n\n    var extraInfo = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var props = this.props;\n    var vals = value.map(function (i) {\n      return i.value;\n    });\n    var sv = this.state.value.map(function (i) {\n      return i.value;\n    });\n\n    if (vals.length !== sv.length || !vals.every(function (val, index) {\n      return sv[index] === val;\n    })) {\n      var ex = _extends({\n        preValue: [].concat(this.state.value)\n      }, extraInfo);\n\n      var labs = null;\n      var vls = value;\n\n      if (!this.isLabelInValue()) {\n        labs = value.map(function (i) {\n          return i.label;\n        });\n        vls = vls.map(function (v) {\n          return v.value;\n        });\n      } else if (this.halfCheckedValues && this.halfCheckedValues.length) {\n        this.halfCheckedValues.forEach(function (i) {\n          if (!vls.some(function (v) {\n            return v.value === i.value;\n          })) {\n            vls.push(i);\n          }\n        });\n      }\n\n      if (props.treeCheckable && ex.clear) {\n        var treeData = this.renderedTreeData || props.children;\n        ex.allCheckedNodes = flatToHierarchy(filterAllCheckedData(vals, treeData));\n      }\n\n      if (props.treeCheckable && this.state.inputValue) {\n        var _vls = [].concat(this.state.value);\n\n        if (ex.checked) {\n          value.forEach(function (i) {\n            if (_vls.every(function (ii) {\n              return ii.value !== i.value;\n            })) {\n              _vls.push(_extends({}, i));\n            }\n          });\n        } else {\n          var index = void 0;\n\n          var includeVal = _vls.some(function (i, ind) {\n            if (i.value === ex.triggerValue) {\n              index = ind;\n              return true;\n            }\n          });\n\n          if (includeVal) {\n            _vls.splice(index, 1);\n          }\n        }\n\n        vls = _vls;\n\n        if (!this.isLabelInValue()) {\n          labs = _vls.map(function (v) {\n            return v.label;\n          });\n          vls = _vls.map(function (v) {\n            return v.value;\n          });\n        }\n      }\n\n      this._savedValue = isMultiple(props) ? vls : vls[0];\n      props.onChange(this._savedValue, labs, ex);\n\n      if (!('value' in props)) {\n        this._cacheTreeNodesStates = false;\n        this.setState({\n          value: this.getValue(props, toArray(this._savedValue).map(function (v, i) {\n            return _this6.isLabelInValue() ? v : {\n              value: v,\n              label: labs && labs[i]\n            };\n          }))\n        }, this.forcePopupAlign);\n      }\n    }\n  };\n\n  Select.prototype.isLabelInValue = function isLabelInValue() {\n    var _props4 = this.props,\n        treeCheckable = _props4.treeCheckable,\n        treeCheckStrictly = _props4.treeCheckStrictly,\n        labelInValue = _props4.labelInValue;\n\n    if (treeCheckable && treeCheckStrictly) {\n      return true;\n    }\n\n    return labelInValue || false;\n  };\n\n  Select.prototype.focus = function focus() {\n    if (!isMultiple(this.props)) {\n      this.selection.focus();\n    } else {\n      this.getInputDOMNode().focus();\n    }\n  };\n\n  Select.prototype.blur = function blur() {\n    if (!isMultiple(this.props)) {\n      this.selection.blur();\n    } else {\n      this.getInputDOMNode().blur();\n    }\n  };\n\n  Select.prototype.renderTopControlNode = function renderTopControlNode() {\n    var _this7 = this;\n\n    var value = this.state.value;\n    var props = this.props;\n    var choiceTransitionName = props.choiceTransitionName,\n        prefixCls = props.prefixCls,\n        maxTagTextLength = props.maxTagTextLength;\n    var multiple = isMultiple(props); // single and not combobox, input is inside dropdown\n\n    if (!multiple) {\n      var innerNode = React.createElement('span', {\n        key: 'placeholder',\n        className: prefixCls + '-selection__placeholder'\n      }, props.placeholder);\n\n      if (value.length) {\n        innerNode = React.createElement('span', {\n          key: 'value',\n          title: toTitle(value[0].label),\n          className: prefixCls + '-selection-selected-value'\n        }, value[0].label);\n      }\n\n      return React.createElement('span', {\n        className: prefixCls + '-selection__rendered'\n      }, innerNode);\n    }\n\n    var selectedValueNodes = value.map(function (singleValue) {\n      var content = singleValue.label;\n      var title = content;\n\n      if (maxTagTextLength && typeof content === 'string' && content.length > maxTagTextLength) {\n        content = content.slice(0, maxTagTextLength) + '...';\n      }\n\n      return React.createElement('li', _extends({\n        style: UNSELECTABLE_STYLE\n      }, UNSELECTABLE_ATTRIBUTE, {\n        onMouseDown: preventDefaultEvent,\n        className: prefixCls + '-selection__choice',\n        key: singleValue.value,\n        title: toTitle(title)\n      }), React.createElement('span', {\n        className: prefixCls + '-selection__choice__remove',\n        onClick: function onClick(event) {\n          _this7.removeSelected(singleValue.value, event);\n        }\n      }), React.createElement('span', {\n        className: prefixCls + '-selection__choice__content'\n      }, content));\n    });\n    selectedValueNodes.push(React.createElement('li', {\n      className: prefixCls + '-search ' + prefixCls + '-search--inline',\n      key: '__input'\n    }, this.getInputElement()));\n    var className = prefixCls + '-selection__rendered';\n\n    if (choiceTransitionName) {\n      return React.createElement(Animate, {\n        className: className,\n        component: 'ul',\n        transitionName: choiceTransitionName,\n        onLeave: this.onChoiceAnimationLeave\n      }, selectedValueNodes);\n    }\n\n    return React.createElement('ul', {\n      className: className\n    }, selectedValueNodes);\n  };\n\n  Select.prototype.renderTreeData = function renderTreeData(props) {\n    var validProps = props || this.props;\n\n    if (validProps.treeData) {\n      if (props && props.treeData === this.props.treeData && this.renderedTreeData) {\n        // cache and use pre data.\n        this._cachetreeData = true;\n        return this.renderedTreeData;\n      }\n\n      this._cachetreeData = false;\n      var treeData = [].concat(validProps.treeData); // process treeDataSimpleMode\n\n      if (validProps.treeDataSimpleMode) {\n        var simpleFormat = {\n          id: 'id',\n          pId: 'pId',\n          rootPId: null\n        };\n\n        if (Object.prototype.toString.call(validProps.treeDataSimpleMode) === '[object Object]') {\n          simpleFormat = _extends({}, simpleFormat, validProps.treeDataSimpleMode);\n        }\n\n        treeData = processSimpleTreeData(treeData, simpleFormat);\n      }\n\n      return loopTreeData(treeData, undefined, this.props.treeCheckable);\n    }\n  };\n\n  Select.prototype.render = function render() {\n    var _rootCls;\n\n    var props = this.props;\n    var multiple = isMultiple(props);\n    var state = this.state;\n    var className = props.className,\n        disabled = props.disabled,\n        allowClear = props.allowClear,\n        prefixCls = props.prefixCls;\n    var ctrlNode = this.renderTopControlNode();\n    var extraSelectionProps = {};\n\n    if (!multiple) {\n      extraSelectionProps = {\n        onKeyDown: this.onKeyDown,\n        tabIndex: 0\n      };\n    }\n\n    var rootCls = (_rootCls = {}, _rootCls[className] = !!className, _rootCls[prefixCls] = 1, _rootCls[prefixCls + '-open'] = state.open, _rootCls[prefixCls + '-focused'] = state.open || state.focused, _rootCls[prefixCls + '-disabled'] = disabled, _rootCls[prefixCls + '-enabled'] = !disabled, _rootCls[prefixCls + '-allow-clear'] = !!props.allowClear, _rootCls);\n    var clear = React.createElement('span', {\n      key: 'clear',\n      className: prefixCls + '-selection__clear',\n      onClick: this.onClearSelection\n    });\n    return React.createElement(SelectTrigger, _extends({}, props, {\n      treeNodes: props.children,\n      treeData: this.renderedTreeData,\n      _cachetreeData: this._cachetreeData,\n      _treeNodesStates: this._treeNodesStates,\n      halfCheckedValues: this.halfCheckedValues,\n      multiple: multiple,\n      disabled: disabled,\n      visible: state.open,\n      inputValue: state.inputValue,\n      inputElement: this.getInputElement(),\n      value: state.value,\n      onDropdownVisibleChange: this.onDropdownVisibleChange,\n      getPopupContainer: props.getPopupContainer,\n      onSelect: this.onSelect,\n      ref: saveRef(this, 'trigger')\n    }), React.createElement('span', {\n      style: props.style,\n      onClick: props.onClick,\n      className: classnames(rootCls),\n      onBlur: props.onBlur,\n      onFocus: props.onFocus\n    }, React.createElement('span', _extends({\n      ref: saveRef(this, 'selection'),\n      key: 'selection',\n      className: prefixCls + '-selection\\n            ' + prefixCls + '-selection--' + (multiple ? 'multiple' : 'single'),\n      role: 'combobox',\n      'aria-autocomplete': 'list',\n      'aria-haspopup': 'true',\n      'aria-expanded': state.open\n    }, extraSelectionProps), ctrlNode, allowClear && this.state.value.length && this.state.value[0].value ? clear : null, multiple || !props.showArrow ? null : React.createElement('span', {\n      key: 'arrow',\n      className: prefixCls + '-arrow',\n      style: {\n        outline: 'none'\n      }\n    }, React.createElement('b', null)), multiple ? this.getSearchPlaceholderElement(!!this.state.inputValue || this.state.value.length) : null)));\n  };\n\n  return Select;\n}(Component);\n\nSelect.propTypes = SelectPropTypes;\nSelect.defaultProps = {\n  prefixCls: 'rc-tree-select',\n  filterTreeNode: filterFn,\n  // [Legacy] TODO: Set false and filter not hide?\n  showSearch: true,\n  allowClear: false,\n  placeholder: '',\n  searchPlaceholder: '',\n  labelInValue: false,\n  onClick: noop,\n  onChange: noop,\n  onSelect: noop,\n  onDeselect: noop,\n  onSearch: noop,\n  showArrow: true,\n  dropdownMatchSelectWidth: true,\n  dropdownStyle: {},\n  onDropdownVisibleChange: function onDropdownVisibleChange() {\n    return true;\n  },\n  notFoundContent: 'Not Found',\n  showCheckedStrategy: SHOW_CHILD,\n  // skipHandleInitValue: false, // Deprecated (use treeCheckStrictly)\n  treeCheckStrictly: false,\n  treeIcon: false,\n  treeLine: false,\n  treeDataSimpleMode: false,\n  treeDefaultExpandAll: false,\n  treeCheckable: false,\n  treeNodeFilterProp: 'value',\n  treeNodeLabelProp: 'title'\n};\n\nvar _initialiseProps = function _initialiseProps() {\n  var _this8 = this;\n\n  this.onInputChange = function (event) {\n    var val = event.target.value;\n    var props = _this8.props;\n\n    _this8.setState({\n      inputValue: val,\n      open: true\n    }, _this8.forcePopupAlign);\n\n    if (props.treeCheckable && !val) {\n      _this8.setState({\n        value: _this8.getValue(props, [].concat(_this8.state.value), false)\n      });\n    }\n\n    props.onSearch(val);\n  };\n\n  this.onDropdownVisibleChange = function (open) {\n    // selection inside combobox cause click\n    if (!open && document.activeElement === _this8.getInputDOMNode()) {// return;\n    }\n\n    _this8.setOpenState(open, undefined, !open);\n  };\n\n  this.onKeyDown = function (event) {\n    var props = _this8.props;\n\n    if (props.disabled) {\n      return;\n    }\n\n    var keyCode = event.keyCode;\n\n    if (_this8.state.open && !_this8.getInputDOMNode()) {\n      _this8.onInputKeyDown(event);\n    } else if (keyCode === KeyCode.ENTER || keyCode === KeyCode.DOWN) {\n      _this8.setOpenState(true);\n\n      event.preventDefault();\n    }\n  };\n\n  this.onInputKeyDown = function (event) {\n    var props = _this8.props;\n\n    if (props.disabled) {\n      return;\n    }\n\n    var state = _this8.state;\n    var keyCode = event.keyCode;\n\n    if (isMultiple(props) && !event.target.value && keyCode === KeyCode.BACKSPACE) {\n      var value = state.value.concat();\n\n      if (value.length) {\n        var popValue = value.pop();\n\n        _this8.removeSelected(_this8.isLabelInValue() ? popValue : popValue.value);\n      }\n\n      return;\n    }\n\n    if (keyCode === KeyCode.DOWN) {\n      if (!state.open) {\n        _this8.openIfHasChildren();\n\n        event.preventDefault();\n        event.stopPropagation();\n        return;\n      }\n    } else if (keyCode === KeyCode.ESC) {\n      if (state.open) {\n        _this8.setOpenState(false);\n\n        event.preventDefault();\n        event.stopPropagation();\n      }\n\n      return;\n    }\n  };\n\n  this.onSelect = function (selectedKeys, info) {\n    var item = info.node;\n    var value = _this8.state.value;\n    var props = _this8.props;\n    var selectedValue = getValuePropValue(item);\n\n    var selectedLabel = _this8.getLabelFromNode(item);\n\n    var checkableSelect = props.treeCheckable && info.event === 'select';\n    var event = selectedValue;\n\n    if (_this8.isLabelInValue()) {\n      event = {\n        value: event,\n        label: selectedLabel\n      };\n    }\n\n    if (info.selected === false) {\n      _this8.onDeselect(info);\n\n      if (!checkableSelect) return;\n    }\n\n    props.onSelect(event, item, info);\n    var checkEvt = info.event === 'check';\n\n    if (isMultiple(props)) {\n      _this8.clearSearchInput();\n\n      if (checkEvt) {\n        value = _this8.getCheckedNodes(info, props).map(function (n) {\n          return {\n            value: getValuePropValue(n),\n            label: _this8.getLabelFromNode(n)\n          };\n        });\n      } else {\n        if (value.some(function (i) {\n          return i.value === selectedValue;\n        })) {\n          return;\n        }\n\n        value = value.concat([{\n          value: selectedValue,\n          label: selectedLabel\n        }]);\n      }\n    } else {\n      if (value.length && value[0].value === selectedValue) {\n        _this8.setOpenState(false);\n\n        return;\n      }\n\n      value = [{\n        value: selectedValue,\n        label: selectedLabel\n      }];\n\n      _this8.setOpenState(false);\n    }\n\n    var extraInfo = {\n      triggerValue: selectedValue,\n      triggerNode: item\n    };\n\n    if (checkEvt) {\n      extraInfo.checked = info.checked; // if inputValue existing, tree is checkStrictly\n\n      extraInfo.allCheckedNodes = props.treeCheckStrictly || _this8.state.inputValue ? info.checkedNodes : flatToHierarchy(info.checkedNodesPositions);\n      _this8._checkedNodes = info.checkedNodesPositions;\n      var _tree = _this8.trigger.popupEle;\n      _this8._treeNodesStates = _tree.checkKeys;\n    } else {\n      extraInfo.selected = info.selected;\n    }\n\n    _this8.fireChange(value, extraInfo);\n\n    if (props.inputValue === null) {\n      _this8.setState({\n        inputValue: ''\n      });\n    }\n  };\n\n  this.onDeselect = function (info) {\n    _this8.removeSelected(getValuePropValue(info.node));\n\n    if (!isMultiple(_this8.props)) {\n      _this8.setOpenState(false);\n    } else {\n      _this8.clearSearchInput();\n    }\n  };\n\n  this.onPlaceholderClick = function () {\n    _this8.getInputDOMNode().focus();\n  };\n\n  this.onClearSelection = function (event) {\n    var props = _this8.props;\n    var state = _this8.state;\n\n    if (props.disabled) {\n      return;\n    }\n\n    event.stopPropagation();\n    _this8._cacheTreeNodesStates = 'no';\n    _this8._checkedNodes = [];\n\n    if (state.inputValue || state.value.length) {\n      _this8.setOpenState(false);\n\n      if (typeof props.inputValue === 'undefined') {\n        _this8.setState({\n          inputValue: ''\n        }, function () {\n          _this8.fireChange([]);\n        });\n      } else {\n        _this8.fireChange([]);\n      }\n    }\n  };\n\n  this.onChoiceAnimationLeave = function () {\n    _this8.forcePopupAlign();\n  };\n\n  this.forcePopupAlign = function () {\n    _this8.trigger.trigger.forcePopupAlign();\n  };\n};\n\nSelect.SHOW_ALL = SHOW_ALL;\nSelect.SHOW_PARENT = SHOW_PARENT;\nSelect.SHOW_CHILD = SHOW_CHILD;\nexport default Select;","map":{"version":3,"sources":["/Users/administrator/Desktop/DrChain/drchain_frontend/drchain/node_modules/rc-tree-select/es/Select.js"],"names":["_classCallCheck","_possibleConstructorReturn","_inherits","_extends","_objectWithoutProperties","React","Component","ReactDOM","KeyCode","classnames","Animate","getPropValue","getValuePropValue","isMultiple","toArray","UNSELECTABLE_ATTRIBUTE","UNSELECTABLE_STYLE","preventDefaultEvent","getTreeNodesStates","flatToHierarchy","filterParentPosition","isPositionPrefix","labelCompatible","loopAllChildren","filterAllCheckedData","processSimpleTreeData","saveRef","toTitle","SelectTrigger","_TreeNode","SHOW_ALL","SHOW_PARENT","SHOW_CHILD","SelectPropTypes","noop","filterFn","input","child","String","props","treeNodeFilterProp","indexOf","loopTreeData","data","level","arguments","length","undefined","treeCheckable","map","item","index","pos","label","value","disabled","key","hasOwnProperty","selectable","children","isLeaf","otherProps","title","ret","createElement","Select","_Component","_this","call","_initialiseProps","defaultValue","renderedTreeData","renderTreeData","addLabelToValue","getValue","inputValue","state","open","defaultOpen","focused","prototype","componentDidMount","_props2","autoFocus","inputNode","getInputDOMNode","style","width","inputMirrorInstance","clientWidth","focus","componentWillReceiveProps","nextProps","_cacheTreeNodesStates","_savedValue","treeData","_treeNodesStates","setState","forcePopupAlign","componentWillUpdate","componentDidUpdate","componentWillUnmount","clearDelayTimer","dropdownContainer","unmountComponentAtNode","document","body","removeChild","getLabelFromNode","treeNodeLabelProp","getLabelFromProps","_this2","getDropdownContainer","appendChild","getSearchPlaceholderElement","hidden","placeholder","searchPlaceholder","display","onClick","onPlaceholderClick","className","prefixCls","getInputElement","_props3","ref","onChange","onInputChange","onKeyDown","onInputKeyDown","role","inputInstance","getPopupDOMNode","trigger","getPopupComponentRefs","getPopupEleRefs","_props","val","_this3","init","_strict","treeCheckStrictly","halfCheckedValues","forEach","i","halfChecked","push","checkedTreeNodes","_cachetreeData","_checkedNodes","checkedNodes","mapLabVal","arr","itemObj","node","checkedValues","showCheckedStrategy","posArr","filter","getCheckedNodes","info","checkedNodesPositions","n","getDeselectedValue","selectedValue","unCheckPos","newVals","newCkTns","nv","fireChange","triggerValue","clear","setOpenState","needFocus","_this4","documentClickClose","onDropdownVisibleChange","Promise","resolve","then","activeElement","selection","clearSearchInput","value_","_this5","isLabelInValue","v","Object","toString","delayTimer","clearTimeout","removeSelected","selectedVal","e","stopPropagation","singleValue","canMultiple","event","onDeselect","some","openIfHasChildren","Children","count","_this6","extraInfo","vals","sv","every","ex","preValue","concat","labs","vls","allCheckedNodes","_vls","checked","ii","includeVal","ind","splice","_props4","labelInValue","blur","renderTopControlNode","_this7","choiceTransitionName","maxTagTextLength","multiple","innerNode","selectedValueNodes","content","slice","onMouseDown","component","transitionName","onLeave","onChoiceAnimationLeave","validProps","treeDataSimpleMode","simpleFormat","id","pId","rootPId","render","_rootCls","allowClear","ctrlNode","extraSelectionProps","tabIndex","rootCls","onClearSelection","treeNodes","visible","inputElement","getPopupContainer","onSelect","onBlur","onFocus","showArrow","outline","propTypes","defaultProps","filterTreeNode","showSearch","onSearch","dropdownMatchSelectWidth","dropdownStyle","notFoundContent","treeIcon","treeLine","treeDefaultExpandAll","_this8","target","keyCode","ENTER","DOWN","preventDefault","BACKSPACE","popValue","pop","ESC","selectedKeys","selectedLabel","checkableSelect","selected","checkEvt","triggerNode","_tree","popupEle","checkKeys"],"mappings":"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","sourcesContent":["import _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport _extends from 'babel-runtime/helpers/extends';\nimport _objectWithoutProperties from 'babel-runtime/helpers/objectWithoutProperties';\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport KeyCode from 'rc-util/es/KeyCode';\nimport classnames from 'classnames';\nimport Animate from 'rc-animate';\nimport { getPropValue, getValuePropValue, isMultiple, toArray, UNSELECTABLE_ATTRIBUTE, UNSELECTABLE_STYLE, preventDefaultEvent, getTreeNodesStates, flatToHierarchy, filterParentPosition, isPositionPrefix, labelCompatible, loopAllChildren, filterAllCheckedData, processSimpleTreeData, saveRef, toTitle } from './util';\nimport SelectTrigger from './SelectTrigger';\nimport _TreeNode from './TreeNode';\nimport { SHOW_ALL, SHOW_PARENT, SHOW_CHILD } from './strategies';\nimport { SelectPropTypes } from './PropTypes';\n\nfunction noop() {}\n\nfunction filterFn(input, child) {\n  return String(getPropValue(child, labelCompatible(this.props.treeNodeFilterProp))).indexOf(input) > -1;\n}\n\nfunction loopTreeData(data) {\n  var level = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var treeCheckable = arguments[2];\n\n  return data.map(function (item, index) {\n    var pos = level + '-' + index;\n\n    var label = item.label,\n        value = item.value,\n        disabled = item.disabled,\n        key = item.key,\n        hasOwnProperty = item.hasOwnProperty,\n        selectable = item.selectable,\n        children = item.children,\n        isLeaf = item.isLeaf,\n        otherProps = _objectWithoutProperties(item, ['label', 'value', 'disabled', 'key', 'hasOwnProperty', 'selectable', 'children', 'isLeaf']);\n\n    var props = _extends({\n      value: value,\n      title: label,\n      // value: value || String(key || label), // cause onChange callback error\n      key: key || value || pos,\n      disabled: disabled || false,\n      selectable: selectable === false ? selectable : !treeCheckable\n    }, otherProps);\n    var ret = void 0;\n    if (children && children.length) {\n      ret = React.createElement(\n        _TreeNode,\n        props,\n        loopTreeData(children, pos, treeCheckable)\n      );\n    } else {\n      ret = React.createElement(_TreeNode, _extends({}, props, { isLeaf: isLeaf }));\n    }\n    return ret;\n  });\n}\n\nvar Select = function (_Component) {\n  _inherits(Select, _Component);\n\n  function Select(props) {\n    _classCallCheck(this, Select);\n\n    var _this = _possibleConstructorReturn(this, _Component.call(this, props));\n\n    _initialiseProps.call(_this);\n\n    var value = [];\n    if ('value' in props) {\n      value = toArray(props.value);\n    } else {\n      value = toArray(props.defaultValue);\n    }\n    // save parsed treeData, for performance (treeData may be very big)\n    _this.renderedTreeData = _this.renderTreeData();\n    value = _this.addLabelToValue(props, value);\n    value = _this.getValue(props, value, props.inputValue ? '__strict' : true);\n    var inputValue = props.inputValue || '';\n    // if (props.combobox) {\n    //   inputValue = value.length ? String(value[0].value) : '';\n    // }\n    _this.state = {\n      value: value,\n      inputValue: inputValue,\n      open: props.open || props.defaultOpen,\n      focused: false\n    };\n    return _this;\n  }\n\n  Select.prototype.componentDidMount = function componentDidMount() {\n    var _props2 = this.props,\n        autoFocus = _props2.autoFocus,\n        disabled = _props2.disabled;\n\n    if (isMultiple(this.props)) {\n      var inputNode = this.getInputDOMNode();\n      if (inputNode.value) {\n        inputNode.style.width = '';\n        inputNode.style.width = this.inputMirrorInstance.clientWidth + 'px';\n      } else {\n        inputNode.style.width = '';\n      }\n    }\n    if (autoFocus && !disabled) {\n      this.focus();\n    }\n  };\n\n  Select.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {\n    // save parsed treeData, for performance (treeData may be very big)\n    this.renderedTreeData = this.renderTreeData(nextProps);\n    // Detecting whether the object of `onChange`'s argument  is old ref.\n    // Better to do a deep equal later.\n    this._cacheTreeNodesStates = this._cacheTreeNodesStates !== 'no' && this._savedValue && nextProps.value === this._savedValue;\n    if (this.props.treeData !== nextProps.treeData || this.props.children !== nextProps.children) {\n      // refresh this._treeNodesStates cache\n      this._treeNodesStates = getTreeNodesStates(this.renderedTreeData || nextProps.children, this.state.value.map(function (item) {\n        return item.value;\n      }));\n    }\n    if ('value' in nextProps) {\n      var value = toArray(nextProps.value);\n      value = this.addLabelToValue(nextProps, value);\n      value = this.getValue(nextProps, value);\n      this.setState({\n        value: value\n      }, this.forcePopupAlign);\n      // if (nextProps.combobox) {\n      //   this.setState({\n      //     inputValue: value.length ? String(value[0].key) : '',\n      //   });\n      // }\n    }\n    if (nextProps.inputValue !== this.props.inputValue) {\n      this.setState({\n        inputValue: nextProps.inputValue\n      });\n    }\n    if ('open' in nextProps) {\n      this.setState({\n        open: nextProps.open\n      });\n    }\n  };\n\n  Select.prototype.componentWillUpdate = function componentWillUpdate(nextProps) {\n    if (this._savedValue && nextProps.value && nextProps.value !== this._savedValue && nextProps.value === this.props.value) {\n      this._cacheTreeNodesStates = false;\n      this.getValue(nextProps, this.addLabelToValue(nextProps, toArray(nextProps.value)));\n    }\n  };\n\n  Select.prototype.componentDidUpdate = function componentDidUpdate() {\n    var state = this.state;\n    var props = this.props;\n    if (state.open && isMultiple(props)) {\n      var inputNode = this.getInputDOMNode();\n      if (inputNode.value) {\n        inputNode.style.width = '';\n        inputNode.style.width = this.inputMirrorInstance.clientWidth + 'px';\n      } else {\n        inputNode.style.width = '';\n      }\n    }\n  };\n\n  Select.prototype.componentWillUnmount = function componentWillUnmount() {\n    this.clearDelayTimer();\n    if (this.dropdownContainer) {\n      ReactDOM.unmountComponentAtNode(this.dropdownContainer);\n      document.body.removeChild(this.dropdownContainer);\n      this.dropdownContainer = null;\n    }\n  };\n\n  // combobox ignore\n\n\n  Select.prototype.getLabelFromNode = function getLabelFromNode(child) {\n    return getPropValue(child, this.props.treeNodeLabelProp);\n  };\n\n  Select.prototype.getLabelFromProps = function getLabelFromProps(props, value) {\n    var _this2 = this;\n\n    if (value === undefined) {\n      return null;\n    }\n    var label = null;\n    loopAllChildren(this.renderedTreeData || props.children, function (item) {\n      if (getValuePropValue(item) === value) {\n        label = _this2.getLabelFromNode(item);\n      }\n    });\n    if (label === null) {\n      return value;\n    }\n    return label;\n  };\n\n  Select.prototype.getDropdownContainer = function getDropdownContainer() {\n    if (!this.dropdownContainer) {\n      this.dropdownContainer = document.createElement('div');\n      document.body.appendChild(this.dropdownContainer);\n    }\n    return this.dropdownContainer;\n  };\n\n  Select.prototype.getSearchPlaceholderElement = function getSearchPlaceholderElement(hidden) {\n    var props = this.props;\n    var placeholder = void 0;\n    if (isMultiple(props)) {\n      placeholder = props.placeholder || props.searchPlaceholder;\n    } else {\n      placeholder = props.searchPlaceholder;\n    }\n    if (placeholder) {\n      return React.createElement(\n        'span',\n        {\n          style: { display: hidden ? 'none' : 'block' },\n          onClick: this.onPlaceholderClick,\n          className: props.prefixCls + '-search__field__placeholder'\n        },\n        placeholder\n      );\n    }\n    return null;\n  };\n\n  Select.prototype.getInputElement = function getInputElement() {\n    var inputValue = this.state.inputValue;\n    var _props3 = this.props,\n        prefixCls = _props3.prefixCls,\n        disabled = _props3.disabled;\n\n    return React.createElement(\n      'span',\n      { className: prefixCls + '-search__field__wrap' },\n      React.createElement('input', {\n        ref: saveRef(this, 'inputInstance'),\n        onChange: this.onInputChange,\n        onKeyDown: this.onInputKeyDown,\n        value: inputValue,\n        disabled: disabled,\n        className: prefixCls + '-search__field',\n        role: 'textbox'\n      }),\n      React.createElement(\n        'span',\n        {\n          ref: saveRef(this, 'inputMirrorInstance'),\n          className: prefixCls + '-search__field__mirror'\n        },\n        inputValue,\n        '\\xA0'\n      ),\n      isMultiple(this.props) ? null : this.getSearchPlaceholderElement(!!inputValue)\n    );\n  };\n\n  Select.prototype.getInputDOMNode = function getInputDOMNode() {\n    return this.inputInstance;\n  };\n\n  Select.prototype.getPopupDOMNode = function getPopupDOMNode() {\n    return this.trigger.getPopupDOMNode();\n  };\n\n  Select.prototype.getPopupComponentRefs = function getPopupComponentRefs() {\n    return this.trigger.getPopupEleRefs();\n  };\n\n  Select.prototype.getValue = function getValue(_props, val) {\n    var _this3 = this;\n\n    var init = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n\n    var value = val;\n    // if inputValue existing, tree is checkStrictly\n    var _strict = init === '__strict' || init && (this.state && this.state.inputValue || this.props.inputValue !== _props.inputValue);\n    if (_props.treeCheckable && (_props.treeCheckStrictly || _strict)) {\n      this.halfCheckedValues = [];\n      value = [];\n      val.forEach(function (i) {\n        if (!i.halfChecked) {\n          value.push(i);\n        } else {\n          _this3.halfCheckedValues.push(i);\n        }\n      });\n    }\n    // if (!(_props.treeCheckable && !_props.treeCheckStrictly)) {\n    if (!!!_props.treeCheckable || _props.treeCheckable && (_props.treeCheckStrictly || _strict)) {\n      return value;\n    }\n    var checkedTreeNodes = void 0;\n    if (this._cachetreeData && this._cacheTreeNodesStates && this._checkedNodes && this.state && !this.state.inputValue) {\n      this.checkedTreeNodes = checkedTreeNodes = this._checkedNodes;\n    } else {\n      /**\n       * Note: `this._treeNodesStates`'s treeNodesStates must correspond to nodes of the\n       * final tree (`processTreeNode` function from SelectTrigger.jsx produce the final tree).\n       *\n       * And, `this._treeNodesStates` from `onSelect` is previous value,\n       * so it perhaps only have a few nodes, but the newly filtered tree can have many nodes,\n       * thus, you cannot use previous _treeNodesStates.\n       */\n      // getTreeNodesStates is not effective.\n      this._treeNodesStates = getTreeNodesStates(this.renderedTreeData || _props.children, value.map(function (item) {\n        return item.value;\n      }));\n      this.checkedTreeNodes = checkedTreeNodes = this._treeNodesStates.checkedNodes;\n    }\n    var mapLabVal = function mapLabVal(arr) {\n      return arr.map(function (itemObj) {\n        return {\n          value: getValuePropValue(itemObj.node),\n          label: getPropValue(itemObj.node, _props.treeNodeLabelProp)\n        };\n      });\n    };\n    var props = this.props;\n    var checkedValues = [];\n    if (props.showCheckedStrategy === SHOW_ALL) {\n      checkedValues = mapLabVal(checkedTreeNodes);\n    } else if (props.showCheckedStrategy === SHOW_PARENT) {\n      var posArr = filterParentPosition(checkedTreeNodes.map(function (itemObj) {\n        return itemObj.pos;\n      }));\n      checkedValues = mapLabVal(checkedTreeNodes.filter(function (itemObj) {\n        return posArr.indexOf(itemObj.pos) !== -1;\n      }));\n    } else {\n      checkedValues = mapLabVal(checkedTreeNodes.filter(function (itemObj) {\n        return !itemObj.node.props.children;\n      }));\n    }\n    return checkedValues;\n  };\n\n  Select.prototype.getCheckedNodes = function getCheckedNodes(info, props) {\n    // TODO treeCheckable does not support tags/dynamic\n    var checkedNodes = info.checkedNodes;\n    // if inputValue existing, tree is checkStrictly\n\n    if (props.treeCheckStrictly || this.state.inputValue) {\n      return checkedNodes;\n    }\n    var checkedNodesPositions = info.checkedNodesPositions;\n    if (props.showCheckedStrategy === SHOW_ALL) {\n      checkedNodes = checkedNodes;\n    } else if (props.showCheckedStrategy === SHOW_PARENT) {\n      var posArr = filterParentPosition(checkedNodesPositions.map(function (itemObj) {\n        return itemObj.pos;\n      }));\n      checkedNodes = checkedNodesPositions.filter(function (itemObj) {\n        return posArr.indexOf(itemObj.pos) !== -1;\n      }).map(function (itemObj) {\n        return itemObj.node;\n      });\n    } else {\n      checkedNodes = checkedNodes.filter(function (n) {\n        return !n.props.children;\n      });\n    }\n    return checkedNodes;\n  };\n\n  Select.prototype.getDeselectedValue = function getDeselectedValue(selectedValue) {\n    var checkedTreeNodes = this.checkedTreeNodes;\n    var unCheckPos = void 0;\n    checkedTreeNodes.forEach(function (itemObj) {\n      if (itemObj.node.props.value === selectedValue) {\n        unCheckPos = itemObj.pos;\n      }\n    });\n    var newVals = [];\n    var newCkTns = [];\n    checkedTreeNodes.forEach(function (itemObj) {\n      if (isPositionPrefix(itemObj.pos, unCheckPos) || isPositionPrefix(unCheckPos, itemObj.pos)) {\n        // Filter ancestral and children nodes when uncheck a node.\n        return;\n      }\n      newCkTns.push(itemObj);\n      newVals.push(itemObj.node.props.value);\n    });\n    this.checkedTreeNodes = this._checkedNodes = newCkTns;\n    var nv = this.state.value.filter(function (val) {\n      return newVals.indexOf(val.value) !== -1;\n    });\n    this.fireChange(nv, { triggerValue: selectedValue, clear: true });\n  };\n\n  Select.prototype.setOpenState = function setOpenState(open, needFocus) {\n    var _this4 = this;\n\n    var documentClickClose = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n    this.clearDelayTimer();\n    var props = this.props;\n    // can not optimize, if children is empty\n    // if (this.state.open === open) {\n    //   return;\n    // }\n\n    if (!this.props.onDropdownVisibleChange(open, { documentClickClose: documentClickClose })) {\n      return;\n    }\n    this.setState({\n      open: open\n    }, function () {\n      if (needFocus || open) {\n        // Input dom init after first time component render\n        // Add delay for this to get focus\n        Promise.resolve().then(function () {\n          if (open || isMultiple(props)) {\n            var input = _this4.getInputDOMNode();\n            if (input && document.activeElement !== input) {\n              input.focus();\n            }\n          } else if (_this4.selection) {\n            _this4.selection.focus();\n          }\n        });\n      }\n    });\n  };\n\n  Select.prototype.clearSearchInput = function clearSearchInput() {\n    this.getInputDOMNode().focus();\n    if (!('inputValue' in this.props)) {\n      this.setState({ inputValue: '' });\n    }\n  };\n\n  Select.prototype.addLabelToValue = function addLabelToValue(props, value_) {\n    var _this5 = this;\n\n    var value = value_;\n    if (this.isLabelInValue()) {\n      value.forEach(function (v, i) {\n        if (Object.prototype.toString.call(value[i]) !== '[object Object]') {\n          value[i] = {\n            value: '',\n            label: ''\n          };\n          return;\n        }\n        v.label = v.label || _this5.getLabelFromProps(props, v.value);\n      });\n    } else {\n      value = value.map(function (v) {\n        return {\n          value: v,\n          label: _this5.getLabelFromProps(props, v)\n        };\n      });\n    }\n    return value;\n  };\n\n  Select.prototype.clearDelayTimer = function clearDelayTimer() {\n    if (this.delayTimer) {\n      clearTimeout(this.delayTimer);\n      this.delayTimer = null;\n    }\n  };\n\n  Select.prototype.removeSelected = function removeSelected(selectedVal, e) {\n    var props = this.props;\n    if (props.disabled) {\n      return;\n    }\n\n    // Do not trigger Trigger popup\n    if (e && e.stopPropagation) {\n      e.stopPropagation();\n    }\n\n    this._cacheTreeNodesStates = 'no';\n    if (props.treeCheckable && (props.showCheckedStrategy === SHOW_ALL || props.showCheckedStrategy === SHOW_PARENT) && !(props.treeCheckStrictly || this.state.inputValue)) {\n      this.getDeselectedValue(selectedVal);\n      return;\n    }\n    // click the node's `x`(in select box), likely trigger the TreeNode's `unCheck` event,\n    // cautiously, they are completely different, think about it, the tree may not render at first,\n    // but the nodes in select box are ready.\n    var label = void 0;\n    var value = this.state.value.filter(function (singleValue) {\n      if (singleValue.value === selectedVal) {\n        label = singleValue.label;\n      }\n      return singleValue.value !== selectedVal;\n    });\n    var canMultiple = isMultiple(props);\n\n    if (canMultiple) {\n      var event = selectedVal;\n      if (this.isLabelInValue()) {\n        event = {\n          value: selectedVal,\n          label: label\n        };\n      }\n      props.onDeselect(event);\n    }\n    if (props.treeCheckable) {\n      if (this.checkedTreeNodes && this.checkedTreeNodes.length) {\n        this.checkedTreeNodes = this._checkedNodes = this.checkedTreeNodes.filter(function (item) {\n          return value.some(function (i) {\n            return i.value === item.node.props.value;\n          });\n        });\n      }\n    }\n\n    this.fireChange(value, { triggerValue: selectedVal, clear: true });\n  };\n\n  Select.prototype.openIfHasChildren = function openIfHasChildren() {\n    var props = this.props;\n    if (React.Children.count(props.children) || !isMultiple(props)) {\n      this.setOpenState(true);\n    }\n  };\n\n  Select.prototype.fireChange = function fireChange(value) {\n    var _this6 = this;\n\n    var extraInfo = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    var props = this.props;\n    var vals = value.map(function (i) {\n      return i.value;\n    });\n    var sv = this.state.value.map(function (i) {\n      return i.value;\n    });\n    if (vals.length !== sv.length || !vals.every(function (val, index) {\n      return sv[index] === val;\n    })) {\n      var ex = _extends({\n        preValue: [].concat(this.state.value)\n      }, extraInfo);\n      var labs = null;\n      var vls = value;\n      if (!this.isLabelInValue()) {\n        labs = value.map(function (i) {\n          return i.label;\n        });\n        vls = vls.map(function (v) {\n          return v.value;\n        });\n      } else if (this.halfCheckedValues && this.halfCheckedValues.length) {\n        this.halfCheckedValues.forEach(function (i) {\n          if (!vls.some(function (v) {\n            return v.value === i.value;\n          })) {\n            vls.push(i);\n          }\n        });\n      }\n      if (props.treeCheckable && ex.clear) {\n        var treeData = this.renderedTreeData || props.children;\n        ex.allCheckedNodes = flatToHierarchy(filterAllCheckedData(vals, treeData));\n      }\n      if (props.treeCheckable && this.state.inputValue) {\n        var _vls = [].concat(this.state.value);\n        if (ex.checked) {\n          value.forEach(function (i) {\n            if (_vls.every(function (ii) {\n              return ii.value !== i.value;\n            })) {\n              _vls.push(_extends({}, i));\n            }\n          });\n        } else {\n          var index = void 0;\n          var includeVal = _vls.some(function (i, ind) {\n            if (i.value === ex.triggerValue) {\n              index = ind;\n              return true;\n            }\n          });\n          if (includeVal) {\n            _vls.splice(index, 1);\n          }\n        }\n        vls = _vls;\n        if (!this.isLabelInValue()) {\n          labs = _vls.map(function (v) {\n            return v.label;\n          });\n          vls = _vls.map(function (v) {\n            return v.value;\n          });\n        }\n      }\n      this._savedValue = isMultiple(props) ? vls : vls[0];\n      props.onChange(this._savedValue, labs, ex);\n      if (!('value' in props)) {\n        this._cacheTreeNodesStates = false;\n        this.setState({\n          value: this.getValue(props, toArray(this._savedValue).map(function (v, i) {\n            return _this6.isLabelInValue() ? v : {\n              value: v,\n              label: labs && labs[i]\n            };\n          }))\n        }, this.forcePopupAlign);\n      }\n    }\n  };\n\n  Select.prototype.isLabelInValue = function isLabelInValue() {\n    var _props4 = this.props,\n        treeCheckable = _props4.treeCheckable,\n        treeCheckStrictly = _props4.treeCheckStrictly,\n        labelInValue = _props4.labelInValue;\n\n    if (treeCheckable && treeCheckStrictly) {\n      return true;\n    }\n    return labelInValue || false;\n  };\n\n  Select.prototype.focus = function focus() {\n    if (!isMultiple(this.props)) {\n      this.selection.focus();\n    } else {\n      this.getInputDOMNode().focus();\n    }\n  };\n\n  Select.prototype.blur = function blur() {\n    if (!isMultiple(this.props)) {\n      this.selection.blur();\n    } else {\n      this.getInputDOMNode().blur();\n    }\n  };\n\n  Select.prototype.renderTopControlNode = function renderTopControlNode() {\n    var _this7 = this;\n\n    var value = this.state.value;\n\n    var props = this.props;\n    var choiceTransitionName = props.choiceTransitionName,\n        prefixCls = props.prefixCls,\n        maxTagTextLength = props.maxTagTextLength;\n\n    var multiple = isMultiple(props);\n\n    // single and not combobox, input is inside dropdown\n    if (!multiple) {\n      var innerNode = React.createElement(\n        'span',\n        {\n          key: 'placeholder',\n          className: prefixCls + '-selection__placeholder'\n        },\n        props.placeholder\n      );\n      if (value.length) {\n        innerNode = React.createElement(\n          'span',\n          {\n            key: 'value',\n            title: toTitle(value[0].label),\n            className: prefixCls + '-selection-selected-value'\n          },\n          value[0].label\n        );\n      }\n      return React.createElement(\n        'span',\n        { className: prefixCls + '-selection__rendered' },\n        innerNode\n      );\n    }\n\n    var selectedValueNodes = value.map(function (singleValue) {\n      var content = singleValue.label;\n      var title = content;\n      if (maxTagTextLength && typeof content === 'string' && content.length > maxTagTextLength) {\n        content = content.slice(0, maxTagTextLength) + '...';\n      }\n      return React.createElement(\n        'li',\n        _extends({\n          style: UNSELECTABLE_STYLE\n        }, UNSELECTABLE_ATTRIBUTE, {\n          onMouseDown: preventDefaultEvent,\n          className: prefixCls + '-selection__choice',\n          key: singleValue.value,\n          title: toTitle(title)\n        }),\n        React.createElement('span', {\n          className: prefixCls + '-selection__choice__remove',\n          onClick: function onClick(event) {\n            _this7.removeSelected(singleValue.value, event);\n          }\n        }),\n        React.createElement(\n          'span',\n          { className: prefixCls + '-selection__choice__content' },\n          content\n        )\n      );\n    });\n\n    selectedValueNodes.push(React.createElement(\n      'li',\n      {\n        className: prefixCls + '-search ' + prefixCls + '-search--inline',\n        key: '__input'\n      },\n      this.getInputElement()\n    ));\n    var className = prefixCls + '-selection__rendered';\n    if (choiceTransitionName) {\n      return React.createElement(\n        Animate,\n        {\n          className: className,\n          component: 'ul',\n          transitionName: choiceTransitionName,\n          onLeave: this.onChoiceAnimationLeave\n        },\n        selectedValueNodes\n      );\n    }\n    return React.createElement(\n      'ul',\n      { className: className },\n      selectedValueNodes\n    );\n  };\n\n  Select.prototype.renderTreeData = function renderTreeData(props) {\n    var validProps = props || this.props;\n    if (validProps.treeData) {\n      if (props && props.treeData === this.props.treeData && this.renderedTreeData) {\n        // cache and use pre data.\n        this._cachetreeData = true;\n        return this.renderedTreeData;\n      }\n      this._cachetreeData = false;\n      var treeData = [].concat(validProps.treeData);\n      // process treeDataSimpleMode\n      if (validProps.treeDataSimpleMode) {\n        var simpleFormat = {\n          id: 'id',\n          pId: 'pId',\n          rootPId: null\n        };\n        if (Object.prototype.toString.call(validProps.treeDataSimpleMode) === '[object Object]') {\n          simpleFormat = _extends({}, simpleFormat, validProps.treeDataSimpleMode);\n        }\n        treeData = processSimpleTreeData(treeData, simpleFormat);\n      }\n      return loopTreeData(treeData, undefined, this.props.treeCheckable);\n    }\n  };\n\n  Select.prototype.render = function render() {\n    var _rootCls;\n\n    var props = this.props;\n    var multiple = isMultiple(props);\n    var state = this.state;\n    var className = props.className,\n        disabled = props.disabled,\n        allowClear = props.allowClear,\n        prefixCls = props.prefixCls;\n\n    var ctrlNode = this.renderTopControlNode();\n    var extraSelectionProps = {};\n    if (!multiple) {\n      extraSelectionProps = {\n        onKeyDown: this.onKeyDown,\n        tabIndex: 0\n      };\n    }\n    var rootCls = (_rootCls = {}, _rootCls[className] = !!className, _rootCls[prefixCls] = 1, _rootCls[prefixCls + '-open'] = state.open, _rootCls[prefixCls + '-focused'] = state.open || state.focused, _rootCls[prefixCls + '-disabled'] = disabled, _rootCls[prefixCls + '-enabled'] = !disabled, _rootCls[prefixCls + '-allow-clear'] = !!props.allowClear, _rootCls);\n\n    var clear = React.createElement('span', {\n      key: 'clear',\n      className: prefixCls + '-selection__clear',\n      onClick: this.onClearSelection\n    });\n    return React.createElement(\n      SelectTrigger,\n      _extends({}, props, {\n        treeNodes: props.children,\n        treeData: this.renderedTreeData,\n        _cachetreeData: this._cachetreeData,\n        _treeNodesStates: this._treeNodesStates,\n        halfCheckedValues: this.halfCheckedValues,\n        multiple: multiple,\n        disabled: disabled,\n        visible: state.open,\n        inputValue: state.inputValue,\n        inputElement: this.getInputElement(),\n        value: state.value,\n        onDropdownVisibleChange: this.onDropdownVisibleChange,\n        getPopupContainer: props.getPopupContainer,\n        onSelect: this.onSelect,\n        ref: saveRef(this, 'trigger')\n      }),\n      React.createElement(\n        'span',\n        {\n          style: props.style,\n          onClick: props.onClick,\n          className: classnames(rootCls),\n          onBlur: props.onBlur,\n          onFocus: props.onFocus\n        },\n        React.createElement(\n          'span',\n          _extends({\n            ref: saveRef(this, 'selection'),\n            key: 'selection',\n            className: prefixCls + '-selection\\n            ' + prefixCls + '-selection--' + (multiple ? 'multiple' : 'single'),\n            role: 'combobox',\n            'aria-autocomplete': 'list',\n            'aria-haspopup': 'true',\n            'aria-expanded': state.open\n          }, extraSelectionProps),\n          ctrlNode,\n          allowClear && this.state.value.length && this.state.value[0].value ? clear : null,\n          multiple || !props.showArrow ? null : React.createElement(\n            'span',\n            {\n              key: 'arrow',\n              className: prefixCls + '-arrow',\n              style: { outline: 'none' }\n            },\n            React.createElement('b', null)\n          ),\n          multiple ? this.getSearchPlaceholderElement(!!this.state.inputValue || this.state.value.length) : null\n        )\n      )\n    );\n  };\n\n  return Select;\n}(Component);\n\nSelect.propTypes = SelectPropTypes;\nSelect.defaultProps = {\n  prefixCls: 'rc-tree-select',\n  filterTreeNode: filterFn, // [Legacy] TODO: Set false and filter not hide?\n  showSearch: true,\n  allowClear: false,\n  placeholder: '',\n  searchPlaceholder: '',\n  labelInValue: false,\n  onClick: noop,\n  onChange: noop,\n  onSelect: noop,\n  onDeselect: noop,\n  onSearch: noop,\n  showArrow: true,\n  dropdownMatchSelectWidth: true,\n  dropdownStyle: {},\n  onDropdownVisibleChange: function onDropdownVisibleChange() {\n    return true;\n  },\n  notFoundContent: 'Not Found',\n  showCheckedStrategy: SHOW_CHILD,\n  // skipHandleInitValue: false, // Deprecated (use treeCheckStrictly)\n  treeCheckStrictly: false,\n  treeIcon: false,\n  treeLine: false,\n  treeDataSimpleMode: false,\n  treeDefaultExpandAll: false,\n  treeCheckable: false,\n  treeNodeFilterProp: 'value',\n  treeNodeLabelProp: 'title'\n};\n\nvar _initialiseProps = function _initialiseProps() {\n  var _this8 = this;\n\n  this.onInputChange = function (event) {\n    var val = event.target.value;\n    var props = _this8.props;\n\n    _this8.setState({\n      inputValue: val,\n      open: true\n    }, _this8.forcePopupAlign);\n    if (props.treeCheckable && !val) {\n      _this8.setState({\n        value: _this8.getValue(props, [].concat(_this8.state.value), false)\n      });\n    }\n    props.onSearch(val);\n  };\n\n  this.onDropdownVisibleChange = function (open) {\n    // selection inside combobox cause click\n    if (!open && document.activeElement === _this8.getInputDOMNode()) {\n      // return;\n    }\n    _this8.setOpenState(open, undefined, !open);\n  };\n\n  this.onKeyDown = function (event) {\n    var props = _this8.props;\n    if (props.disabled) {\n      return;\n    }\n    var keyCode = event.keyCode;\n    if (_this8.state.open && !_this8.getInputDOMNode()) {\n      _this8.onInputKeyDown(event);\n    } else if (keyCode === KeyCode.ENTER || keyCode === KeyCode.DOWN) {\n      _this8.setOpenState(true);\n      event.preventDefault();\n    }\n  };\n\n  this.onInputKeyDown = function (event) {\n    var props = _this8.props;\n    if (props.disabled) {\n      return;\n    }\n    var state = _this8.state;\n    var keyCode = event.keyCode;\n    if (isMultiple(props) && !event.target.value && keyCode === KeyCode.BACKSPACE) {\n      var value = state.value.concat();\n      if (value.length) {\n        var popValue = value.pop();\n        _this8.removeSelected(_this8.isLabelInValue() ? popValue : popValue.value);\n      }\n      return;\n    }\n    if (keyCode === KeyCode.DOWN) {\n      if (!state.open) {\n        _this8.openIfHasChildren();\n        event.preventDefault();\n        event.stopPropagation();\n        return;\n      }\n    } else if (keyCode === KeyCode.ESC) {\n      if (state.open) {\n        _this8.setOpenState(false);\n        event.preventDefault();\n        event.stopPropagation();\n      }\n      return;\n    }\n  };\n\n  this.onSelect = function (selectedKeys, info) {\n    var item = info.node;\n    var value = _this8.state.value;\n    var props = _this8.props;\n    var selectedValue = getValuePropValue(item);\n    var selectedLabel = _this8.getLabelFromNode(item);\n    var checkableSelect = props.treeCheckable && info.event === 'select';\n    var event = selectedValue;\n    if (_this8.isLabelInValue()) {\n      event = {\n        value: event,\n        label: selectedLabel\n      };\n    }\n    if (info.selected === false) {\n      _this8.onDeselect(info);\n      if (!checkableSelect) return;\n    }\n    props.onSelect(event, item, info);\n\n    var checkEvt = info.event === 'check';\n    if (isMultiple(props)) {\n      _this8.clearSearchInput();\n      if (checkEvt) {\n        value = _this8.getCheckedNodes(info, props).map(function (n) {\n          return {\n            value: getValuePropValue(n),\n            label: _this8.getLabelFromNode(n)\n          };\n        });\n      } else {\n        if (value.some(function (i) {\n          return i.value === selectedValue;\n        })) {\n          return;\n        }\n        value = value.concat([{\n          value: selectedValue,\n          label: selectedLabel\n        }]);\n      }\n    } else {\n      if (value.length && value[0].value === selectedValue) {\n        _this8.setOpenState(false);\n        return;\n      }\n      value = [{\n        value: selectedValue,\n        label: selectedLabel\n      }];\n      _this8.setOpenState(false);\n    }\n\n    var extraInfo = {\n      triggerValue: selectedValue,\n      triggerNode: item\n    };\n    if (checkEvt) {\n      extraInfo.checked = info.checked;\n      // if inputValue existing, tree is checkStrictly\n      extraInfo.allCheckedNodes = props.treeCheckStrictly || _this8.state.inputValue ? info.checkedNodes : flatToHierarchy(info.checkedNodesPositions);\n      _this8._checkedNodes = info.checkedNodesPositions;\n      var _tree = _this8.trigger.popupEle;\n      _this8._treeNodesStates = _tree.checkKeys;\n    } else {\n      extraInfo.selected = info.selected;\n    }\n\n    _this8.fireChange(value, extraInfo);\n    if (props.inputValue === null) {\n      _this8.setState({\n        inputValue: ''\n      });\n    }\n  };\n\n  this.onDeselect = function (info) {\n    _this8.removeSelected(getValuePropValue(info.node));\n    if (!isMultiple(_this8.props)) {\n      _this8.setOpenState(false);\n    } else {\n      _this8.clearSearchInput();\n    }\n  };\n\n  this.onPlaceholderClick = function () {\n    _this8.getInputDOMNode().focus();\n  };\n\n  this.onClearSelection = function (event) {\n    var props = _this8.props;\n    var state = _this8.state;\n    if (props.disabled) {\n      return;\n    }\n    event.stopPropagation();\n    _this8._cacheTreeNodesStates = 'no';\n    _this8._checkedNodes = [];\n    if (state.inputValue || state.value.length) {\n      _this8.setOpenState(false);\n      if (typeof props.inputValue === 'undefined') {\n        _this8.setState({\n          inputValue: ''\n        }, function () {\n          _this8.fireChange([]);\n        });\n      } else {\n        _this8.fireChange([]);\n      }\n    }\n  };\n\n  this.onChoiceAnimationLeave = function () {\n    _this8.forcePopupAlign();\n  };\n\n  this.forcePopupAlign = function () {\n    _this8.trigger.trigger.forcePopupAlign();\n  };\n};\n\nSelect.SHOW_ALL = SHOW_ALL;\nSelect.SHOW_PARENT = SHOW_PARENT;\nSelect.SHOW_CHILD = SHOW_CHILD;\n\nexport default Select;"]},"metadata":{},"sourceType":"module"}