{"ast":null,"code":"import _defineProperty from 'babel-runtime/helpers/defineProperty';\nimport _extends from 'babel-runtime/helpers/extends';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport * as React from 'react';\nimport { findDOMNode } from 'react-dom';\nimport RcMenu, { Divider, ItemGroup } from 'rc-menu';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport animation from '../_util/openAnimation';\nimport warning from '../_util/warning';\nimport SubMenu from './SubMenu';\nimport Item from './MenuItem';\n\nvar Menu = function (_React$Component) {\n  _inherits(Menu, _React$Component);\n\n  function Menu(props) {\n    _classCallCheck(this, Menu);\n\n    var _this = _possibleConstructorReturn(this, (Menu.__proto__ || Object.getPrototypeOf(Menu)).call(this, props));\n\n    _this.inlineOpenKeys = [];\n\n    _this.handleClick = function (e) {\n      _this.handleOpenChange([]);\n\n      var onClick = _this.props.onClick;\n\n      if (onClick) {\n        onClick(e);\n      }\n    };\n\n    _this.handleOpenChange = function (openKeys) {\n      _this.setOpenKeys(openKeys);\n\n      var onOpenChange = _this.props.onOpenChange;\n\n      if (onOpenChange) {\n        onOpenChange(openKeys);\n      }\n    };\n\n    warning(!('onOpen' in props || 'onClose' in props), '`onOpen` and `onClose` are removed, please use `onOpenChange` instead, ' + 'see: https://u.ant.design/menu-on-open-change.');\n    warning(!('inlineCollapsed' in props && props.mode !== 'inline'), '`inlineCollapsed` should only be used when Menu\\'s `mode` is inline.');\n    var openKeys = void 0;\n\n    if ('defaultOpenKeys' in props) {\n      openKeys = props.defaultOpenKeys;\n    } else if ('openKeys' in props) {\n      openKeys = props.openKeys;\n    }\n\n    _this.state = {\n      openKeys: openKeys || []\n    };\n    return _this;\n  }\n\n  _createClass(Menu, [{\n    key: 'getChildContext',\n    value: function getChildContext() {\n      return {\n        inlineCollapsed: this.getInlineCollapsed(),\n        antdMenuTheme: this.props.theme\n      };\n    }\n  }, {\n    key: 'componentWillReceiveProps',\n    value: function componentWillReceiveProps(nextProps, nextContext) {\n      var prefixCls = this.props.prefixCls;\n\n      if (this.props.mode === 'inline' && nextProps.mode !== 'inline') {\n        this.switchModeFromInline = true;\n      }\n\n      if ('openKeys' in nextProps) {\n        this.setState({\n          openKeys: nextProps.openKeys\n        });\n        return;\n      }\n\n      if (nextProps.inlineCollapsed && !this.props.inlineCollapsed || nextContext.siderCollapsed && !this.context.siderCollapsed) {\n        var menuNode = findDOMNode(this);\n        this.switchModeFromInline = !!this.state.openKeys.length && !!menuNode.querySelectorAll('.' + prefixCls + '-submenu-open').length;\n        this.inlineOpenKeys = this.state.openKeys;\n        this.setState({\n          openKeys: []\n        });\n      }\n\n      if (!nextProps.inlineCollapsed && this.props.inlineCollapsed || !nextContext.siderCollapsed && this.context.siderCollapsed) {\n        this.setState({\n          openKeys: this.inlineOpenKeys\n        });\n        this.inlineOpenKeys = [];\n      }\n    }\n  }, {\n    key: 'setOpenKeys',\n    value: function setOpenKeys(openKeys) {\n      if (!('openKeys' in this.props)) {\n        this.setState({\n          openKeys: openKeys\n        });\n      }\n    }\n  }, {\n    key: 'getRealMenuMode',\n    value: function getRealMenuMode() {\n      var inlineCollapsed = this.getInlineCollapsed();\n\n      if (this.switchModeFromInline && inlineCollapsed) {\n        return 'inline';\n      }\n\n      var mode = this.props.mode;\n      return inlineCollapsed ? 'vertical' : mode;\n    }\n  }, {\n    key: 'getInlineCollapsed',\n    value: function getInlineCollapsed() {\n      var inlineCollapsed = this.props.inlineCollapsed;\n\n      if (this.context.siderCollapsed !== undefined) {\n        return this.context.siderCollapsed;\n      }\n\n      return inlineCollapsed;\n    }\n  }, {\n    key: 'getMenuOpenAnimation',\n    value: function getMenuOpenAnimation(menuMode) {\n      var _this2 = this;\n\n      var _props = this.props,\n          openAnimation = _props.openAnimation,\n          openTransitionName = _props.openTransitionName;\n      var menuOpenAnimation = openAnimation || openTransitionName;\n\n      if (openAnimation === undefined && openTransitionName === undefined) {\n        switch (menuMode) {\n          case 'horizontal':\n            menuOpenAnimation = 'slide-up';\n            break;\n\n          case 'vertical':\n          case 'vertical-left':\n          case 'vertical-right':\n            // When mode switch from inline\n            // submenu should hide without animation\n            if (this.switchModeFromInline) {\n              menuOpenAnimation = '';\n              this.switchModeFromInline = false;\n            } else {\n              menuOpenAnimation = 'zoom-big';\n            }\n\n            break;\n\n          case 'inline':\n            menuOpenAnimation = _extends({}, animation, {\n              leave: function leave(node, done) {\n                return animation.leave(node, function () {\n                  // Make sure inline menu leave animation finished before mode is switched\n                  _this2.switchModeFromInline = false;\n\n                  _this2.setState({}); // when inlineCollapsed change false to true, all submenu will be unmounted,\n                  // so that we don't need handle animation leaving.\n\n\n                  if (_this2.getRealMenuMode() === 'vertical') {\n                    return;\n                  }\n\n                  done();\n                });\n              }\n            });\n            break;\n\n          default:\n        }\n      }\n\n      return menuOpenAnimation;\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _props2 = this.props,\n          prefixCls = _props2.prefixCls,\n          className = _props2.className,\n          theme = _props2.theme;\n      var menuMode = this.getRealMenuMode();\n      var menuOpenAnimation = this.getMenuOpenAnimation(menuMode);\n      var menuClassName = classNames(className, prefixCls + '-' + theme, _defineProperty({}, prefixCls + '-inline-collapsed', this.getInlineCollapsed()));\n      var menuProps = {\n        openKeys: this.state.openKeys,\n        onOpenChange: this.handleOpenChange,\n        className: menuClassName,\n        mode: menuMode\n      };\n\n      if (menuMode !== 'inline') {\n        // closing vertical popup submenu after click it\n        menuProps.onClick = this.handleClick;\n        menuProps.openTransitionName = menuOpenAnimation;\n      } else {\n        menuProps.openAnimation = menuOpenAnimation;\n      } // https://github.com/ant-design/ant-design/issues/8587\n\n\n      var collapsedWidth = this.context.collapsedWidth;\n\n      if (this.getInlineCollapsed() && (collapsedWidth === 0 || collapsedWidth === '0' || collapsedWidth === '0px')) {\n        return null;\n      }\n\n      return React.createElement(RcMenu, _extends({}, this.props, menuProps));\n    }\n  }]);\n\n  return Menu;\n}(React.Component);\n\nexport default Menu;\nMenu.Divider = Divider;\nMenu.Item = Item;\nMenu.SubMenu = SubMenu;\nMenu.ItemGroup = ItemGroup;\nMenu.defaultProps = {\n  prefixCls: 'ant-menu',\n  className: '',\n  theme: 'light'\n};\nMenu.childContextTypes = {\n  inlineCollapsed: PropTypes.bool,\n  antdMenuTheme: PropTypes.string\n};\nMenu.contextTypes = {\n  siderCollapsed: PropTypes.bool,\n  collapsedWidth: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n};","map":{"version":3,"sources":["/Users/administrator/Desktop/DrChain/drchain_frontend/drchain/node_modules/antd/es/menu/index.js"],"names":["_defineProperty","_extends","_classCallCheck","_createClass","_possibleConstructorReturn","_inherits","React","findDOMNode","RcMenu","Divider","ItemGroup","PropTypes","classNames","animation","warning","SubMenu","Item","Menu","_React$Component","props","_this","__proto__","Object","getPrototypeOf","call","inlineOpenKeys","handleClick","e","handleOpenChange","onClick","openKeys","setOpenKeys","onOpenChange","mode","defaultOpenKeys","state","key","value","getChildContext","inlineCollapsed","getInlineCollapsed","antdMenuTheme","theme","componentWillReceiveProps","nextProps","nextContext","prefixCls","switchModeFromInline","setState","siderCollapsed","context","menuNode","length","querySelectorAll","getRealMenuMode","undefined","getMenuOpenAnimation","menuMode","_this2","_props","openAnimation","openTransitionName","menuOpenAnimation","leave","node","done","render","_props2","className","menuClassName","menuProps","collapsedWidth","createElement","Component","defaultProps","childContextTypes","bool","string","contextTypes","oneOfType","number"],"mappings":"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","sourcesContent":["import _defineProperty from 'babel-runtime/helpers/defineProperty';\nimport _extends from 'babel-runtime/helpers/extends';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport * as React from 'react';\nimport { findDOMNode } from 'react-dom';\nimport RcMenu, { Divider, ItemGroup } from 'rc-menu';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport animation from '../_util/openAnimation';\nimport warning from '../_util/warning';\nimport SubMenu from './SubMenu';\nimport Item from './MenuItem';\n\nvar Menu = function (_React$Component) {\n    _inherits(Menu, _React$Component);\n\n    function Menu(props) {\n        _classCallCheck(this, Menu);\n\n        var _this = _possibleConstructorReturn(this, (Menu.__proto__ || Object.getPrototypeOf(Menu)).call(this, props));\n\n        _this.inlineOpenKeys = [];\n        _this.handleClick = function (e) {\n            _this.handleOpenChange([]);\n            var onClick = _this.props.onClick;\n\n            if (onClick) {\n                onClick(e);\n            }\n        };\n        _this.handleOpenChange = function (openKeys) {\n            _this.setOpenKeys(openKeys);\n            var onOpenChange = _this.props.onOpenChange;\n\n            if (onOpenChange) {\n                onOpenChange(openKeys);\n            }\n        };\n        warning(!('onOpen' in props || 'onClose' in props), '`onOpen` and `onClose` are removed, please use `onOpenChange` instead, ' + 'see: https://u.ant.design/menu-on-open-change.');\n        warning(!('inlineCollapsed' in props && props.mode !== 'inline'), '`inlineCollapsed` should only be used when Menu\\'s `mode` is inline.');\n        var openKeys = void 0;\n        if ('defaultOpenKeys' in props) {\n            openKeys = props.defaultOpenKeys;\n        } else if ('openKeys' in props) {\n            openKeys = props.openKeys;\n        }\n        _this.state = {\n            openKeys: openKeys || []\n        };\n        return _this;\n    }\n\n    _createClass(Menu, [{\n        key: 'getChildContext',\n        value: function getChildContext() {\n            return {\n                inlineCollapsed: this.getInlineCollapsed(),\n                antdMenuTheme: this.props.theme\n            };\n        }\n    }, {\n        key: 'componentWillReceiveProps',\n        value: function componentWillReceiveProps(nextProps, nextContext) {\n            var prefixCls = this.props.prefixCls;\n\n            if (this.props.mode === 'inline' && nextProps.mode !== 'inline') {\n                this.switchModeFromInline = true;\n            }\n            if ('openKeys' in nextProps) {\n                this.setState({ openKeys: nextProps.openKeys });\n                return;\n            }\n            if (nextProps.inlineCollapsed && !this.props.inlineCollapsed || nextContext.siderCollapsed && !this.context.siderCollapsed) {\n                var menuNode = findDOMNode(this);\n                this.switchModeFromInline = !!this.state.openKeys.length && !!menuNode.querySelectorAll('.' + prefixCls + '-submenu-open').length;\n                this.inlineOpenKeys = this.state.openKeys;\n                this.setState({ openKeys: [] });\n            }\n            if (!nextProps.inlineCollapsed && this.props.inlineCollapsed || !nextContext.siderCollapsed && this.context.siderCollapsed) {\n                this.setState({ openKeys: this.inlineOpenKeys });\n                this.inlineOpenKeys = [];\n            }\n        }\n    }, {\n        key: 'setOpenKeys',\n        value: function setOpenKeys(openKeys) {\n            if (!('openKeys' in this.props)) {\n                this.setState({ openKeys: openKeys });\n            }\n        }\n    }, {\n        key: 'getRealMenuMode',\n        value: function getRealMenuMode() {\n            var inlineCollapsed = this.getInlineCollapsed();\n            if (this.switchModeFromInline && inlineCollapsed) {\n                return 'inline';\n            }\n            var mode = this.props.mode;\n\n            return inlineCollapsed ? 'vertical' : mode;\n        }\n    }, {\n        key: 'getInlineCollapsed',\n        value: function getInlineCollapsed() {\n            var inlineCollapsed = this.props.inlineCollapsed;\n\n            if (this.context.siderCollapsed !== undefined) {\n                return this.context.siderCollapsed;\n            }\n            return inlineCollapsed;\n        }\n    }, {\n        key: 'getMenuOpenAnimation',\n        value: function getMenuOpenAnimation(menuMode) {\n            var _this2 = this;\n\n            var _props = this.props,\n                openAnimation = _props.openAnimation,\n                openTransitionName = _props.openTransitionName;\n\n            var menuOpenAnimation = openAnimation || openTransitionName;\n            if (openAnimation === undefined && openTransitionName === undefined) {\n                switch (menuMode) {\n                    case 'horizontal':\n                        menuOpenAnimation = 'slide-up';\n                        break;\n                    case 'vertical':\n                    case 'vertical-left':\n                    case 'vertical-right':\n                        // When mode switch from inline\n                        // submenu should hide without animation\n                        if (this.switchModeFromInline) {\n                            menuOpenAnimation = '';\n                            this.switchModeFromInline = false;\n                        } else {\n                            menuOpenAnimation = 'zoom-big';\n                        }\n                        break;\n                    case 'inline':\n                        menuOpenAnimation = _extends({}, animation, { leave: function leave(node, done) {\n                                return animation.leave(node, function () {\n                                    // Make sure inline menu leave animation finished before mode is switched\n                                    _this2.switchModeFromInline = false;\n                                    _this2.setState({});\n                                    // when inlineCollapsed change false to true, all submenu will be unmounted,\n                                    // so that we don't need handle animation leaving.\n                                    if (_this2.getRealMenuMode() === 'vertical') {\n                                        return;\n                                    }\n                                    done();\n                                });\n                            } });\n                        break;\n                    default:\n                }\n            }\n            return menuOpenAnimation;\n        }\n    }, {\n        key: 'render',\n        value: function render() {\n            var _props2 = this.props,\n                prefixCls = _props2.prefixCls,\n                className = _props2.className,\n                theme = _props2.theme;\n\n            var menuMode = this.getRealMenuMode();\n            var menuOpenAnimation = this.getMenuOpenAnimation(menuMode);\n            var menuClassName = classNames(className, prefixCls + '-' + theme, _defineProperty({}, prefixCls + '-inline-collapsed', this.getInlineCollapsed()));\n            var menuProps = {\n                openKeys: this.state.openKeys,\n                onOpenChange: this.handleOpenChange,\n                className: menuClassName,\n                mode: menuMode\n            };\n            if (menuMode !== 'inline') {\n                // closing vertical popup submenu after click it\n                menuProps.onClick = this.handleClick;\n                menuProps.openTransitionName = menuOpenAnimation;\n            } else {\n                menuProps.openAnimation = menuOpenAnimation;\n            }\n            // https://github.com/ant-design/ant-design/issues/8587\n            var collapsedWidth = this.context.collapsedWidth;\n\n            if (this.getInlineCollapsed() && (collapsedWidth === 0 || collapsedWidth === '0' || collapsedWidth === '0px')) {\n                return null;\n            }\n            return React.createElement(RcMenu, _extends({}, this.props, menuProps));\n        }\n    }]);\n\n    return Menu;\n}(React.Component);\n\nexport default Menu;\n\nMenu.Divider = Divider;\nMenu.Item = Item;\nMenu.SubMenu = SubMenu;\nMenu.ItemGroup = ItemGroup;\nMenu.defaultProps = {\n    prefixCls: 'ant-menu',\n    className: '',\n    theme: 'light'\n};\nMenu.childContextTypes = {\n    inlineCollapsed: PropTypes.bool,\n    antdMenuTheme: PropTypes.string\n};\nMenu.contextTypes = {\n    siderCollapsed: PropTypes.bool,\n    collapsedWidth: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n};"]},"metadata":{},"sourceType":"module"}