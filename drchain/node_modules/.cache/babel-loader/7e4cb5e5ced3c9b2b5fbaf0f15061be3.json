{"ast":null,"code":"import _extends from 'babel-runtime/helpers/extends';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport React, { cloneElement } from 'react';\nimport { findDOMNode } from 'react-dom';\nimport PropTypes from 'prop-types';\nimport toArray from 'rc-util/es/Children/toArray';\nimport Menu from 'rc-menu';\nimport scrollIntoView from 'dom-scroll-into-view';\nimport { getSelectKeys, preventDefaultEvent, saveRef } from './util';\n\nvar DropdownMenu = function (_React$Component) {\n  _inherits(DropdownMenu, _React$Component);\n\n  function DropdownMenu() {\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, DropdownMenu);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.scrollActiveItemToView = function () {\n      // scroll into view\n      var itemComponent = findDOMNode(_this.firstActiveItem);\n      var props = _this.props;\n\n      if (itemComponent) {\n        var scrollIntoViewOpts = {\n          onlyScrollIfNeeded: true\n        };\n\n        if ((!props.value || props.value.length === 0) && props.firstActiveValue) {\n          scrollIntoViewOpts.alignWithTop = true;\n        }\n\n        scrollIntoView(itemComponent, findDOMNode(_this.menuRef), scrollIntoViewOpts);\n      }\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  DropdownMenu.prototype.componentWillMount = function componentWillMount() {\n    this.lastInputValue = this.props.inputValue;\n  };\n\n  DropdownMenu.prototype.componentDidMount = function componentDidMount() {\n    this.scrollActiveItemToView();\n    this.lastVisible = this.props.visible;\n  };\n\n  DropdownMenu.prototype.shouldComponentUpdate = function shouldComponentUpdate(nextProps) {\n    if (!nextProps.visible) {\n      this.lastVisible = false;\n    } // freeze when hide\n\n\n    return nextProps.visible;\n  };\n\n  DropdownMenu.prototype.componentDidUpdate = function componentDidUpdate(prevProps) {\n    var props = this.props;\n\n    if (!prevProps.visible && props.visible) {\n      this.scrollActiveItemToView();\n    }\n\n    this.lastVisible = props.visible;\n    this.lastInputValue = props.inputValue;\n  };\n\n  DropdownMenu.prototype.renderMenu = function renderMenu() {\n    var _this2 = this;\n\n    var props = this.props;\n    var menuItems = props.menuItems,\n        defaultActiveFirstOption = props.defaultActiveFirstOption,\n        value = props.value,\n        prefixCls = props.prefixCls,\n        multiple = props.multiple,\n        onMenuSelect = props.onMenuSelect,\n        inputValue = props.inputValue,\n        firstActiveValue = props.firstActiveValue,\n        backfillValue = props.backfillValue;\n\n    if (menuItems && menuItems.length) {\n      var menuProps = {};\n\n      if (multiple) {\n        menuProps.onDeselect = props.onMenuDeselect;\n        menuProps.onSelect = onMenuSelect;\n      } else {\n        menuProps.onClick = onMenuSelect;\n      }\n\n      var selectedKeys = getSelectKeys(menuItems, value);\n      var activeKeyProps = {};\n      var clonedMenuItems = menuItems;\n\n      if (selectedKeys.length || firstActiveValue) {\n        if (props.visible && !this.lastVisible) {\n          activeKeyProps.activeKey = selectedKeys[0] || firstActiveValue;\n        }\n\n        var foundFirst = false; // set firstActiveItem via cloning menus\n        // for scroll into view\n\n        var clone = function clone(item) {\n          if (!foundFirst && selectedKeys.indexOf(item.key) !== -1 || !foundFirst && !selectedKeys.length && firstActiveValue.indexOf(item.key) !== -1) {\n            foundFirst = true;\n            return cloneElement(item, {\n              ref: function ref(_ref) {\n                _this2.firstActiveItem = _ref;\n              }\n            });\n          }\n\n          return item;\n        };\n\n        clonedMenuItems = menuItems.map(function (item) {\n          if (item.type.isMenuItemGroup) {\n            var children = toArray(item.props.children).map(clone);\n            return cloneElement(item, {}, children);\n          }\n\n          return clone(item);\n        });\n      } // clear activeKey when inputValue change\n\n\n      var lastValue = value && value[value.length - 1];\n\n      if (inputValue !== this.lastInputValue && (!lastValue || lastValue !== backfillValue)) {\n        activeKeyProps.activeKey = '';\n      }\n\n      return React.createElement(Menu, _extends({\n        ref: saveRef(this, 'menuRef'),\n        style: this.props.dropdownMenuStyle,\n        defaultActiveFirst: defaultActiveFirstOption\n      }, activeKeyProps, {\n        multiple: multiple\n      }, menuProps, {\n        selectedKeys: selectedKeys,\n        prefixCls: prefixCls + '-menu'\n      }), clonedMenuItems);\n    }\n\n    return null;\n  };\n\n  DropdownMenu.prototype.render = function render() {\n    var renderMenu = this.renderMenu();\n    return renderMenu ? React.createElement('div', {\n      style: {\n        overflow: 'auto'\n      },\n      onFocus: this.props.onPopupFocus,\n      onMouseDown: preventDefaultEvent,\n      onScroll: this.props.onPopupScroll\n    }, renderMenu) : null;\n  };\n\n  return DropdownMenu;\n}(React.Component);\n\nDropdownMenu.propTypes = {\n  defaultActiveFirstOption: PropTypes.bool,\n  value: PropTypes.any,\n  dropdownMenuStyle: PropTypes.object,\n  multiple: PropTypes.bool,\n  onPopupFocus: PropTypes.func,\n  onPopupScroll: PropTypes.func,\n  onMenuDeSelect: PropTypes.func,\n  onMenuSelect: PropTypes.func,\n  prefixCls: PropTypes.string,\n  menuItems: PropTypes.any,\n  inputValue: PropTypes.string,\n  visible: PropTypes.bool\n};\nexport default DropdownMenu;\nDropdownMenu.displayName = 'DropdownMenu';","map":{"version":3,"sources":["/Users/administrator/Desktop/DrChain/drchain_frontend/drchain/node_modules/rc-select/es/DropdownMenu.js"],"names":["_extends","_classCallCheck","_possibleConstructorReturn","_inherits","React","cloneElement","findDOMNode","PropTypes","toArray","Menu","scrollIntoView","getSelectKeys","preventDefaultEvent","saveRef","DropdownMenu","_React$Component","_temp","_this","_ret","_len","arguments","length","args","Array","_key","call","apply","concat","scrollActiveItemToView","itemComponent","firstActiveItem","props","scrollIntoViewOpts","onlyScrollIfNeeded","value","firstActiveValue","alignWithTop","menuRef","prototype","componentWillMount","lastInputValue","inputValue","componentDidMount","lastVisible","visible","shouldComponentUpdate","nextProps","componentDidUpdate","prevProps","renderMenu","_this2","menuItems","defaultActiveFirstOption","prefixCls","multiple","onMenuSelect","backfillValue","menuProps","onDeselect","onMenuDeselect","onSelect","onClick","selectedKeys","activeKeyProps","clonedMenuItems","activeKey","foundFirst","clone","item","indexOf","key","ref","_ref","map","type","isMenuItemGroup","children","lastValue","createElement","style","dropdownMenuStyle","defaultActiveFirst","render","overflow","onFocus","onPopupFocus","onMouseDown","onScroll","onPopupScroll","Component","propTypes","bool","any","object","func","onMenuDeSelect","string","displayName"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,+BAArB;AACA,OAAOC,eAAP,MAA4B,sCAA5B;AACA,OAAOC,0BAAP,MAAuC,iDAAvC;AACA,OAAOC,SAAP,MAAsB,gCAAtB;AACA,OAAOC,KAAP,IAAgBC,YAAhB,QAAoC,OAApC;AACA,SAASC,WAAT,QAA4B,WAA5B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,OAAP,MAAoB,6BAApB;AACA,OAAOC,IAAP,MAAiB,SAAjB;AACA,OAAOC,cAAP,MAA2B,sBAA3B;AACA,SAASC,aAAT,EAAwBC,mBAAxB,EAA6CC,OAA7C,QAA4D,QAA5D;;AAEA,IAAIC,YAAY,GAAG,UAAUC,gBAAV,EAA4B;AAC7CZ,EAAAA,SAAS,CAACW,YAAD,EAAeC,gBAAf,CAAT;;AAEA,WAASD,YAAT,GAAwB;AACtB,QAAIE,KAAJ,EAAWC,KAAX,EAAkBC,IAAlB;;AAEAjB,IAAAA,eAAe,CAAC,IAAD,EAAOa,YAAP,CAAf;;AAEA,SAAK,IAAIK,IAAI,GAAGC,SAAS,CAACC,MAArB,EAA6BC,IAAI,GAAGC,KAAK,CAACJ,IAAD,CAAzC,EAAiDK,IAAI,GAAG,CAA7D,EAAgEA,IAAI,GAAGL,IAAvE,EAA6EK,IAAI,EAAjF,EAAqF;AACnFF,MAAAA,IAAI,CAACE,IAAD,CAAJ,GAAaJ,SAAS,CAACI,IAAD,CAAtB;AACD;;AAED,WAAON,IAAI,IAAIF,KAAK,IAAIC,KAAK,GAAGf,0BAA0B,CAAC,IAAD,EAAOa,gBAAgB,CAACU,IAAjB,CAAsBC,KAAtB,CAA4BX,gBAA5B,EAA8C,CAAC,IAAD,EAAOY,MAAP,CAAcL,IAAd,CAA9C,CAAP,CAAlC,EAA8GL,KAAlH,CAAL,EAA+HA,KAAK,CAACW,sBAAN,GAA+B,YAAY;AACvL;AACA,UAAIC,aAAa,GAAGvB,WAAW,CAACW,KAAK,CAACa,eAAP,CAA/B;AACA,UAAIC,KAAK,GAAGd,KAAK,CAACc,KAAlB;;AAEA,UAAIF,aAAJ,EAAmB;AACjB,YAAIG,kBAAkB,GAAG;AACvBC,UAAAA,kBAAkB,EAAE;AADG,SAAzB;;AAGA,YAAI,CAAC,CAACF,KAAK,CAACG,KAAP,IAAgBH,KAAK,CAACG,KAAN,CAAYb,MAAZ,KAAuB,CAAxC,KAA8CU,KAAK,CAACI,gBAAxD,EAA0E;AACxEH,UAAAA,kBAAkB,CAACI,YAAnB,GAAkC,IAAlC;AACD;;AAED1B,QAAAA,cAAc,CAACmB,aAAD,EAAgBvB,WAAW,CAACW,KAAK,CAACoB,OAAP,CAA3B,EAA4CL,kBAA5C,CAAd;AACD;AACF,KAfc,EAeZhB,KAfQ,CAAJ,EAeId,0BAA0B,CAACe,KAAD,EAAQC,IAAR,CAfrC;AAgBD;;AAEDJ,EAAAA,YAAY,CAACwB,SAAb,CAAuBC,kBAAvB,GAA4C,SAASA,kBAAT,GAA8B;AACxE,SAAKC,cAAL,GAAsB,KAAKT,KAAL,CAAWU,UAAjC;AACD,GAFD;;AAIA3B,EAAAA,YAAY,CAACwB,SAAb,CAAuBI,iBAAvB,GAA2C,SAASA,iBAAT,GAA6B;AACtE,SAAKd,sBAAL;AACA,SAAKe,WAAL,GAAmB,KAAKZ,KAAL,CAAWa,OAA9B;AACD,GAHD;;AAKA9B,EAAAA,YAAY,CAACwB,SAAb,CAAuBO,qBAAvB,GAA+C,SAASA,qBAAT,CAA+BC,SAA/B,EAA0C;AACvF,QAAI,CAACA,SAAS,CAACF,OAAf,EAAwB;AACtB,WAAKD,WAAL,GAAmB,KAAnB;AACD,KAHsF,CAIvF;;;AACA,WAAOG,SAAS,CAACF,OAAjB;AACD,GAND;;AAQA9B,EAAAA,YAAY,CAACwB,SAAb,CAAuBS,kBAAvB,GAA4C,SAASA,kBAAT,CAA4BC,SAA5B,EAAuC;AACjF,QAAIjB,KAAK,GAAG,KAAKA,KAAjB;;AACA,QAAI,CAACiB,SAAS,CAACJ,OAAX,IAAsBb,KAAK,CAACa,OAAhC,EAAyC;AACvC,WAAKhB,sBAAL;AACD;;AACD,SAAKe,WAAL,GAAmBZ,KAAK,CAACa,OAAzB;AACA,SAAKJ,cAAL,GAAsBT,KAAK,CAACU,UAA5B;AACD,GAPD;;AASA3B,EAAAA,YAAY,CAACwB,SAAb,CAAuBW,UAAvB,GAAoC,SAASA,UAAT,GAAsB;AACxD,QAAIC,MAAM,GAAG,IAAb;;AAEA,QAAInB,KAAK,GAAG,KAAKA,KAAjB;AACA,QAAIoB,SAAS,GAAGpB,KAAK,CAACoB,SAAtB;AAAA,QACIC,wBAAwB,GAAGrB,KAAK,CAACqB,wBADrC;AAAA,QAEIlB,KAAK,GAAGH,KAAK,CAACG,KAFlB;AAAA,QAGImB,SAAS,GAAGtB,KAAK,CAACsB,SAHtB;AAAA,QAIIC,QAAQ,GAAGvB,KAAK,CAACuB,QAJrB;AAAA,QAKIC,YAAY,GAAGxB,KAAK,CAACwB,YALzB;AAAA,QAMId,UAAU,GAAGV,KAAK,CAACU,UANvB;AAAA,QAOIN,gBAAgB,GAAGJ,KAAK,CAACI,gBAP7B;AAAA,QAQIqB,aAAa,GAAGzB,KAAK,CAACyB,aAR1B;;AAUA,QAAIL,SAAS,IAAIA,SAAS,CAAC9B,MAA3B,EAAmC;AACjC,UAAIoC,SAAS,GAAG,EAAhB;;AACA,UAAIH,QAAJ,EAAc;AACZG,QAAAA,SAAS,CAACC,UAAV,GAAuB3B,KAAK,CAAC4B,cAA7B;AACAF,QAAAA,SAAS,CAACG,QAAV,GAAqBL,YAArB;AACD,OAHD,MAGO;AACLE,QAAAA,SAAS,CAACI,OAAV,GAAoBN,YAApB;AACD;;AAED,UAAIO,YAAY,GAAGnD,aAAa,CAACwC,SAAD,EAAYjB,KAAZ,CAAhC;AACA,UAAI6B,cAAc,GAAG,EAArB;AAEA,UAAIC,eAAe,GAAGb,SAAtB;;AACA,UAAIW,YAAY,CAACzC,MAAb,IAAuBc,gBAA3B,EAA6C;AAC3C,YAAIJ,KAAK,CAACa,OAAN,IAAiB,CAAC,KAAKD,WAA3B,EAAwC;AACtCoB,UAAAA,cAAc,CAACE,SAAf,GAA2BH,YAAY,CAAC,CAAD,CAAZ,IAAmB3B,gBAA9C;AACD;;AACD,YAAI+B,UAAU,GAAG,KAAjB,CAJ2C,CAK3C;AACA;;AACA,YAAIC,KAAK,GAAG,SAASA,KAAT,CAAeC,IAAf,EAAqB;AAC/B,cAAI,CAACF,UAAD,IAAeJ,YAAY,CAACO,OAAb,CAAqBD,IAAI,CAACE,GAA1B,MAAmC,CAAC,CAAnD,IAAwD,CAACJ,UAAD,IAAe,CAACJ,YAAY,CAACzC,MAA7B,IAAuCc,gBAAgB,CAACkC,OAAjB,CAAyBD,IAAI,CAACE,GAA9B,MAAuC,CAAC,CAA3I,EAA8I;AAC5IJ,YAAAA,UAAU,GAAG,IAAb;AACA,mBAAO7D,YAAY,CAAC+D,IAAD,EAAO;AACxBG,cAAAA,GAAG,EAAE,SAASA,GAAT,CAAaC,IAAb,EAAmB;AACtBtB,gBAAAA,MAAM,CAACpB,eAAP,GAAyB0C,IAAzB;AACD;AAHuB,aAAP,CAAnB;AAKD;;AACD,iBAAOJ,IAAP;AACD,SAVD;;AAYAJ,QAAAA,eAAe,GAAGb,SAAS,CAACsB,GAAV,CAAc,UAAUL,IAAV,EAAgB;AAC9C,cAAIA,IAAI,CAACM,IAAL,CAAUC,eAAd,EAA+B;AAC7B,gBAAIC,QAAQ,GAAGpE,OAAO,CAAC4D,IAAI,CAACrC,KAAL,CAAW6C,QAAZ,CAAP,CAA6BH,GAA7B,CAAiCN,KAAjC,CAAf;AACA,mBAAO9D,YAAY,CAAC+D,IAAD,EAAO,EAAP,EAAWQ,QAAX,CAAnB;AACD;;AACD,iBAAOT,KAAK,CAACC,IAAD,CAAZ;AACD,SANiB,CAAlB;AAOD,OAvCgC,CAyCjC;;;AACA,UAAIS,SAAS,GAAG3C,KAAK,IAAIA,KAAK,CAACA,KAAK,CAACb,MAAN,GAAe,CAAhB,CAA9B;;AACA,UAAIoB,UAAU,KAAK,KAAKD,cAApB,KAAuC,CAACqC,SAAD,IAAcA,SAAS,KAAKrB,aAAnE,CAAJ,EAAuF;AACrFO,QAAAA,cAAc,CAACE,SAAf,GAA2B,EAA3B;AACD;;AAED,aAAO7D,KAAK,CAAC0E,aAAN,CACLrE,IADK,EAELT,QAAQ,CAAC;AACPuE,QAAAA,GAAG,EAAE1D,OAAO,CAAC,IAAD,EAAO,SAAP,CADL;AAEPkE,QAAAA,KAAK,EAAE,KAAKhD,KAAL,CAAWiD,iBAFX;AAGPC,QAAAA,kBAAkB,EAAE7B;AAHb,OAAD,EAILW,cAJK,EAIW;AACjBT,QAAAA,QAAQ,EAAEA;AADO,OAJX,EAMLG,SANK,EAMM;AACZK,QAAAA,YAAY,EAAEA,YADF;AAEZT,QAAAA,SAAS,EAAEA,SAAS,GAAG;AAFX,OANN,CAFH,EAYLW,eAZK,CAAP;AAcD;;AACD,WAAO,IAAP;AACD,GA7ED;;AA+EAlD,EAAAA,YAAY,CAACwB,SAAb,CAAuB4C,MAAvB,GAAgC,SAASA,MAAT,GAAkB;AAChD,QAAIjC,UAAU,GAAG,KAAKA,UAAL,EAAjB;AACA,WAAOA,UAAU,GAAG7C,KAAK,CAAC0E,aAAN,CAClB,KADkB,EAElB;AACEC,MAAAA,KAAK,EAAE;AAAEI,QAAAA,QAAQ,EAAE;AAAZ,OADT;AAEEC,MAAAA,OAAO,EAAE,KAAKrD,KAAL,CAAWsD,YAFtB;AAGEC,MAAAA,WAAW,EAAE1E,mBAHf;AAIE2E,MAAAA,QAAQ,EAAE,KAAKxD,KAAL,CAAWyD;AAJvB,KAFkB,EAQlBvC,UARkB,CAAH,GASb,IATJ;AAUD,GAZD;;AAcA,SAAOnC,YAAP;AACD,CAtJkB,CAsJjBV,KAAK,CAACqF,SAtJW,CAAnB;;AAwJA3E,YAAY,CAAC4E,SAAb,GAAyB;AACvBtC,EAAAA,wBAAwB,EAAE7C,SAAS,CAACoF,IADb;AAEvBzD,EAAAA,KAAK,EAAE3B,SAAS,CAACqF,GAFM;AAGvBZ,EAAAA,iBAAiB,EAAEzE,SAAS,CAACsF,MAHN;AAIvBvC,EAAAA,QAAQ,EAAE/C,SAAS,CAACoF,IAJG;AAKvBN,EAAAA,YAAY,EAAE9E,SAAS,CAACuF,IALD;AAMvBN,EAAAA,aAAa,EAAEjF,SAAS,CAACuF,IANF;AAOvBC,EAAAA,cAAc,EAAExF,SAAS,CAACuF,IAPH;AAQvBvC,EAAAA,YAAY,EAAEhD,SAAS,CAACuF,IARD;AASvBzC,EAAAA,SAAS,EAAE9C,SAAS,CAACyF,MATE;AAUvB7C,EAAAA,SAAS,EAAE5C,SAAS,CAACqF,GAVE;AAWvBnD,EAAAA,UAAU,EAAElC,SAAS,CAACyF,MAXC;AAYvBpD,EAAAA,OAAO,EAAErC,SAAS,CAACoF;AAZI,CAAzB;AAcA,eAAe7E,YAAf;AAGAA,YAAY,CAACmF,WAAb,GAA2B,cAA3B","sourcesContent":["import _extends from 'babel-runtime/helpers/extends';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport React, { cloneElement } from 'react';\nimport { findDOMNode } from 'react-dom';\nimport PropTypes from 'prop-types';\nimport toArray from 'rc-util/es/Children/toArray';\nimport Menu from 'rc-menu';\nimport scrollIntoView from 'dom-scroll-into-view';\nimport { getSelectKeys, preventDefaultEvent, saveRef } from './util';\n\nvar DropdownMenu = function (_React$Component) {\n  _inherits(DropdownMenu, _React$Component);\n\n  function DropdownMenu() {\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, DropdownMenu);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.scrollActiveItemToView = function () {\n      // scroll into view\n      var itemComponent = findDOMNode(_this.firstActiveItem);\n      var props = _this.props;\n\n      if (itemComponent) {\n        var scrollIntoViewOpts = {\n          onlyScrollIfNeeded: true\n        };\n        if ((!props.value || props.value.length === 0) && props.firstActiveValue) {\n          scrollIntoViewOpts.alignWithTop = true;\n        }\n\n        scrollIntoView(itemComponent, findDOMNode(_this.menuRef), scrollIntoViewOpts);\n      }\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  DropdownMenu.prototype.componentWillMount = function componentWillMount() {\n    this.lastInputValue = this.props.inputValue;\n  };\n\n  DropdownMenu.prototype.componentDidMount = function componentDidMount() {\n    this.scrollActiveItemToView();\n    this.lastVisible = this.props.visible;\n  };\n\n  DropdownMenu.prototype.shouldComponentUpdate = function shouldComponentUpdate(nextProps) {\n    if (!nextProps.visible) {\n      this.lastVisible = false;\n    }\n    // freeze when hide\n    return nextProps.visible;\n  };\n\n  DropdownMenu.prototype.componentDidUpdate = function componentDidUpdate(prevProps) {\n    var props = this.props;\n    if (!prevProps.visible && props.visible) {\n      this.scrollActiveItemToView();\n    }\n    this.lastVisible = props.visible;\n    this.lastInputValue = props.inputValue;\n  };\n\n  DropdownMenu.prototype.renderMenu = function renderMenu() {\n    var _this2 = this;\n\n    var props = this.props;\n    var menuItems = props.menuItems,\n        defaultActiveFirstOption = props.defaultActiveFirstOption,\n        value = props.value,\n        prefixCls = props.prefixCls,\n        multiple = props.multiple,\n        onMenuSelect = props.onMenuSelect,\n        inputValue = props.inputValue,\n        firstActiveValue = props.firstActiveValue,\n        backfillValue = props.backfillValue;\n\n    if (menuItems && menuItems.length) {\n      var menuProps = {};\n      if (multiple) {\n        menuProps.onDeselect = props.onMenuDeselect;\n        menuProps.onSelect = onMenuSelect;\n      } else {\n        menuProps.onClick = onMenuSelect;\n      }\n\n      var selectedKeys = getSelectKeys(menuItems, value);\n      var activeKeyProps = {};\n\n      var clonedMenuItems = menuItems;\n      if (selectedKeys.length || firstActiveValue) {\n        if (props.visible && !this.lastVisible) {\n          activeKeyProps.activeKey = selectedKeys[0] || firstActiveValue;\n        }\n        var foundFirst = false;\n        // set firstActiveItem via cloning menus\n        // for scroll into view\n        var clone = function clone(item) {\n          if (!foundFirst && selectedKeys.indexOf(item.key) !== -1 || !foundFirst && !selectedKeys.length && firstActiveValue.indexOf(item.key) !== -1) {\n            foundFirst = true;\n            return cloneElement(item, {\n              ref: function ref(_ref) {\n                _this2.firstActiveItem = _ref;\n              }\n            });\n          }\n          return item;\n        };\n\n        clonedMenuItems = menuItems.map(function (item) {\n          if (item.type.isMenuItemGroup) {\n            var children = toArray(item.props.children).map(clone);\n            return cloneElement(item, {}, children);\n          }\n          return clone(item);\n        });\n      }\n\n      // clear activeKey when inputValue change\n      var lastValue = value && value[value.length - 1];\n      if (inputValue !== this.lastInputValue && (!lastValue || lastValue !== backfillValue)) {\n        activeKeyProps.activeKey = '';\n      }\n\n      return React.createElement(\n        Menu,\n        _extends({\n          ref: saveRef(this, 'menuRef'),\n          style: this.props.dropdownMenuStyle,\n          defaultActiveFirst: defaultActiveFirstOption\n        }, activeKeyProps, {\n          multiple: multiple\n        }, menuProps, {\n          selectedKeys: selectedKeys,\n          prefixCls: prefixCls + '-menu'\n        }),\n        clonedMenuItems\n      );\n    }\n    return null;\n  };\n\n  DropdownMenu.prototype.render = function render() {\n    var renderMenu = this.renderMenu();\n    return renderMenu ? React.createElement(\n      'div',\n      {\n        style: { overflow: 'auto' },\n        onFocus: this.props.onPopupFocus,\n        onMouseDown: preventDefaultEvent,\n        onScroll: this.props.onPopupScroll\n      },\n      renderMenu\n    ) : null;\n  };\n\n  return DropdownMenu;\n}(React.Component);\n\nDropdownMenu.propTypes = {\n  defaultActiveFirstOption: PropTypes.bool,\n  value: PropTypes.any,\n  dropdownMenuStyle: PropTypes.object,\n  multiple: PropTypes.bool,\n  onPopupFocus: PropTypes.func,\n  onPopupScroll: PropTypes.func,\n  onMenuDeSelect: PropTypes.func,\n  onMenuSelect: PropTypes.func,\n  prefixCls: PropTypes.string,\n  menuItems: PropTypes.any,\n  inputValue: PropTypes.string,\n  visible: PropTypes.bool\n};\nexport default DropdownMenu;\n\n\nDropdownMenu.displayName = 'DropdownMenu';"]},"metadata":{},"sourceType":"module"}