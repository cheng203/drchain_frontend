{"ast":null,"code":"import _extends from 'babel-runtime/helpers/extends';\nimport _defineProperty from 'babel-runtime/helpers/defineProperty';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport * as React from 'react';\nimport omit from 'omit.js';\nimport classNames from 'classnames';\nimport calculateNodeHeight from './calculateNodeHeight';\n\nfunction onNextFrame(cb) {\n  if (window.requestAnimationFrame) {\n    return window.requestAnimationFrame(cb);\n  }\n\n  return window.setTimeout(cb, 1);\n}\n\nfunction clearNextFrameAction(nextFrameId) {\n  if (window.cancelAnimationFrame) {\n    window.cancelAnimationFrame(nextFrameId);\n  } else {\n    window.clearTimeout(nextFrameId);\n  }\n}\n\nvar TextArea = function (_React$Component) {\n  _inherits(TextArea, _React$Component);\n\n  function TextArea() {\n    _classCallCheck(this, TextArea);\n\n    var _this = _possibleConstructorReturn(this, (TextArea.__proto__ || Object.getPrototypeOf(TextArea)).apply(this, arguments));\n\n    _this.state = {\n      textareaStyles: {}\n    };\n\n    _this.resizeTextarea = function () {\n      var autosize = _this.props.autosize;\n\n      if (!autosize || !_this.textAreaRef) {\n        return;\n      }\n\n      var minRows = autosize ? autosize.minRows : null;\n      var maxRows = autosize ? autosize.maxRows : null;\n      var textareaStyles = calculateNodeHeight(_this.textAreaRef, false, minRows, maxRows);\n\n      _this.setState({\n        textareaStyles: textareaStyles\n      });\n    };\n\n    _this.handleTextareaChange = function (e) {\n      if (!('value' in _this.props)) {\n        _this.resizeTextarea();\n      }\n\n      var onChange = _this.props.onChange;\n\n      if (onChange) {\n        onChange(e);\n      }\n    };\n\n    _this.handleKeyDown = function (e) {\n      var _this$props = _this.props,\n          onPressEnter = _this$props.onPressEnter,\n          onKeyDown = _this$props.onKeyDown;\n\n      if (e.keyCode === 13 && onPressEnter) {\n        onPressEnter(e);\n      }\n\n      if (onKeyDown) {\n        onKeyDown(e);\n      }\n    };\n\n    _this.saveTextAreaRef = function (textArea) {\n      _this.textAreaRef = textArea;\n    };\n\n    return _this;\n  }\n\n  _createClass(TextArea, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      this.resizeTextarea();\n    }\n  }, {\n    key: 'componentWillReceiveProps',\n    value: function componentWillReceiveProps(nextProps) {\n      // Re-render with the new content then recalculate the height as required.\n      if (this.props.value !== nextProps.value) {\n        if (this.nextFrameActionId) {\n          clearNextFrameAction(this.nextFrameActionId);\n        }\n\n        this.nextFrameActionId = onNextFrame(this.resizeTextarea);\n      }\n    }\n  }, {\n    key: 'focus',\n    value: function focus() {\n      this.textAreaRef.focus();\n    }\n  }, {\n    key: 'blur',\n    value: function blur() {\n      this.textAreaRef.blur();\n    }\n  }, {\n    key: 'getTextAreaClassName',\n    value: function getTextAreaClassName() {\n      var _props = this.props,\n          prefixCls = _props.prefixCls,\n          className = _props.className,\n          disabled = _props.disabled;\n      return classNames(prefixCls, className, _defineProperty({}, prefixCls + '-disabled', disabled));\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var props = this.props;\n      var otherProps = omit(props, ['prefixCls', 'onPressEnter', 'autosize']);\n\n      var style = _extends({}, props.style, this.state.textareaStyles); // Fix https://github.com/ant-design/ant-design/issues/6776\n      // Make sure it could be reset when using form.getFieldDecorator\n\n\n      if ('value' in otherProps) {\n        otherProps.value = otherProps.value || '';\n      }\n\n      return React.createElement('textarea', _extends({}, otherProps, {\n        className: this.getTextAreaClassName(),\n        style: style,\n        onKeyDown: this.handleKeyDown,\n        onChange: this.handleTextareaChange,\n        ref: this.saveTextAreaRef\n      }));\n    }\n  }]);\n\n  return TextArea;\n}(React.Component);\n\nexport default TextArea;\nTextArea.defaultProps = {\n  prefixCls: 'ant-input'\n};","map":{"version":3,"sources":["/Users/administrator/Desktop/DrChain/drchain_frontend/drchain/node_modules/antd/es/input/TextArea.js"],"names":["_extends","_defineProperty","_classCallCheck","_createClass","_possibleConstructorReturn","_inherits","React","omit","classNames","calculateNodeHeight","onNextFrame","cb","window","requestAnimationFrame","setTimeout","clearNextFrameAction","nextFrameId","cancelAnimationFrame","clearTimeout","TextArea","_React$Component","_this","__proto__","Object","getPrototypeOf","apply","arguments","state","textareaStyles","resizeTextarea","autosize","props","textAreaRef","minRows","maxRows","setState","handleTextareaChange","e","onChange","handleKeyDown","_this$props","onPressEnter","onKeyDown","keyCode","saveTextAreaRef","textArea","key","value","componentDidMount","componentWillReceiveProps","nextProps","nextFrameActionId","focus","blur","getTextAreaClassName","_props","prefixCls","className","disabled","render","otherProps","style","createElement","ref","Component","defaultProps"],"mappings":"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","sourcesContent":["import _extends from 'babel-runtime/helpers/extends';\nimport _defineProperty from 'babel-runtime/helpers/defineProperty';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport * as React from 'react';\nimport omit from 'omit.js';\nimport classNames from 'classnames';\nimport calculateNodeHeight from './calculateNodeHeight';\nfunction onNextFrame(cb) {\n    if (window.requestAnimationFrame) {\n        return window.requestAnimationFrame(cb);\n    }\n    return window.setTimeout(cb, 1);\n}\nfunction clearNextFrameAction(nextFrameId) {\n    if (window.cancelAnimationFrame) {\n        window.cancelAnimationFrame(nextFrameId);\n    } else {\n        window.clearTimeout(nextFrameId);\n    }\n}\n\nvar TextArea = function (_React$Component) {\n    _inherits(TextArea, _React$Component);\n\n    function TextArea() {\n        _classCallCheck(this, TextArea);\n\n        var _this = _possibleConstructorReturn(this, (TextArea.__proto__ || Object.getPrototypeOf(TextArea)).apply(this, arguments));\n\n        _this.state = {\n            textareaStyles: {}\n        };\n        _this.resizeTextarea = function () {\n            var autosize = _this.props.autosize;\n\n            if (!autosize || !_this.textAreaRef) {\n                return;\n            }\n            var minRows = autosize ? autosize.minRows : null;\n            var maxRows = autosize ? autosize.maxRows : null;\n            var textareaStyles = calculateNodeHeight(_this.textAreaRef, false, minRows, maxRows);\n            _this.setState({ textareaStyles: textareaStyles });\n        };\n        _this.handleTextareaChange = function (e) {\n            if (!('value' in _this.props)) {\n                _this.resizeTextarea();\n            }\n            var onChange = _this.props.onChange;\n\n            if (onChange) {\n                onChange(e);\n            }\n        };\n        _this.handleKeyDown = function (e) {\n            var _this$props = _this.props,\n                onPressEnter = _this$props.onPressEnter,\n                onKeyDown = _this$props.onKeyDown;\n\n            if (e.keyCode === 13 && onPressEnter) {\n                onPressEnter(e);\n            }\n            if (onKeyDown) {\n                onKeyDown(e);\n            }\n        };\n        _this.saveTextAreaRef = function (textArea) {\n            _this.textAreaRef = textArea;\n        };\n        return _this;\n    }\n\n    _createClass(TextArea, [{\n        key: 'componentDidMount',\n        value: function componentDidMount() {\n            this.resizeTextarea();\n        }\n    }, {\n        key: 'componentWillReceiveProps',\n        value: function componentWillReceiveProps(nextProps) {\n            // Re-render with the new content then recalculate the height as required.\n            if (this.props.value !== nextProps.value) {\n                if (this.nextFrameActionId) {\n                    clearNextFrameAction(this.nextFrameActionId);\n                }\n                this.nextFrameActionId = onNextFrame(this.resizeTextarea);\n            }\n        }\n    }, {\n        key: 'focus',\n        value: function focus() {\n            this.textAreaRef.focus();\n        }\n    }, {\n        key: 'blur',\n        value: function blur() {\n            this.textAreaRef.blur();\n        }\n    }, {\n        key: 'getTextAreaClassName',\n        value: function getTextAreaClassName() {\n            var _props = this.props,\n                prefixCls = _props.prefixCls,\n                className = _props.className,\n                disabled = _props.disabled;\n\n            return classNames(prefixCls, className, _defineProperty({}, prefixCls + '-disabled', disabled));\n        }\n    }, {\n        key: 'render',\n        value: function render() {\n            var props = this.props;\n            var otherProps = omit(props, ['prefixCls', 'onPressEnter', 'autosize']);\n            var style = _extends({}, props.style, this.state.textareaStyles);\n            // Fix https://github.com/ant-design/ant-design/issues/6776\n            // Make sure it could be reset when using form.getFieldDecorator\n            if ('value' in otherProps) {\n                otherProps.value = otherProps.value || '';\n            }\n            return React.createElement('textarea', _extends({}, otherProps, { className: this.getTextAreaClassName(), style: style, onKeyDown: this.handleKeyDown, onChange: this.handleTextareaChange, ref: this.saveTextAreaRef }));\n        }\n    }]);\n\n    return TextArea;\n}(React.Component);\n\nexport default TextArea;\n\nTextArea.defaultProps = {\n    prefixCls: 'ant-input'\n};"]},"metadata":{},"sourceType":"module"}