{"ast":null,"code":"import _extends from 'babel-runtime/helpers/extends';\nimport _defineProperty from 'babel-runtime/helpers/defineProperty';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport Icon from '../icon';\nimport { Circle } from 'rc-progress';\nimport classNames from 'classnames';\nvar statusColorMap = {\n  normal: '#108ee9',\n  exception: '#ff5500',\n  success: '#87d068'\n};\n\nvar validProgress = function validProgress(progress) {\n  if (!progress || progress < 0) {\n    return 0;\n  } else if (progress > 100) {\n    return 100;\n  }\n\n  return progress;\n};\n\nvar Progress = function (_React$Component) {\n  _inherits(Progress, _React$Component);\n\n  function Progress() {\n    _classCallCheck(this, Progress);\n\n    return _possibleConstructorReturn(this, (Progress.__proto__ || Object.getPrototypeOf(Progress)).apply(this, arguments));\n  }\n\n  _createClass(Progress, [{\n    key: 'render',\n    value: function render() {\n      var _classNames;\n\n      var props = this.props;\n\n      var prefixCls = props.prefixCls,\n          className = props.className,\n          _props$percent = props.percent,\n          percent = _props$percent === undefined ? 0 : _props$percent,\n          status = props.status,\n          format = props.format,\n          trailColor = props.trailColor,\n          size = props.size,\n          successPercent = props.successPercent,\n          type = props.type,\n          strokeWidth = props.strokeWidth,\n          width = props.width,\n          showInfo = props.showInfo,\n          _props$gapDegree = props.gapDegree,\n          gapDegree = _props$gapDegree === undefined ? 0 : _props$gapDegree,\n          gapPosition = props.gapPosition,\n          restProps = __rest(props, [\"prefixCls\", \"className\", \"percent\", \"status\", \"format\", \"trailColor\", \"size\", \"successPercent\", \"type\", \"strokeWidth\", \"width\", \"showInfo\", \"gapDegree\", \"gapPosition\"]);\n\n      var progressStatus = parseInt(successPercent ? successPercent.toString() : percent.toString(), 10) >= 100 && !('status' in props) ? 'success' : status || 'normal';\n      var progressInfo = void 0;\n      var progress = void 0;\n\n      var textFormatter = format || function (percentNumber) {\n        return percentNumber + '%';\n      };\n\n      if (showInfo) {\n        var text = void 0;\n        var iconType = type === 'circle' || type === 'dashboard' ? '' : '-circle';\n\n        if (progressStatus === 'exception') {\n          text = format ? textFormatter(validProgress(percent)) : React.createElement(Icon, {\n            type: 'cross' + iconType\n          });\n        } else if (progressStatus === 'success') {\n          text = format ? textFormatter(validProgress(percent)) : React.createElement(Icon, {\n            type: 'check' + iconType\n          });\n        } else {\n          text = textFormatter(validProgress(percent));\n        }\n\n        progressInfo = React.createElement('span', {\n          className: prefixCls + '-text'\n        }, text);\n      }\n\n      if (type === 'line') {\n        var percentStyle = {\n          width: validProgress(percent) + '%',\n          height: strokeWidth || (size === 'small' ? 6 : 8)\n        };\n        var successPercentStyle = {\n          width: validProgress(successPercent) + '%',\n          height: strokeWidth || (size === 'small' ? 6 : 8)\n        };\n        var successSegment = successPercent !== undefined ? React.createElement('div', {\n          className: prefixCls + '-success-bg',\n          style: successPercentStyle\n        }) : null;\n        progress = React.createElement('div', null, React.createElement('div', {\n          className: prefixCls + '-outer'\n        }, React.createElement('div', {\n          className: prefixCls + '-inner'\n        }, React.createElement('div', {\n          className: prefixCls + '-bg',\n          style: percentStyle\n        }), successSegment)), progressInfo);\n      } else if (type === 'circle' || type === 'dashboard') {\n        var circleSize = width || 120;\n        var circleStyle = {\n          width: circleSize,\n          height: circleSize,\n          fontSize: circleSize * 0.15 + 6\n        };\n        var circleWidth = strokeWidth || 6;\n        var gapPos = gapPosition || type === 'dashboard' && 'bottom' || 'top';\n        var gapDeg = gapDegree || type === 'dashboard' && 75;\n        progress = React.createElement('div', {\n          className: prefixCls + '-inner',\n          style: circleStyle\n        }, React.createElement(Circle, {\n          percent: validProgress(percent),\n          strokeWidth: circleWidth,\n          trailWidth: circleWidth,\n          strokeColor: statusColorMap[progressStatus],\n          trailColor: trailColor,\n          prefixCls: prefixCls,\n          gapDegree: gapDeg,\n          gapPosition: gapPos\n        }), progressInfo);\n      }\n\n      var classString = classNames(prefixCls, (_classNames = {}, _defineProperty(_classNames, prefixCls + '-' + (type === 'dashboard' && 'circle' || type), true), _defineProperty(_classNames, prefixCls + '-status-' + progressStatus, true), _defineProperty(_classNames, prefixCls + '-show-info', showInfo), _defineProperty(_classNames, prefixCls + '-' + size, size), _classNames), className);\n      return React.createElement('div', _extends({}, restProps, {\n        className: classString\n      }), progress);\n    }\n  }]);\n\n  return Progress;\n}(React.Component);\n\nexport default Progress;\nProgress.defaultProps = {\n  type: 'line',\n  percent: 0,\n  showInfo: true,\n  trailColor: '#f3f3f3',\n  prefixCls: 'ant-progress',\n  size: 'default'\n};\nProgress.propTypes = {\n  status: PropTypes.oneOf(['normal', 'exception', 'active', 'success']),\n  type: PropTypes.oneOf(['line', 'circle', 'dashboard']),\n  showInfo: PropTypes.bool,\n  percent: PropTypes.number,\n  width: PropTypes.number,\n  strokeWidth: PropTypes.number,\n  trailColor: PropTypes.string,\n  format: PropTypes.func,\n  gapDegree: PropTypes.number,\n  'default': PropTypes.oneOf(['default', 'small'])\n};","map":{"version":3,"sources":["/Users/administrator/Desktop/DrChain/drchain_frontend/drchain/node_modules/antd/es/progress/progress.js"],"names":["_extends","_defineProperty","_classCallCheck","_createClass","_possibleConstructorReturn","_inherits","__rest","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","PropTypes","React","Icon","Circle","classNames","statusColorMap","normal","exception","success","validProgress","progress","Progress","_React$Component","__proto__","getPrototypeOf","apply","arguments","key","value","render","_classNames","props","prefixCls","className","_props$percent","percent","undefined","status","format","trailColor","size","successPercent","type","strokeWidth","width","showInfo","_props$gapDegree","gapDegree","gapPosition","restProps","progressStatus","parseInt","toString","progressInfo","textFormatter","percentNumber","text","iconType","createElement","percentStyle","height","successPercentStyle","successSegment","style","circleSize","circleStyle","fontSize","circleWidth","gapPos","gapDeg","trailWidth","strokeColor","classString","Component","defaultProps","propTypes","oneOf","bool","number","string","func"],"mappings":"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","sourcesContent":["import _extends from 'babel-runtime/helpers/extends';\nimport _defineProperty from 'babel-runtime/helpers/defineProperty';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nvar __rest = this && this.__rest || function (s, e) {\n    var t = {};\n    for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n    }if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n        if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];\n    }return t;\n};\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport Icon from '../icon';\nimport { Circle } from 'rc-progress';\nimport classNames from 'classnames';\nvar statusColorMap = {\n    normal: '#108ee9',\n    exception: '#ff5500',\n    success: '#87d068'\n};\nvar validProgress = function validProgress(progress) {\n    if (!progress || progress < 0) {\n        return 0;\n    } else if (progress > 100) {\n        return 100;\n    }\n    return progress;\n};\n\nvar Progress = function (_React$Component) {\n    _inherits(Progress, _React$Component);\n\n    function Progress() {\n        _classCallCheck(this, Progress);\n\n        return _possibleConstructorReturn(this, (Progress.__proto__ || Object.getPrototypeOf(Progress)).apply(this, arguments));\n    }\n\n    _createClass(Progress, [{\n        key: 'render',\n        value: function render() {\n            var _classNames;\n\n            var props = this.props;\n\n            var prefixCls = props.prefixCls,\n                className = props.className,\n                _props$percent = props.percent,\n                percent = _props$percent === undefined ? 0 : _props$percent,\n                status = props.status,\n                format = props.format,\n                trailColor = props.trailColor,\n                size = props.size,\n                successPercent = props.successPercent,\n                type = props.type,\n                strokeWidth = props.strokeWidth,\n                width = props.width,\n                showInfo = props.showInfo,\n                _props$gapDegree = props.gapDegree,\n                gapDegree = _props$gapDegree === undefined ? 0 : _props$gapDegree,\n                gapPosition = props.gapPosition,\n                restProps = __rest(props, [\"prefixCls\", \"className\", \"percent\", \"status\", \"format\", \"trailColor\", \"size\", \"successPercent\", \"type\", \"strokeWidth\", \"width\", \"showInfo\", \"gapDegree\", \"gapPosition\"]);\n\n            var progressStatus = parseInt(successPercent ? successPercent.toString() : percent.toString(), 10) >= 100 && !('status' in props) ? 'success' : status || 'normal';\n            var progressInfo = void 0;\n            var progress = void 0;\n            var textFormatter = format || function (percentNumber) {\n                return percentNumber + '%';\n            };\n            if (showInfo) {\n                var text = void 0;\n                var iconType = type === 'circle' || type === 'dashboard' ? '' : '-circle';\n                if (progressStatus === 'exception') {\n                    text = format ? textFormatter(validProgress(percent)) : React.createElement(Icon, { type: 'cross' + iconType });\n                } else if (progressStatus === 'success') {\n                    text = format ? textFormatter(validProgress(percent)) : React.createElement(Icon, { type: 'check' + iconType });\n                } else {\n                    text = textFormatter(validProgress(percent));\n                }\n                progressInfo = React.createElement(\n                    'span',\n                    { className: prefixCls + '-text' },\n                    text\n                );\n            }\n            if (type === 'line') {\n                var percentStyle = {\n                    width: validProgress(percent) + '%',\n                    height: strokeWidth || (size === 'small' ? 6 : 8)\n                };\n                var successPercentStyle = {\n                    width: validProgress(successPercent) + '%',\n                    height: strokeWidth || (size === 'small' ? 6 : 8)\n                };\n                var successSegment = successPercent !== undefined ? React.createElement('div', { className: prefixCls + '-success-bg', style: successPercentStyle }) : null;\n                progress = React.createElement(\n                    'div',\n                    null,\n                    React.createElement(\n                        'div',\n                        { className: prefixCls + '-outer' },\n                        React.createElement(\n                            'div',\n                            { className: prefixCls + '-inner' },\n                            React.createElement('div', { className: prefixCls + '-bg', style: percentStyle }),\n                            successSegment\n                        )\n                    ),\n                    progressInfo\n                );\n            } else if (type === 'circle' || type === 'dashboard') {\n                var circleSize = width || 120;\n                var circleStyle = {\n                    width: circleSize,\n                    height: circleSize,\n                    fontSize: circleSize * 0.15 + 6\n                };\n                var circleWidth = strokeWidth || 6;\n                var gapPos = gapPosition || type === 'dashboard' && 'bottom' || 'top';\n                var gapDeg = gapDegree || type === 'dashboard' && 75;\n                progress = React.createElement(\n                    'div',\n                    { className: prefixCls + '-inner', style: circleStyle },\n                    React.createElement(Circle, { percent: validProgress(percent), strokeWidth: circleWidth, trailWidth: circleWidth, strokeColor: statusColorMap[progressStatus], trailColor: trailColor, prefixCls: prefixCls, gapDegree: gapDeg, gapPosition: gapPos }),\n                    progressInfo\n                );\n            }\n            var classString = classNames(prefixCls, (_classNames = {}, _defineProperty(_classNames, prefixCls + '-' + (type === 'dashboard' && 'circle' || type), true), _defineProperty(_classNames, prefixCls + '-status-' + progressStatus, true), _defineProperty(_classNames, prefixCls + '-show-info', showInfo), _defineProperty(_classNames, prefixCls + '-' + size, size), _classNames), className);\n            return React.createElement(\n                'div',\n                _extends({}, restProps, { className: classString }),\n                progress\n            );\n        }\n    }]);\n\n    return Progress;\n}(React.Component);\n\nexport default Progress;\n\nProgress.defaultProps = {\n    type: 'line',\n    percent: 0,\n    showInfo: true,\n    trailColor: '#f3f3f3',\n    prefixCls: 'ant-progress',\n    size: 'default'\n};\nProgress.propTypes = {\n    status: PropTypes.oneOf(['normal', 'exception', 'active', 'success']),\n    type: PropTypes.oneOf(['line', 'circle', 'dashboard']),\n    showInfo: PropTypes.bool,\n    percent: PropTypes.number,\n    width: PropTypes.number,\n    strokeWidth: PropTypes.number,\n    trailColor: PropTypes.string,\n    format: PropTypes.func,\n    gapDegree: PropTypes.number,\n    'default': PropTypes.oneOf(['default', 'small'])\n};"]},"metadata":{},"sourceType":"module"}