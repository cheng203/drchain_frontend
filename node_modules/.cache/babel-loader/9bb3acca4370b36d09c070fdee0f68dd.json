{"ast":null,"code":"import \"antd/lib/table/style/css\";\nimport _Table from \"antd/lib/table\";\nimport \"antd/lib/form/style/css\";\nimport _Form from \"antd/lib/form\";\nimport \"antd/lib/modal/style/css\";\nimport _Modal from \"antd/lib/modal\";\nimport \"antd/lib/dropdown/style/css\";\nimport _Dropdown from \"antd/lib/dropdown\";\nimport \"antd/lib/menu/style/css\";\nimport _Menu from \"antd/lib/menu\";\nimport \"antd/lib/row/style/css\";\nimport _Row from \"antd/lib/row\";\nimport \"antd/lib/col/style/css\";\nimport _Col from \"antd/lib/col\";\nimport \"antd/lib/card/style/css\";\nimport _Card from \"antd/lib/card\";\nimport \"antd/lib/button/style/css\";\nimport _Button from \"antd/lib/button\";\nimport \"antd/lib/icon/style/css\";\nimport _Icon from \"antd/lib/icon\";\nvar _jsxFileName = \"/Users/administrator/Desktop/DrChain/drchain_frontend/src/pages/Wellness/index.js\";\nimport React from 'react';\nimport './index.less';\nimport { Chart, Geom, Axis, Tooltip, Legend } from \"bizcharts\";\nexport default class Wellness extends React.Component {\n  constructor(props) {\n    super(props);\n    this.dataCategories = [\"Weekly Blood Pressure\", \"Weekly Stress Level\", \"Vaccination Records\"];\n    let i = 0;\n    const defaultCatagoryVisibility = [];\n\n    for (i = 0; i < this.dataCategories.length; i++) {\n      defaultCatagoryVisibility.push(true);\n    }\n\n    this.state = {\n      catagoryVisibility: defaultCatagoryVisibility\n    };\n  }\n\n  renderAllrecordsDropdown(key) {\n    const i = parseInt(key);\n    const visibility = this.state.catagoryVisibility[i];\n    const updatedVisibility = [...this.state.catagoryVisibility];\n    updatedVisibility[i] = !visibility;\n    this.setState({\n      catagoryVisibility: updatedVisibility\n    });\n  }\n\n  render() {\n    const category1 = this.state.catagoryVisibility[0] ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 14\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }\n    }, \"Weekly Blood Presure \", /*#__PURE__*/React.createElement(_Icon, {\n      type: \"caret-down\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 62\n      }\n    })), /*#__PURE__*/React.createElement(_Button, {\n      className: \"plusbutton\",\n      type: \"primary\",\n      size: \"small\",\n      icon: \"plus\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(_Card, {\n      className: \"chart\",\n      bordered: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Curved, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }\n    }))) : null;\n    const category2 = this.state.catagoryVisibility[1] ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 14\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }\n    }, \"Weekly Stress Level \", /*#__PURE__*/React.createElement(_Icon, {\n      type: \"caret-down\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 61\n      }\n    })), /*#__PURE__*/React.createElement(_Button, {\n      className: \"plusbutton\",\n      type: \"primary\",\n      size: \"small\",\n      icon: \"plus\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(_Card, {\n      className: \"chart\",\n      bordered: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Stress, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }\n    }))) : null;\n    const category3 = this.state.catagoryVisibility[2] ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 14\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }\n    }, \"Vaccination Records \", /*#__PURE__*/React.createElement(_Icon, {\n      type: \"caret-down\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 61\n      }\n    })), /*#__PURE__*/React.createElement(_Button, {\n      className: \"plusbutton\",\n      type: \"primary\",\n      size: \"small\",\n      icon: \"plus\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(_Card, {\n      className: \"chart\",\n      bordered: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Vaccination, {\n      className: \"table\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }\n    }))) : null;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(_Card, {\n      className: \"headerWrap\",\n      bordered: false,\n      bodyStyle: {\n        padding: \"24px 0\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(HeaderForm, {\n      dataCategories: this.dataCategories,\n      catagoryVisibility: this.state.catagoryVisibility,\n      dropdownOnClick: i => this.renderAllrecordsDropdown(i),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"bodyWrap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(_Row, {\n      justify: \"space-around\",\n      gutter: 30,\n      align: \"middle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(_Col, {\n      span: 14,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 25\n      }\n    }, category1, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 35\n      }\n    }), category2), /*#__PURE__*/React.createElement(_Col, {\n      span: 10,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 25\n      }\n    }, category3))));\n  }\n\n}\n\nclass HeaderForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      visible: false,\n      confirmLoading: false\n    };\n\n    this.showWellnessModification = () => {\n      this.setState({\n        visible: true\n      });\n    };\n\n    this.handleOk = () => {\n      this.setState({\n        confirmLoading: true\n      });\n      setTimeout(() => {\n        this.setState({\n          visible: false,\n          confirmLoading: false\n        });\n      }, 1000);\n    };\n\n    this.handleCancel = () => {\n      this.setState({\n        visible: false\n      });\n    };\n  }\n\n  getSelectedMenuKeys() {\n    let i = 0;\n    const selectedKeys = [];\n\n    for (i = 0; i < this.props.dataCategories.length; i++) {\n      if (this.props.catagoryVisibility[i]) {\n        selectedKeys.push(i.toString());\n      }\n    }\n\n    return selectedKeys;\n  }\n\n  handleDropdownItemClick(item, key) {\n    this.props.dropdownOnClick(key);\n  }\n\n  render() {\n    const menus = this.props.dataCategories.map((category, index) => {\n      return /*#__PURE__*/React.createElement(_Menu.Item, {\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 17\n        }\n      }, category);\n    });\n    const skeys = this.getSelectedMenuKeys();\n    const menu = /*#__PURE__*/React.createElement(_Menu, {\n      selectedKeys: skeys,\n      multiple: true,\n      onClick: ({\n        key\n      }) => this.props.dropdownOnClick(key),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 13\n      }\n    }, menus);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"header-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 48\n      }\n    }, \"Wellness Data\")), /*#__PURE__*/React.createElement(_Button, {\n      className: \"button-left\",\n      size: \"large\",\n      shape: \"circle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(_Icon, {\n      type: \"reload\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 81\n      }\n    })), /*#__PURE__*/React.createElement(_Button, {\n      className: \"button-left\",\n      size: \"large\",\n      shape: \"circle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(_Icon, {\n      type: \"more\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 81\n      }\n    })), /*#__PURE__*/React.createElement(_Dropdown, {\n      className: \"dropdown\",\n      overlay: menu,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      className: \"ant-dropdown-link\",\n      onClick: e => e.preventDefault(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 65\n      }\n    }, \" All Records \", /*#__PURE__*/React.createElement(_Icon, {\n      type: \"down\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 145\n      }\n    }))), /*#__PURE__*/React.createElement(_Button, {\n      className: \"button-right\",\n      type: \"primary\",\n      shape: \"round\",\n      size: \"large\",\n      onClick: this.showWellnessModification,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(_Icon, {\n      type: \"edit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 134\n      }\n    }), \"Customize\"), /*#__PURE__*/React.createElement(_Modal, {\n      title: /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 28\n        }\n      }, \"Customization\"),\n      visible: this.state.visible,\n      onOk: this.handleOk,\n      confirmLoading: this.state.confirmLoading,\n      onCancel: this.handleCancel,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nHeaderForm = _Form.create({})(HeaderForm);\n\nclass Curved extends React.Component {\n  render() {\n    const data = [{\n      day: \"Sat\",\n      type: \"Systolic\",\n      value: 108\n    }, {\n      day: \"Sat\",\n      type: \"Diastolic\",\n      value: 85\n    }, {\n      day: \"Sun\",\n      type: \"Systolic\",\n      value: 110\n    }, {\n      day: \"Sun\",\n      type: \"Diastolic\",\n      value: 94\n    }, {\n      day: \"Mon\",\n      type: \"Systolic\",\n      value: 116\n    }, {\n      day: \"Mon\",\n      type: \"Diastolic\",\n      value: 86\n    }, {\n      day: \"Tue\",\n      type: \"Systolic\",\n      value: 115\n    }, {\n      day: \"Tue\",\n      type: \"Diastolic\",\n      value: 93\n    }, {\n      day: \"Wed\",\n      type: \"Systolic\",\n      value: 105\n    }, {\n      day: \"Web\",\n      type: \"Diastolic\",\n      value: 82\n    }, {\n      day: \"Thu\",\n      type: \"Systolic\",\n      value: 115\n    }, {\n      day: \"Thu\",\n      type: \"Diastolic\",\n      value: 90\n    }, {\n      day: \"Fri\",\n      type: \"Systolic\",\n      value: 113\n    }, {\n      day: \"Fri\",\n      type: \"Diastolic\",\n      value: 87\n    }];\n    const cols = {\n      day: {\n        range: [0, 1]\n      }\n    };\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Chart, {\n      height: 270,\n      data: data,\n      scale: cols,\n      forceFit: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Legend, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Axis, {\n      name: \"days\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Axis, {\n      name: \"pressure\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Tooltip, {\n      crosshairs: {\n        type: \"y\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Geom, {\n      type: \"line\",\n      position: \"day*value\",\n      size: 2,\n      color: \"type\",\n      shape: \"smooth\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Geom, {\n      type: \"point\",\n      position: \"day*value\",\n      size: 4,\n      shape: \"circle\",\n      color: \"type\",\n      style: {\n        stroke: \"#fff\",\n        lineWidth: 1\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 21\n      }\n    })));\n  }\n\n}\n\nclass Stress extends React.Component {\n  render() {\n    const data = [{\n      day: \"Sat\",\n      value: 108\n    }, {\n      day: \"Sun\",\n      value: 110\n    }, {\n      day: \"Mon\",\n      value: 116\n    }, {\n      day: \"Tue\",\n      value: 115\n    }, {\n      day: \"Wed\",\n      value: 105\n    }, {\n      day: \"Thu\",\n      value: 115\n    }, {\n      day: \"Fri\",\n      value: 113\n    }];\n    const cols = {\n      day: {\n        range: [0, 1]\n      },\n      value: {\n        min: 50\n      }\n    };\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Chart, {\n      height: 270,\n      data: data,\n      scale: cols,\n      forceFit: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Legend, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Axis, {\n      name: \"days\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Axis, {\n      name: \"stresslevel\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Tooltip, {\n      crosshairs: {\n        type: \"y\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Geom, {\n      type: \"area\",\n      position: \"day*value\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Geom, {\n      type: \"line\",\n      position: \"day*value\",\n      size: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 17\n      }\n    })));\n  }\n\n}\n\nclass Vaccination extends React.Component {\n  render() {\n    const columns = [{\n      title: 'Vaccine',\n      dataIndex: 'Vaccine',\n      key: 'Vaccine',\n      align: 'center'\n    }, {\n      title: 'Dose',\n      dataIndex: 'Dose',\n      key: 'Dose',\n      align: 'center'\n    }, {\n      title: 'Date',\n      dataIndex: 'Date',\n      key: 'Date',\n      align: 'center'\n    }, {\n      title: 'Provider',\n      dataIndex: 'Provider',\n      key: 'Provider',\n      align: 'center'\n    }];\n    const dataSource = [{\n      Vaccine: \"MMR SC\",\n      Dose: \"0.5ml\",\n      Date: \"05/23/2020\",\n      Provider: \"Steve Chen\"\n    }, {\n      Vaccine: \"BCG SC\",\n      Dose: \"0.25ml\",\n      Date: \"05/23/2020\",\n      Provider: \"Austin Van\"\n    }, {\n      Vaccine: \"DTP TM\",\n      Dose: \"0.5ml\",\n      Date: \"09/20/2018\",\n      Provider: \"Xuanfeng Zhang\"\n    }, {\n      Vaccine: \"DT TM\",\n      Dose: \"0.25ml\",\n      Date: \"04/08/2017\",\n      Provider: \"Shrey Wilson\"\n    }, {\n      Vaccine: \"MMR SC\",\n      Dose: \"0.5ml\",\n      Date: \"10/02/2015\",\n      Provider: \"Steve Chen\"\n    }];\n    return /*#__PURE__*/React.createElement(_Table, {\n      forceFit: true,\n      size: \"middle\",\n      loading: false,\n      dataSource: dataSource,\n      columns: columns,\n      aligh: \"center\",\n      rowClassName: (record, index) => 'table-row-style',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 437,\n        columnNumber: 13\n      }\n    });\n  }\n\n}","map":{"version":3,"sources":["/Users/administrator/Desktop/DrChain/drchain_frontend/src/pages/Wellness/index.js"],"names":["React","Chart","Geom","Axis","Tooltip","Legend","Wellness","Component","constructor","props","dataCategories","i","defaultCatagoryVisibility","length","push","state","catagoryVisibility","renderAllrecordsDropdown","key","parseInt","visibility","updatedVisibility","setState","render","category1","category2","category3","padding","HeaderForm","visible","confirmLoading","showWellnessModification","handleOk","setTimeout","handleCancel","getSelectedMenuKeys","selectedKeys","toString","handleDropdownItemClick","item","dropdownOnClick","menus","map","category","index","skeys","menu","e","preventDefault","create","Curved","data","day","type","value","cols","range","stroke","lineWidth","Stress","min","Vaccination","columns","title","dataIndex","align","dataSource","Vaccine","Dose","Date","Provider","record"],"mappings":"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","sourcesContent":["import React from 'react'\nimport './index.less'\nimport {Button, Card, Col, Dropdown, Form, Icon, Menu, Modal, Row, Table} from 'antd'\nimport {\n    Chart,\n    Geom,\n    Axis,\n    Tooltip,\n    Legend,\n  } from \"bizcharts\";\n\n\n\nexport default class Wellness extends React.Component {\n\n    dataCategories= [\"Weekly Blood Pressure\", \"Weekly Stress Level\",\n    \"Vaccination Records\"];\n\n    constructor(props) {\n        super(props);\n\n        let i=0\n        const defaultCatagoryVisibility = [];\n\n        for (i=0; i<this.dataCategories.length; i++){\n            defaultCatagoryVisibility.push(true);\n        }\n\n        this.state = {\n            catagoryVisibility:defaultCatagoryVisibility\n        };\n\n    };\n    \n    renderAllrecordsDropdown(key){\n        const i = parseInt(key)\n        const visibility = this.state.catagoryVisibility[i];\n        const updatedVisibility = [...this.state.catagoryVisibility];\n        updatedVisibility[i] = !visibility;\n        this.setState({\n            catagoryVisibility: updatedVisibility\n        });\n    };\n\n    render(){\n        const category1 = (this.state.catagoryVisibility[0]?\n            (<div>\n                <span className=\"title\">Weekly Blood Presure <Icon type=\"caret-down\" /></span>\n                <Button className='plusbutton' type={\"primary\"} size=\"small\" icon=\"plus\" />\n                <Card className='chart' bordered={false} >\n                    <Curved/>\n                </Card>\n             </div>\n           ):null);\n\n        const category2 = (this.state.catagoryVisibility[1]?\n            (<div>\n                <span className=\"title\">Weekly Stress Level <Icon type=\"caret-down\" /></span>\n                <Button className='plusbutton' type={\"primary\"} size=\"small\" icon=\"plus\" />\n                <Card className='chart' bordered={false} >\n                    <Stress/>\n                </Card>\n             </div>\n           ):null);\n\n        const category3 = (this.state.catagoryVisibility[2]?\n            (<div>\n                <span className=\"title\">Vaccination Records <Icon type=\"caret-down\" /></span>\n                <Button className='plusbutton' type={\"primary\"} size=\"small\" icon=\"plus\" />\n                <Card className='chart' bordered={false} >\n                    <Vaccination className=\"table\"/>\n                </Card>\n             </div>\n           ):null);\n\n        return (\n            <div className=\"container\">\n                <Card className=\"headerWrap\" bordered={false} bodyStyle={{padding: \"24px 0\"}}>\n                    <HeaderForm \n                        dataCategories={this.dataCategories} \n                        catagoryVisibility={this.state.catagoryVisibility}\n                        dropdownOnClick={(i) => this.renderAllrecordsDropdown(i)}/>\n                </Card>\n\n                <div className = \"bodyWrap\">\n                    <Row justify=\"space-around\" gutter={30} align=\"middle\">\n                        <Col span={14}>\n                            {category1}\n                            <br /><br />\n                            {category2}\n                        </Col>\n                        <Col span={10}>\n                            {category3}\n                        </Col>\n                    </Row>\n                </div>\n            </div>\n        );\n    };\n}\n\n\nclass HeaderForm extends React.Component{\n\n    constructor(props) {\n        super(props);\n    }\n\n    state = {\n        visible: false,\n        confirmLoading: false,\n    };\n\n    showWellnessModification = () => {\n        this.setState({\n            visible: true,\n        });\n    };\n\n    handleOk = () => {\n        this.setState({\n            confirmLoading: true,\n        });\n        setTimeout(()=>{\n            this.setState({\n                visible: false,\n                confirmLoading: false,\n            });\n        }, 1000);\n    };\n\n    handleCancel = () => {\n        this.setState({\n            visible: false,\n        });\n    };\n\n    getSelectedMenuKeys(){\n        let i=0;\n        const selectedKeys = [];\n        for(i=0;i<this.props.dataCategories.length;i++){\n            if(this.props.catagoryVisibility[i]){\n                selectedKeys.push(i.toString());\n            }\n        }\n        return selectedKeys;\n    };\n\n    handleDropdownItemClick(item, key){\n        this.props.dropdownOnClick(key);\n    }\n\n    render(){\n        const menus = this.props.dataCategories.map((category, index) => {\n            return (\n                <Menu.Item key={index}>\n                    {category}\n                </Menu.Item>\n            )\n        });\n        const skeys = this.getSelectedMenuKeys();\n        const menu = (\n            <Menu selectedKeys       ={skeys}\n                  multiple           ={true}\n                  onClick            ={({key}) => this.props.dropdownOnClick(key)}>\n                {menus}\n            </Menu>\n        );\n        return (\n            <div className=\"header\">\n                <span className=\"header-title\"><b>Wellness Data</b></span>\n                <Button className=\"button-left\" size={\"large\"} shape = \"circle\"><Icon type=\"reload\" /></Button>\n                <Button className=\"button-left\" size={\"large\"} shape = \"circle\"><Icon type=\"more\" /></Button>\n                <Dropdown className=\"dropdown\" overlay = {menu}><a className=\"ant-dropdown-link\" onClick={e => e.preventDefault()}> All Records <Icon type=\"down\"/></a></Dropdown>\n                <Button className=\"button-right\" type=\"primary\" shape=\"round\" size={\"large\"} onClick={this.showWellnessModification}><Icon type=\"edit\" />Customize</Button>\n                <Modal\n                    title={<span>Customization</span>}\n                    visible={this.state.visible}\n                    onOk={this.handleOk}\n                    confirmLoading={this.state.confirmLoading}\n                    onCancel={this.handleCancel}\n                >\n                </Modal>\n            </div>\n        );\n    };\n}\nHeaderForm = Form.create({})(HeaderForm);\n\n\nclass Curved extends React.Component {\n    render() {\n        const data = [\n        {\n            day: \"Sat\",\n            type: \"Systolic\",\n            value: 108\n        },\n        {\n            day: \"Sat\",\n            type: \"Diastolic\",\n            value: 85\n        },\n        {\n            day: \"Sun\",\n            type: \"Systolic\",\n            value: 110\n        },\n        {\n            day: \"Sun\",\n            type: \"Diastolic\",\n            value: 94\n        },\n        {\n            day: \"Mon\",\n            type: \"Systolic\",\n            value: 116\n        },\n        {\n            day: \"Mon\",\n            type: \"Diastolic\",\n            value: 86\n        },\n        {\n            day: \"Tue\",\n            type: \"Systolic\",\n            value: 115\n        },\n        {\n            day: \"Tue\",\n            type: \"Diastolic\",\n            value: 93\n        },\n        {\n            day: \"Wed\",\n            type: \"Systolic\",\n            value: 105\n        },\n        {\n            day: \"Web\",\n            type: \"Diastolic\",\n            value: 82\n        },\n        {\n            day: \"Thu\",\n            type: \"Systolic\",\n            value: 115\n        },\n        {\n            day: \"Thu\",\n            type: \"Diastolic\",\n            value: 90\n        },\n        {\n            day: \"Fri\",\n            type: \"Systolic\",\n            value: 113\n        },\n        {\n            day: \"Fri\",\n            type: \"Diastolic\",\n            value: 87\n        },\n        ];\n        const cols = {\n            day: {\n                range: [0, 1]\n            }\n        };\n        return (\n            <div>\n                <Chart height={270} data={data} scale={cols} forceFit>\n                    <Legend />\n                    <Axis name=\"days\" />\n                    <Axis\n                        name=\"pressure\"\n                    />\n                    <Tooltip\n                        crosshairs={{\n                        type: \"y\"\n                    }}\n                    />\n                    <Geom\n                        type=\"line\"\n                        position=\"day*value\"\n                        size={2}\n                        color={\"type\"}\n                        shape={\"smooth\"}\n                    />\n                    <Geom\n                        type=\"point\"\n                        position=\"day*value\"\n                        size={4}\n                        shape={\"circle\"}\n                        color={\"type\"}\n                        style={{\n                            stroke: \"#fff\",\n                            lineWidth: 1\n                        }}\n                    />\n                </Chart>\n             </div>\n        );\n    }\n  }\n\n\n  class Stress extends React.Component {\n        render() {\n            const data = [\n            {\n                day: \"Sat\",\n                value: 108\n            },\n            {\n                day: \"Sun\",\n                value: 110\n            },\n            {\n                day: \"Mon\",\n                value: 116\n            },\n            {\n                day: \"Tue\",\n                value: 115\n            },\n            {\n                day: \"Wed\",\n                value: 105\n            },\n            {\n                day: \"Thu\",\n                value: 115\n            },\n            {\n                day: \"Fri\",\n                value: 113\n            },\n        ];\n        const cols = {\n            day: {\n                range: [0, 1]\n            },\n            value: {\n                min:  50\n            }\n        };\n        return (\n            <div>\n                <Chart height={270} data={data} scale={cols} forceFit>\n                <Legend />\n                <Axis name=\"days\" />\n                <Axis\n                    name=\"stresslevel\"\n                />\n                <Tooltip\n                    crosshairs={{type: \"y\"}}\n                />\n                <Geom\n                    type=\"area\"\n                    position=\"day*value\"\n                />\n                <Geom\n                    type=\"line\"\n                    position=\"day*value\"\n                    size={2}\n                />\n                </Chart>\n            </div>\n        );\n    }\n  }\n\n\n\n  class Vaccination extends React.Component {\n    render(){\n        const columns = [\n            {\n              title: 'Vaccine',\n              dataIndex: 'Vaccine',\n              key: 'Vaccine',\n              align: 'center',\n            },\n            {\n              title: 'Dose',\n              dataIndex: 'Dose',\n              key: 'Dose',\n              align: 'center',\n            },\n            {\n              title: 'Date',\n              dataIndex: 'Date',\n              key: 'Date',\n              align: 'center',\n            },\n            {\n              title: 'Provider',\n              dataIndex: 'Provider',\n              key: 'Provider',\n              align: 'center',\n            },\n        ];\n        const dataSource = [\n            {\n                Vaccine: \"MMR SC\",\n                Dose: \"0.5ml\",\n                Date: \"05/23/2020\",\n                Provider: \"Steve Chen\",\n            },\n            {\n                Vaccine: \"BCG SC\",\n                Dose: \"0.25ml\",\n                Date: \"05/23/2020\",\n                Provider: \"Austin Van\",\n            },\n            {\n                Vaccine: \"DTP TM\",\n                Dose: \"0.5ml\",\n                Date: \"09/20/2018\",\n                Provider: \"Xuanfeng Zhang\",\n            },\n            {\n                Vaccine: \"DT TM\",\n                Dose: \"0.25ml\",\n                Date: \"04/08/2017\",\n                Provider: \"Shrey Wilson\",\n            },\n            {\n                Vaccine: \"MMR SC\",\n                Dose: \"0.5ml\",\n                Date: \"10/02/2015\",\n                Provider: \"Steve Chen\",\n            },\n        ];\n        return (\n            <Table \n            forceFit \n                size=\"middle\"\n                loading={false}\n                dataSource={dataSource}\n                columns={columns}\n                aligh= {\"center\"}\n                rowClassName = {(record, index) => 'table-row-style'}\n            />\n        )\n    }\n  }"]},"metadata":{},"sourceType":"module"}